
Sprint 10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  0000286e  00002902  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000286e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000211  00800144  00800144  00002946  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002946  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000029a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  000029e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f47  00000000  00000000  00002ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008cf  00000000  00000000  000039fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d33  00000000  00000000  000042ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000438  00000000  00000000  00005000  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000071f  00000000  00000000  00005438  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000951  00000000  00000000  00005b57  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000064a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__ctors_end>
       4:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__vector_1>
       8:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
       c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      10:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      14:	0c 94 00 02 	jmp	0x400	; 0x400 <__vector_5>
      18:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      1c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      20:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      24:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      28:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      2c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      30:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      34:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      38:	0c 94 70 01 	jmp	0x2e0	; 0x2e0 <__vector_14>
      3c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      40:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      44:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      48:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      4c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      50:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      54:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      58:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      5c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      60:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      64:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__bad_interrupt>
      68:	08 00       	.word	0x0008	; ????
      6a:	00 00       	nop
      6c:	be 92       	st	-X, r11
      6e:	24 49       	sbci	r18, 0x94	; 148
      70:	12 3e       	cpi	r17, 0xE2	; 226
      72:	ab aa       	std	Y+51, r10	; 0x33
      74:	aa 2a       	or	r10, r26
      76:	be cd       	rjmp	.-1156   	; 0xfffffbf4 <__eeprom_end+0xff7efbf4>
      78:	cc cc       	rjmp	.-1640   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
      7a:	4c 3e       	cpi	r20, 0xEC	; 236
      7c:	00 00       	nop
      7e:	00 80       	ld	r0, Z
      80:	be ab       	std	Y+54, r27	; 0x36
      82:	aa aa       	std	Y+50, r10	; 0x32
      84:	aa 3e       	cpi	r26, 0xEA	; 234
      86:	00 00       	nop
      88:	00 00       	nop
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	00 00       	nop
      92:	00 00       	nop
      94:	00 08       	sbc	r0, r0
      96:	41 78       	andi	r20, 0x81	; 129
      98:	d3 bb       	out	0x13, r29	; 19
      9a:	43 87       	std	Z+11, r20	; 0x0b
      9c:	d1 13       	cpse	r29, r17
      9e:	3d 19       	sub	r19, r13
      a0:	0e 3c       	cpi	r16, 0xCE	; 206
      a2:	c3 bd       	out	0x23, r28	; 35
      a4:	42 82       	std	Z+2, r4	; 0x02
      a6:	ad 2b       	or	r26, r29
      a8:	3e 68       	ori	r19, 0x8E	; 142
      aa:	ec 82       	std	Y+4, r14	; 0x04
      ac:	76 be       	out	0x36, r7	; 54
      ae:	d9 8f       	std	Y+25, r29	; 0x19
      b0:	e1 a9       	ldd	r30, Z+49	; 0x31
      b2:	3e 4c       	sbci	r19, 0xCE	; 206
      b4:	80 ef       	ldi	r24, 0xF0	; 240
      b6:	ff be       	out	0x3f, r15	; 63
      b8:	01 c4       	rjmp	.+2050   	; 0x8bc <__DATA_REGION_LENGTH__+0xbc>
      ba:	ff 7f       	andi	r31, 0xFF	; 255
      bc:	3f 00       	.word	0x003f	; ????
      be:	00 00       	nop
	...

000000c2 <CHARSET>:
      c2:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      d2:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      e2:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      f2:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
     102:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     112:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     122:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     132:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     142:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     152:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     162:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     172:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     182:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     192:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     1a2:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     1b2:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1c2:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1d2:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1e2:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1f2:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     202:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     212:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     222:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     232:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     242:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     252:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     262:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     272:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     282:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     292:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

000002a2 <__ctors_end>:
     2a2:	11 24       	eor	r1, r1
     2a4:	1f be       	out	0x3f, r1	; 63
     2a6:	cf ef       	ldi	r28, 0xFF	; 255
     2a8:	d8 e0       	ldi	r29, 0x08	; 8
     2aa:	de bf       	out	0x3e, r29	; 62
     2ac:	cd bf       	out	0x3d, r28	; 61

000002ae <__do_copy_data>:
     2ae:	11 e0       	ldi	r17, 0x01	; 1
     2b0:	a0 e0       	ldi	r26, 0x00	; 0
     2b2:	b1 e0       	ldi	r27, 0x01	; 1
     2b4:	ee e6       	ldi	r30, 0x6E	; 110
     2b6:	f8 e2       	ldi	r31, 0x28	; 40
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__do_copy_data+0x10>
     2ba:	05 90       	lpm	r0, Z+
     2bc:	0d 92       	st	X+, r0
     2be:	a4 34       	cpi	r26, 0x44	; 68
     2c0:	b1 07       	cpc	r27, r17
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <__do_copy_data+0xc>

000002c4 <__do_clear_bss>:
     2c4:	23 e0       	ldi	r18, 0x03	; 3
     2c6:	a4 e4       	ldi	r26, 0x44	; 68
     2c8:	b1 e0       	ldi	r27, 0x01	; 1
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <.do_clear_bss_start>

000002cc <.do_clear_bss_loop>:
     2cc:	1d 92       	st	X+, r1

000002ce <.do_clear_bss_start>:
     2ce:	a5 35       	cpi	r26, 0x55	; 85
     2d0:	b2 07       	cpc	r27, r18
     2d2:	e1 f7       	brne	.-8      	; 0x2cc <.do_clear_bss_loop>
     2d4:	0e 94 c2 09 	call	0x1384	; 0x1384 <main>
     2d8:	0c 94 35 14 	jmp	0x286a	; 0x286a <_exit>

000002dc <__bad_interrupt>:
     2dc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002e0 <__vector_14>:
void leituraADC_sensores(uint8_t *flag_disparo);
void USART_Transmit(unsigned char data);

//TRATAMENTO DE INTERRUPÇÕES
ISR(TIMER0_COMPA_vect)
{
     2e0:	1f 92       	push	r1
     2e2:	0f 92       	push	r0
     2e4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     2e8:	0f 92       	push	r0
     2ea:	11 24       	eor	r1, r1
     2ec:	2f 93       	push	r18
     2ee:	3f 93       	push	r19
     2f0:	4f 93       	push	r20
     2f2:	5f 93       	push	r21
     2f4:	6f 93       	push	r22
     2f6:	7f 93       	push	r23
     2f8:	8f 93       	push	r24
     2fa:	9f 93       	push	r25
     2fc:	af 93       	push	r26
     2fe:	bf 93       	push	r27
     300:	ef 93       	push	r30
     302:	ff 93       	push	r31
     304:	cf 93       	push	r28
     306:	df 93       	push	r29
     308:	cd b7       	in	r28, 0x3d	; 61
     30a:	de b7       	in	r29, 0x3e	; 62
	tempo_ms++;
     30c:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <tempo_ms>
     310:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <tempo_ms+0x1>
     314:	a0 91 49 01 	lds	r26, 0x0149	; 0x800149 <tempo_ms+0x2>
     318:	b0 91 4a 01 	lds	r27, 0x014A	; 0x80014a <tempo_ms+0x3>
     31c:	01 96       	adiw	r24, 0x01	; 1
     31e:	a1 1d       	adc	r26, r1
     320:	b1 1d       	adc	r27, r1
     322:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <tempo_ms>
     326:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <tempo_ms+0x1>
     32a:	a0 93 49 01 	sts	0x0149, r26	; 0x800149 <tempo_ms+0x2>
     32e:	b0 93 4a 01 	sts	0x014A, r27	; 0x80014a <tempo_ms+0x3>
	if((tempo_ms % 5000)==0)
     332:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <tempo_ms>
     336:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <tempo_ms+0x1>
     33a:	a0 91 49 01 	lds	r26, 0x0149	; 0x800149 <tempo_ms+0x2>
     33e:	b0 91 4a 01 	lds	r27, 0x014A	; 0x80014a <tempo_ms+0x3>
     342:	28 e8       	ldi	r18, 0x88	; 136
     344:	33 e1       	ldi	r19, 0x13	; 19
     346:	40 e0       	ldi	r20, 0x00	; 0
     348:	50 e0       	ldi	r21, 0x00	; 0
     34a:	bc 01       	movw	r22, r24
     34c:	cd 01       	movw	r24, r26
     34e:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <__udivmodsi4>
     352:	dc 01       	movw	r26, r24
     354:	cb 01       	movw	r24, r22
     356:	89 2b       	or	r24, r25
     358:	8a 2b       	or	r24, r26
     35a:	8b 2b       	or	r24, r27
     35c:	19 f4       	brne	.+6      	; 0x364 <__vector_14+0x84>
		flag_5000ms=1;
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <flag_5000ms>
	if((tempo_ms % 500)==0)
     364:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <tempo_ms>
     368:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <tempo_ms+0x1>
     36c:	a0 91 49 01 	lds	r26, 0x0149	; 0x800149 <tempo_ms+0x2>
     370:	b0 91 4a 01 	lds	r27, 0x014A	; 0x80014a <tempo_ms+0x3>
     374:	24 ef       	ldi	r18, 0xF4	; 244
     376:	31 e0       	ldi	r19, 0x01	; 1
     378:	40 e0       	ldi	r20, 0x00	; 0
     37a:	50 e0       	ldi	r21, 0x00	; 0
     37c:	bc 01       	movw	r22, r24
     37e:	cd 01       	movw	r24, r26
     380:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <__udivmodsi4>
     384:	dc 01       	movw	r26, r24
     386:	cb 01       	movw	r24, r22
     388:	89 2b       	or	r24, r25
     38a:	8a 2b       	or	r24, r26
     38c:	8b 2b       	or	r24, r27
     38e:	19 f4       	brne	.+6      	; 0x396 <__vector_14+0xb6>
		flag_500ms=1;
     390:	81 e0       	ldi	r24, 0x01	; 1
     392:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <flag_500ms>

	
}
     396:	00 00       	nop
     398:	df 91       	pop	r29
     39a:	cf 91       	pop	r28
     39c:	ff 91       	pop	r31
     39e:	ef 91       	pop	r30
     3a0:	bf 91       	pop	r27
     3a2:	af 91       	pop	r26
     3a4:	9f 91       	pop	r25
     3a6:	8f 91       	pop	r24
     3a8:	7f 91       	pop	r23
     3aa:	6f 91       	pop	r22
     3ac:	5f 91       	pop	r21
     3ae:	4f 91       	pop	r20
     3b0:	3f 91       	pop	r19
     3b2:	2f 91       	pop	r18
     3b4:	0f 90       	pop	r0
     3b6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     3ba:	0f 90       	pop	r0
     3bc:	1f 90       	pop	r1
     3be:	18 95       	reti

000003c0 <__vector_1>:

ISR(INT0_vect)
{
     3c0:	1f 92       	push	r1
     3c2:	0f 92       	push	r0
     3c4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     3c8:	0f 92       	push	r0
     3ca:	11 24       	eor	r1, r1
     3cc:	8f 93       	push	r24
     3ce:	9f 93       	push	r25
     3d0:	cf 93       	push	r28
     3d2:	df 93       	push	r29
     3d4:	cd b7       	in	r28, 0x3d	; 61
     3d6:	de b7       	in	r29, 0x3e	; 62
	num_carros++;
     3d8:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <num_carros>
     3dc:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <num_carros+0x1>
     3e0:	01 96       	adiw	r24, 0x01	; 1
     3e2:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <num_carros+0x1>
     3e6:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <num_carros>
};
     3ea:	00 00       	nop
     3ec:	df 91       	pop	r29
     3ee:	cf 91       	pop	r28
     3f0:	9f 91       	pop	r25
     3f2:	8f 91       	pop	r24
     3f4:	0f 90       	pop	r0
     3f6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     3fa:	0f 90       	pop	r0
     3fc:	1f 90       	pop	r1
     3fe:	18 95       	reti

00000400 <__vector_5>:

ISR(PCINT2_vect)
{
     400:	1f 92       	push	r1
     402:	0f 92       	push	r0
     404:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     408:	0f 92       	push	r0
     40a:	11 24       	eor	r1, r1
     40c:	cf 92       	push	r12
     40e:	df 92       	push	r13
     410:	ef 92       	push	r14
     412:	ff 92       	push	r15
     414:	0f 93       	push	r16
     416:	1f 93       	push	r17
     418:	2f 93       	push	r18
     41a:	3f 93       	push	r19
     41c:	4f 93       	push	r20
     41e:	5f 93       	push	r21
     420:	6f 93       	push	r22
     422:	7f 93       	push	r23
     424:	8f 93       	push	r24
     426:	9f 93       	push	r25
     428:	af 93       	push	r26
     42a:	bf 93       	push	r27
     42c:	ef 93       	push	r30
     42e:	ff 93       	push	r31
     430:	cf 93       	push	r28
     432:	df 93       	push	r29
     434:	cd b7       	in	r28, 0x3d	; 61
     436:	de b7       	in	r29, 0x3e	; 62
	if((PIND&0b00000010)==0 && semaforo.tempo_vermelho_ms<=3000 && semaforo.tempo_verde_ms >= 5000){
     438:	89 e2       	ldi	r24, 0x29	; 41
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	fc 01       	movw	r30, r24
     43e:	80 81       	ld	r24, Z
     440:	88 2f       	mov	r24, r24
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	82 70       	andi	r24, 0x02	; 2
     446:	99 27       	eor	r25, r25
     448:	89 2b       	or	r24, r25
     44a:	d1 f4       	brne	.+52     	; 0x480 <__vector_5+0x80>
     44c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     450:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
     454:	89 3b       	cpi	r24, 0xB9	; 185
     456:	9b 40       	sbci	r25, 0x0B	; 11
     458:	98 f4       	brcc	.+38     	; 0x480 <__vector_5+0x80>
     45a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     45e:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     462:	88 38       	cpi	r24, 0x88	; 136
     464:	93 41       	sbci	r25, 0x13	; 19
     466:	60 f0       	brcs	.+24     	; 0x480 <__vector_5+0x80>
		semaforo.tempo_verde_ms=1000;
     468:	88 ee       	ldi	r24, 0xE8	; 232
     46a:	93 e0       	ldi	r25, 0x03	; 3
     46c:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     470:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
		semaforo.tempo_vermelho_ms=5000;
     474:	88 e8       	ldi	r24, 0x88	; 136
     476:	93 e1       	ldi	r25, 0x13	; 19
     478:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
     47c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	}
		
			

	
	if((PIND&0b00010000)==0)
     480:	89 e2       	ldi	r24, 0x29	; 41
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	fc 01       	movw	r30, r24
     486:	80 81       	ld	r24, Z
     488:	88 2f       	mov	r24, r24
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	80 71       	andi	r24, 0x10	; 16
     48e:	99 27       	eor	r25, r25
     490:	89 2b       	or	r24, r25
     492:	09 f0       	breq	.+2      	; 0x496 <__vector_5+0x96>
     494:	57 c0       	rjmp	.+174    	; 0x544 <__vector_5+0x144>
	{
		switch(selecao_parametro)
     496:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
     49a:	88 2f       	mov	r24, r24
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	81 30       	cpi	r24, 0x01	; 1
     4a0:	91 05       	cpc	r25, r1
     4a2:	a9 f0       	breq	.+42     	; 0x4ce <__vector_5+0xce>
     4a4:	82 30       	cpi	r24, 0x02	; 2
     4a6:	91 05       	cpc	r25, r1
     4a8:	1c f4       	brge	.+6      	; 0x4b0 <__vector_5+0xb0>
     4aa:	89 2b       	or	r24, r25
     4ac:	39 f0       	breq	.+14     	; 0x4bc <__vector_5+0xbc>
     4ae:	4a c0       	rjmp	.+148    	; 0x544 <__vector_5+0x144>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	91 05       	cpc	r25, r1
     4b4:	f1 f0       	breq	.+60     	; 0x4f2 <__vector_5+0xf2>
     4b6:	03 97       	sbiw	r24, 0x03	; 3
     4b8:	71 f1       	breq	.+92     	; 0x516 <__vector_5+0x116>
     4ba:	44 c0       	rjmp	.+136    	; 0x544 <__vector_5+0x144>
		{
			case Sel_modo:
				semaforo.modo =! semaforo.modo;
     4bc:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4c0:	81 e0       	ldi	r24, 0x01	; 1
     4c2:	99 23       	and	r25, r25
     4c4:	09 f0       	breq	.+2      	; 0x4c8 <__vector_5+0xc8>
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
				break;
     4cc:	3b c0       	rjmp	.+118    	; 0x544 <__vector_5+0x144>
			case Sel_tempo_verde:
				if(semaforo.tempo_verde_ms <=8000)
     4ce:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4d2:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     4d6:	81 34       	cpi	r24, 0x41	; 65
     4d8:	9f 41       	sbci	r25, 0x1F	; 31
     4da:	78 f5       	brcc	.+94     	; 0x53a <__vector_5+0x13a>
					semaforo.tempo_verde_ms += 1000;
     4dc:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4e0:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     4e4:	88 51       	subi	r24, 0x18	; 24
     4e6:	9c 4f       	sbci	r25, 0xFC	; 252
     4e8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     4ec:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
				break;
     4f0:	24 c0       	rjmp	.+72     	; 0x53a <__vector_5+0x13a>
			case Sel_tempo_vermelho:
				if(semaforo.tempo_vermelho_ms <=8000)
     4f2:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     4f6:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
     4fa:	81 34       	cpi	r24, 0x41	; 65
     4fc:	9f 41       	sbci	r25, 0x1F	; 31
     4fe:	f8 f4       	brcc	.+62     	; 0x53e <__vector_5+0x13e>
					semaforo.tempo_vermelho_ms += 1000;
     500:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     504:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
     508:	88 51       	subi	r24, 0x18	; 24
     50a:	9c 4f       	sbci	r25, 0xFC	; 252
     50c:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
     510:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
				break;
     514:	14 c0       	rjmp	.+40     	; 0x53e <__vector_5+0x13e>
			case Sel_tempo_amarelo:
				if(semaforo.tempo_amarelo_ms <=8000)
     516:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
     51a:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
     51e:	81 34       	cpi	r24, 0x41	; 65
     520:	9f 41       	sbci	r25, 0x1F	; 31
     522:	78 f4       	brcc	.+30     	; 0x542 <__vector_5+0x142>
					semaforo.tempo_amarelo_ms += 1000;
     524:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
     528:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
     52c:	88 51       	subi	r24, 0x18	; 24
     52e:	9c 4f       	sbci	r25, 0xFC	; 252
     530:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
     534:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
				break;
     538:	04 c0       	rjmp	.+8      	; 0x542 <__vector_5+0x142>
				semaforo.modo =! semaforo.modo;
				break;
			case Sel_tempo_verde:
				if(semaforo.tempo_verde_ms <=8000)
					semaforo.tempo_verde_ms += 1000;
				break;
     53a:	00 00       	nop
     53c:	03 c0       	rjmp	.+6      	; 0x544 <__vector_5+0x144>
			case Sel_tempo_vermelho:
				if(semaforo.tempo_vermelho_ms <=8000)
					semaforo.tempo_vermelho_ms += 1000;
				break;
     53e:	00 00       	nop
     540:	01 c0       	rjmp	.+2      	; 0x544 <__vector_5+0x144>
			case Sel_tempo_amarelo:
				if(semaforo.tempo_amarelo_ms <=8000)
					semaforo.tempo_amarelo_ms += 1000;
				break;
     542:	00 00       	nop
		}
	}
	if((PIND&0b00100000)==0)
     544:	89 e2       	ldi	r24, 0x29	; 41
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	fc 01       	movw	r30, r24
     54a:	80 81       	ld	r24, Z
     54c:	88 2f       	mov	r24, r24
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	80 72       	andi	r24, 0x20	; 32
     552:	99 27       	eor	r25, r25
     554:	89 2b       	or	r24, r25
     556:	09 f0       	breq	.+2      	; 0x55a <__vector_5+0x15a>
     558:	57 c0       	rjmp	.+174    	; 0x608 <__vector_5+0x208>
	{
		switch(selecao_parametro)
     55a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
     55e:	88 2f       	mov	r24, r24
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	81 30       	cpi	r24, 0x01	; 1
     564:	91 05       	cpc	r25, r1
     566:	a9 f0       	breq	.+42     	; 0x592 <__vector_5+0x192>
     568:	82 30       	cpi	r24, 0x02	; 2
     56a:	91 05       	cpc	r25, r1
     56c:	1c f4       	brge	.+6      	; 0x574 <__vector_5+0x174>
     56e:	89 2b       	or	r24, r25
     570:	39 f0       	breq	.+14     	; 0x580 <__vector_5+0x180>
     572:	4a c0       	rjmp	.+148    	; 0x608 <__vector_5+0x208>
     574:	82 30       	cpi	r24, 0x02	; 2
     576:	91 05       	cpc	r25, r1
     578:	f1 f0       	breq	.+60     	; 0x5b6 <__vector_5+0x1b6>
     57a:	03 97       	sbiw	r24, 0x03	; 3
     57c:	71 f1       	breq	.+92     	; 0x5da <__vector_5+0x1da>
     57e:	44 c0       	rjmp	.+136    	; 0x608 <__vector_5+0x208>
		{
			case Sel_modo:
			semaforo.modo =! semaforo.modo;
     580:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     584:	81 e0       	ldi	r24, 0x01	; 1
     586:	99 23       	and	r25, r25
     588:	09 f0       	breq	.+2      	; 0x58c <__vector_5+0x18c>
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			break;
     590:	3b c0       	rjmp	.+118    	; 0x608 <__vector_5+0x208>
			case Sel_tempo_verde:
			if(semaforo.tempo_verde_ms >= 2000)
     592:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     596:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     59a:	80 3d       	cpi	r24, 0xD0	; 208
     59c:	97 40       	sbci	r25, 0x07	; 7
     59e:	78 f1       	brcs	.+94     	; 0x5fe <__vector_5+0x1fe>
			semaforo.tempo_verde_ms -= 1000;
     5a0:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5a4:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     5a8:	88 5e       	subi	r24, 0xE8	; 232
     5aa:	93 40       	sbci	r25, 0x03	; 3
     5ac:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     5b0:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
			break;
     5b4:	24 c0       	rjmp	.+72     	; 0x5fe <__vector_5+0x1fe>
			case Sel_tempo_vermelho:
			if(semaforo.tempo_vermelho_ms >= 2000)
     5b6:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     5ba:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
     5be:	80 3d       	cpi	r24, 0xD0	; 208
     5c0:	97 40       	sbci	r25, 0x07	; 7
     5c2:	f8 f0       	brcs	.+62     	; 0x602 <__vector_5+0x202>
			semaforo.tempo_vermelho_ms -= 1000;
     5c4:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     5c8:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
     5cc:	88 5e       	subi	r24, 0xE8	; 232
     5ce:	93 40       	sbci	r25, 0x03	; 3
     5d0:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
     5d4:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
			break;
     5d8:	14 c0       	rjmp	.+40     	; 0x602 <__vector_5+0x202>
			case Sel_tempo_amarelo:
			if(semaforo.tempo_amarelo_ms >= 2000)
     5da:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
     5de:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
     5e2:	80 3d       	cpi	r24, 0xD0	; 208
     5e4:	97 40       	sbci	r25, 0x07	; 7
     5e6:	78 f0       	brcs	.+30     	; 0x606 <__vector_5+0x206>
			semaforo.tempo_amarelo_ms -= 1000;
     5e8:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
     5ec:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
     5f0:	88 5e       	subi	r24, 0xE8	; 232
     5f2:	93 40       	sbci	r25, 0x03	; 3
     5f4:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
     5f8:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
			break;
     5fc:	04 c0       	rjmp	.+8      	; 0x606 <__vector_5+0x206>
			semaforo.modo =! semaforo.modo;
			break;
			case Sel_tempo_verde:
			if(semaforo.tempo_verde_ms >= 2000)
			semaforo.tempo_verde_ms -= 1000;
			break;
     5fe:	00 00       	nop
     600:	03 c0       	rjmp	.+6      	; 0x608 <__vector_5+0x208>
			case Sel_tempo_vermelho:
			if(semaforo.tempo_vermelho_ms >= 2000)
			semaforo.tempo_vermelho_ms -= 1000;
			break;
     602:	00 00       	nop
     604:	01 c0       	rjmp	.+2      	; 0x608 <__vector_5+0x208>
			case Sel_tempo_amarelo:
			if(semaforo.tempo_amarelo_ms >= 2000)
			semaforo.tempo_amarelo_ms -= 1000;
			break;
     606:	00 00       	nop
		}
	}
	if((PIND&0b01000000)==0)
     608:	89 e2       	ldi	r24, 0x29	; 41
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	fc 01       	movw	r30, r24
     60e:	80 81       	ld	r24, Z
     610:	88 2f       	mov	r24, r24
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	80 74       	andi	r24, 0x40	; 64
     616:	99 27       	eor	r25, r25
     618:	89 2b       	or	r24, r25
     61a:	61 f4       	brne	.+24     	; 0x634 <__vector_5+0x234>
	{
		if(selecao_parametro < (Size_enum_parametros-1))
     61c:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
     620:	83 30       	cpi	r24, 0x03	; 3
     622:	30 f4       	brcc	.+12     	; 0x630 <__vector_5+0x230>
			selecao_parametro++;
     624:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
     628:	8f 5f       	subi	r24, 0xFF	; 255
     62a:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end>
     62e:	02 c0       	rjmp	.+4      	; 0x634 <__vector_5+0x234>
		else
			selecao_parametro = Sel_modo;
     630:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <__data_end>
	}

	anima_LCD(semaforo);
     634:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     638:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     63c:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     640:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     644:	00 91 04 01 	lds	r16, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
     648:	10 91 05 01 	lds	r17, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
     64c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
     650:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
     654:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
     658:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
     65c:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
     660:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <__DATA_REGION_ORIGIN__+0xb>
     664:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__DATA_REGION_ORIGIN__+0xc>
     668:	0e 94 c3 05 	call	0xb86	; 0xb86 <anima_LCD>
}
     66c:	00 00       	nop
     66e:	df 91       	pop	r29
     670:	cf 91       	pop	r28
     672:	ff 91       	pop	r31
     674:	ef 91       	pop	r30
     676:	bf 91       	pop	r27
     678:	af 91       	pop	r26
     67a:	9f 91       	pop	r25
     67c:	8f 91       	pop	r24
     67e:	7f 91       	pop	r23
     680:	6f 91       	pop	r22
     682:	5f 91       	pop	r21
     684:	4f 91       	pop	r20
     686:	3f 91       	pop	r19
     688:	2f 91       	pop	r18
     68a:	1f 91       	pop	r17
     68c:	0f 91       	pop	r16
     68e:	ff 90       	pop	r15
     690:	ef 90       	pop	r14
     692:	df 90       	pop	r13
     694:	cf 90       	pop	r12
     696:	0f 90       	pop	r0
     698:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     69c:	0f 90       	pop	r0
     69e:	1f 90       	pop	r1
     6a0:	18 95       	reti

000006a2 <USART_Transmit>:

void USART_Transmit(unsigned char data)
{
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	1f 92       	push	r1
     6a8:	cd b7       	in	r28, 0x3d	; 61
     6aa:	de b7       	in	r29, 0x3e	; 62
     6ac:	89 83       	std	Y+1, r24	; 0x01
	while(!( UCSR0A & (1<<UDRE0)));//Espera a limpeza do registr. de transmissão
     6ae:	00 00       	nop
     6b0:	80 ec       	ldi	r24, 0xC0	; 192
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	fc 01       	movw	r30, r24
     6b6:	80 81       	ld	r24, Z
     6b8:	88 2f       	mov	r24, r24
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	80 72       	andi	r24, 0x20	; 32
     6be:	99 27       	eor	r25, r25
     6c0:	89 2b       	or	r24, r25
     6c2:	b1 f3       	breq	.-20     	; 0x6b0 <USART_Transmit+0xe>
	UDR0 = data; //Coloca o dado no registrador e o envia
     6c4:	86 ec       	ldi	r24, 0xC6	; 198
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	29 81       	ldd	r18, Y+1	; 0x01
     6ca:	fc 01       	movw	r30, r24
     6cc:	20 83       	st	Z, r18
}
     6ce:	00 00       	nop
     6d0:	0f 90       	pop	r0
     6d2:	df 91       	pop	r29
     6d4:	cf 91       	pop	r28
     6d6:	08 95       	ret

000006d8 <anima_semaforo>:

void anima_semaforo(stc_semaforo Semaforo, uint32_t Tempo_ms)
{
     6d8:	8f 92       	push	r8
     6da:	9f 92       	push	r9
     6dc:	af 92       	push	r10
     6de:	bf 92       	push	r11
     6e0:	cf 92       	push	r12
     6e2:	df 92       	push	r13
     6e4:	ef 92       	push	r14
     6e6:	ff 92       	push	r15
     6e8:	0f 93       	push	r16
     6ea:	1f 93       	push	r17
     6ec:	cf 93       	push	r28
     6ee:	df 93       	push	r29
     6f0:	cd b7       	in	r28, 0x3d	; 61
     6f2:	de b7       	in	r29, 0x3e	; 62
     6f4:	a3 97       	sbiw	r28, 0x23	; 35
     6f6:	0f b6       	in	r0, 0x3f	; 63
     6f8:	f8 94       	cli
     6fa:	de bf       	out	0x3e, r29	; 62
     6fc:	0f be       	out	0x3f, r0	; 63
     6fe:	cd bf       	out	0x3d, r28	; 61
     700:	cb 8a       	std	Y+19, r12	; 0x13
     702:	dc 8a       	std	Y+20, r13	; 0x14
     704:	ed 8a       	std	Y+21, r14	; 0x15
     706:	fe 8a       	std	Y+22, r15	; 0x16
     708:	0f 8b       	std	Y+23, r16	; 0x17
     70a:	18 8f       	std	Y+24, r17	; 0x18
     70c:	29 8f       	std	Y+25, r18	; 0x19
     70e:	3a 8f       	std	Y+26, r19	; 0x1a
     710:	4b 8f       	std	Y+27, r20	; 0x1b
     712:	5c 8f       	std	Y+28, r21	; 0x1c
     714:	6d 8f       	std	Y+29, r22	; 0x1d
     716:	7e 8f       	std	Y+30, r23	; 0x1e
     718:	8f 8f       	std	Y+31, r24	; 0x1f
     71a:	88 a2       	std	Y+32, r8	; 0x20
     71c:	99 a2       	std	Y+33, r9	; 0x21
     71e:	aa a2       	std	Y+34, r10	; 0x22
     720:	bb a2       	std	Y+35, r11	; 0x23
	const uint16_t estados[9] = {0b000001111, 0b000000111, 0b000000011, 0b000000001, 0b100000000, 0b011110000,0b001110000, 0b000110000,0b000010000};
     722:	22 e1       	ldi	r18, 0x12	; 18
     724:	ed e0       	ldi	r30, 0x0D	; 13
     726:	f1 e0       	ldi	r31, 0x01	; 1
     728:	ce 01       	movw	r24, r28
     72a:	01 96       	adiw	r24, 0x01	; 1
     72c:	dc 01       	movw	r26, r24
     72e:	01 90       	ld	r0, Z+
     730:	0d 92       	st	X+, r0
     732:	2a 95       	dec	r18
     734:	e1 f7       	brne	.-8      	; 0x72e <anima_semaforo+0x56>
	static int8_t i_M=0, i_E=0;
	static uint32_t tempo_anterior_ms_M=0, tempo_anterior_ms_E=0;
	
	PORTB = estados[i_M] & 0b011111111;
     736:	85 e2       	ldi	r24, 0x25	; 37
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <i_M.2180>
     73e:	02 2e       	mov	r0, r18
     740:	00 0c       	add	r0, r0
     742:	33 0b       	sbc	r19, r19
     744:	22 0f       	add	r18, r18
     746:	33 1f       	adc	r19, r19
     748:	ae 01       	movw	r20, r28
     74a:	4f 5f       	subi	r20, 0xFF	; 255
     74c:	5f 4f       	sbci	r21, 0xFF	; 255
     74e:	24 0f       	add	r18, r20
     750:	35 1f       	adc	r19, r21
     752:	f9 01       	movw	r30, r18
     754:	20 81       	ld	r18, Z
     756:	31 81       	ldd	r19, Z+1	; 0x01
     758:	fc 01       	movw	r30, r24
     75a:	20 83       	st	Z, r18
		
		
	if(estados[i_M] & 0b100000000)
     75c:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <i_M.2180>
     760:	08 2e       	mov	r0, r24
     762:	00 0c       	add	r0, r0
     764:	99 0b       	sbc	r25, r25
     766:	88 0f       	add	r24, r24
     768:	99 1f       	adc	r25, r25
     76a:	9e 01       	movw	r18, r28
     76c:	2f 5f       	subi	r18, 0xFF	; 255
     76e:	3f 4f       	sbci	r19, 0xFF	; 255
     770:	82 0f       	add	r24, r18
     772:	93 1f       	adc	r25, r19
     774:	fc 01       	movw	r30, r24
     776:	80 81       	ld	r24, Z
     778:	91 81       	ldd	r25, Z+1	; 0x01
     77a:	88 27       	eor	r24, r24
     77c:	91 70       	andi	r25, 0x01	; 1
     77e:	89 2b       	or	r24, r25
     780:	51 f0       	breq	.+20     	; 0x796 <anima_semaforo+0xbe>
		PORTD |= 0b10000000;
     782:	8b e2       	ldi	r24, 0x2B	; 43
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	2b e2       	ldi	r18, 0x2B	; 43
     788:	30 e0       	ldi	r19, 0x00	; 0
     78a:	f9 01       	movw	r30, r18
     78c:	20 81       	ld	r18, Z
     78e:	20 68       	ori	r18, 0x80	; 128
     790:	fc 01       	movw	r30, r24
     792:	20 83       	st	Z, r18
     794:	09 c0       	rjmp	.+18     	; 0x7a8 <anima_semaforo+0xd0>
	else
		PORTD &= 0b01111111;
     796:	8b e2       	ldi	r24, 0x2B	; 43
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	2b e2       	ldi	r18, 0x2B	; 43
     79c:	30 e0       	ldi	r19, 0x00	; 0
     79e:	f9 01       	movw	r30, r18
     7a0:	20 81       	ld	r18, Z
     7a2:	2f 77       	andi	r18, 0x7F	; 127
     7a4:	fc 01       	movw	r30, r24
     7a6:	20 83       	st	Z, r18
	
	if(i_M <= 3)
     7a8:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <i_M.2180>
     7ac:	84 30       	cpi	r24, 0x04	; 4
     7ae:	0c f0       	brlt	.+2      	; 0x7b2 <anima_semaforo+0xda>
     7b0:	42 c0       	rjmp	.+132    	; 0x836 <__DATA_REGION_LENGTH__+0x36>
	{
		
		if((Tempo_ms - tempo_anterior_ms_M) >= (Semaforo.tempo_verde_ms/4))
     7b2:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <tempo_anterior_ms_M.2182>
     7b6:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <tempo_anterior_ms_M.2182+0x1>
     7ba:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <tempo_anterior_ms_M.2182+0x2>
     7be:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <tempo_anterior_ms_M.2182+0x3>
     7c2:	28 a1       	ldd	r18, Y+32	; 0x20
     7c4:	39 a1       	ldd	r19, Y+33	; 0x21
     7c6:	4a a1       	ldd	r20, Y+34	; 0x22
     7c8:	5b a1       	ldd	r21, Y+35	; 0x23
     7ca:	28 1b       	sub	r18, r24
     7cc:	39 0b       	sbc	r19, r25
     7ce:	4a 0b       	sbc	r20, r26
     7d0:	5b 0b       	sbc	r21, r27
     7d2:	8c 89       	ldd	r24, Y+20	; 0x14
     7d4:	9d 89       	ldd	r25, Y+21	; 0x15
     7d6:	96 95       	lsr	r25
     7d8:	87 95       	ror	r24
     7da:	96 95       	lsr	r25
     7dc:	87 95       	ror	r24
     7de:	cc 01       	movw	r24, r24
     7e0:	a0 e0       	ldi	r26, 0x00	; 0
     7e2:	b0 e0       	ldi	r27, 0x00	; 0
     7e4:	28 17       	cp	r18, r24
     7e6:	39 07       	cpc	r19, r25
     7e8:	4a 07       	cpc	r20, r26
     7ea:	5b 07       	cpc	r21, r27
     7ec:	08 f4       	brcc	.+2      	; 0x7f0 <anima_semaforo+0x118>
     7ee:	c1 c0       	rjmp	.+386    	; 0x972 <__stack+0x73>
		{		
			i_M++;
     7f0:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <i_M.2180>
     7f4:	8f 5f       	subi	r24, 0xFF	; 255
     7f6:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <i_M.2180>
			tempo_anterior_ms_M += (Semaforo.tempo_verde_ms/4);
     7fa:	8c 89       	ldd	r24, Y+20	; 0x14
     7fc:	9d 89       	ldd	r25, Y+21	; 0x15
     7fe:	96 95       	lsr	r25
     800:	87 95       	ror	r24
     802:	96 95       	lsr	r25
     804:	87 95       	ror	r24
     806:	9c 01       	movw	r18, r24
     808:	40 e0       	ldi	r20, 0x00	; 0
     80a:	50 e0       	ldi	r21, 0x00	; 0
     80c:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <tempo_anterior_ms_M.2182>
     810:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <tempo_anterior_ms_M.2182+0x1>
     814:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <tempo_anterior_ms_M.2182+0x2>
     818:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <tempo_anterior_ms_M.2182+0x3>
     81c:	82 0f       	add	r24, r18
     81e:	93 1f       	adc	r25, r19
     820:	a4 1f       	adc	r26, r20
     822:	b5 1f       	adc	r27, r21
     824:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <tempo_anterior_ms_M.2182>
     828:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <tempo_anterior_ms_M.2182+0x1>
     82c:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <tempo_anterior_ms_M.2182+0x2>
     830:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <tempo_anterior_ms_M.2182+0x3>
     834:	9e c0       	rjmp	.+316    	; 0x972 <__stack+0x73>
		}
	}
	else
	{
		if(i_M <=4)
     836:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <i_M.2180>
     83a:	85 30       	cpi	r24, 0x05	; 5
     83c:	d4 f5       	brge	.+116    	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
		{
			if((Tempo_ms - tempo_anterior_ms_M) >= (Semaforo.tempo_amarelo_ms))
     83e:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <tempo_anterior_ms_M.2182>
     842:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <tempo_anterior_ms_M.2182+0x1>
     846:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <tempo_anterior_ms_M.2182+0x2>
     84a:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <tempo_anterior_ms_M.2182+0x3>
     84e:	28 a1       	ldd	r18, Y+32	; 0x20
     850:	39 a1       	ldd	r19, Y+33	; 0x21
     852:	4a a1       	ldd	r20, Y+34	; 0x22
     854:	5b a1       	ldd	r21, Y+35	; 0x23
     856:	28 1b       	sub	r18, r24
     858:	39 0b       	sbc	r19, r25
     85a:	4a 0b       	sbc	r20, r26
     85c:	5b 0b       	sbc	r21, r27
     85e:	88 8d       	ldd	r24, Y+24	; 0x18
     860:	99 8d       	ldd	r25, Y+25	; 0x19
     862:	cc 01       	movw	r24, r24
     864:	a0 e0       	ldi	r26, 0x00	; 0
     866:	b0 e0       	ldi	r27, 0x00	; 0
     868:	28 17       	cp	r18, r24
     86a:	39 07       	cpc	r19, r25
     86c:	4a 07       	cpc	r20, r26
     86e:	5b 07       	cpc	r21, r27
     870:	08 f4       	brcc	.+2      	; 0x874 <__DATA_REGION_LENGTH__+0x74>
     872:	7f c0       	rjmp	.+254    	; 0x972 <__stack+0x73>
			{
				i_M++;
     874:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <i_M.2180>
     878:	8f 5f       	subi	r24, 0xFF	; 255
     87a:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <i_M.2180>
				tempo_anterior_ms_M += (Semaforo.tempo_amarelo_ms);
     87e:	88 8d       	ldd	r24, Y+24	; 0x18
     880:	99 8d       	ldd	r25, Y+25	; 0x19
     882:	9c 01       	movw	r18, r24
     884:	40 e0       	ldi	r20, 0x00	; 0
     886:	50 e0       	ldi	r21, 0x00	; 0
     888:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <tempo_anterior_ms_M.2182>
     88c:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <tempo_anterior_ms_M.2182+0x1>
     890:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <tempo_anterior_ms_M.2182+0x2>
     894:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <tempo_anterior_ms_M.2182+0x3>
     898:	82 0f       	add	r24, r18
     89a:	93 1f       	adc	r25, r19
     89c:	a4 1f       	adc	r26, r20
     89e:	b5 1f       	adc	r27, r21
     8a0:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <tempo_anterior_ms_M.2182>
     8a4:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <tempo_anterior_ms_M.2182+0x1>
     8a8:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <tempo_anterior_ms_M.2182+0x2>
     8ac:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <tempo_anterior_ms_M.2182+0x3>
     8b0:	60 c0       	rjmp	.+192    	; 0x972 <__stack+0x73>
			}
		}
		else
		{
			if (i_M<=8)
     8b2:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <i_M.2180>
     8b6:	89 30       	cpi	r24, 0x09	; 9
     8b8:	0c f0       	brlt	.+2      	; 0x8bc <__DATA_REGION_LENGTH__+0xbc>
     8ba:	41 c0       	rjmp	.+130    	; 0x93e <__stack+0x3f>
			{
				if((Tempo_ms - tempo_anterior_ms_M) >= (Semaforo.tempo_vermelho_ms/4))
     8bc:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <tempo_anterior_ms_M.2182>
     8c0:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <tempo_anterior_ms_M.2182+0x1>
     8c4:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <tempo_anterior_ms_M.2182+0x2>
     8c8:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <tempo_anterior_ms_M.2182+0x3>
     8cc:	28 a1       	ldd	r18, Y+32	; 0x20
     8ce:	39 a1       	ldd	r19, Y+33	; 0x21
     8d0:	4a a1       	ldd	r20, Y+34	; 0x22
     8d2:	5b a1       	ldd	r21, Y+35	; 0x23
     8d4:	28 1b       	sub	r18, r24
     8d6:	39 0b       	sbc	r19, r25
     8d8:	4a 0b       	sbc	r20, r26
     8da:	5b 0b       	sbc	r21, r27
     8dc:	8e 89       	ldd	r24, Y+22	; 0x16
     8de:	9f 89       	ldd	r25, Y+23	; 0x17
     8e0:	96 95       	lsr	r25
     8e2:	87 95       	ror	r24
     8e4:	96 95       	lsr	r25
     8e6:	87 95       	ror	r24
     8e8:	cc 01       	movw	r24, r24
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	b0 e0       	ldi	r27, 0x00	; 0
     8ee:	28 17       	cp	r18, r24
     8f0:	39 07       	cpc	r19, r25
     8f2:	4a 07       	cpc	r20, r26
     8f4:	5b 07       	cpc	r21, r27
     8f6:	e8 f1       	brcs	.+122    	; 0x972 <__stack+0x73>
				{
					i_M++;
     8f8:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <i_M.2180>
     8fc:	8f 5f       	subi	r24, 0xFF	; 255
     8fe:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <i_M.2180>
					tempo_anterior_ms_M += (Semaforo.tempo_vermelho_ms/4);
     902:	8e 89       	ldd	r24, Y+22	; 0x16
     904:	9f 89       	ldd	r25, Y+23	; 0x17
     906:	96 95       	lsr	r25
     908:	87 95       	ror	r24
     90a:	96 95       	lsr	r25
     90c:	87 95       	ror	r24
     90e:	9c 01       	movw	r18, r24
     910:	40 e0       	ldi	r20, 0x00	; 0
     912:	50 e0       	ldi	r21, 0x00	; 0
     914:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <tempo_anterior_ms_M.2182>
     918:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <tempo_anterior_ms_M.2182+0x1>
     91c:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <tempo_anterior_ms_M.2182+0x2>
     920:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <tempo_anterior_ms_M.2182+0x3>
     924:	82 0f       	add	r24, r18
     926:	93 1f       	adc	r25, r19
     928:	a4 1f       	adc	r26, r20
     92a:	b5 1f       	adc	r27, r21
     92c:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <tempo_anterior_ms_M.2182>
     930:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <tempo_anterior_ms_M.2182+0x1>
     934:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <tempo_anterior_ms_M.2182+0x2>
     938:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <tempo_anterior_ms_M.2182+0x3>
     93c:	1a c0       	rjmp	.+52     	; 0x972 <__stack+0x73>
				}
			}
			else
			{
				i_M=0;				
     93e:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <i_M.2180>
				tempo_anterior_ms_M = Tempo_ms;
     942:	88 a1       	ldd	r24, Y+32	; 0x20
     944:	99 a1       	ldd	r25, Y+33	; 0x21
     946:	aa a1       	ldd	r26, Y+34	; 0x22
     948:	bb a1       	ldd	r27, Y+35	; 0x23
     94a:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <tempo_anterior_ms_M.2182>
     94e:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <tempo_anterior_ms_M.2182+0x1>
     952:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <tempo_anterior_ms_M.2182+0x2>
     956:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <tempo_anterior_ms_M.2182+0x3>
				tempo_anterior_ms_E = Tempo_ms;
     95a:	88 a1       	ldd	r24, Y+32	; 0x20
     95c:	99 a1       	ldd	r25, Y+33	; 0x21
     95e:	aa a1       	ldd	r26, Y+34	; 0x22
     960:	bb a1       	ldd	r27, Y+35	; 0x23
     962:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <tempo_anterior_ms_E.2183>
     966:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <tempo_anterior_ms_E.2183+0x1>
     96a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <tempo_anterior_ms_E.2183+0x2>
     96e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <tempo_anterior_ms_E.2183+0x3>
			}
		}
	}
	
	if(i_E <= 3)
     972:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <i_E.2181>
     976:	84 30       	cpi	r24, 0x04	; 4
     978:	0c f0       	brlt	.+2      	; 0x97c <__stack+0x7d>
     97a:	4f c0       	rjmp	.+158    	; 0xa1a <__stack+0x11b>
	{
		if((Tempo_ms - tempo_anterior_ms_E) >= ((Semaforo.tempo_verde_ms + Semaforo.tempo_amarelo_ms)/4))
     97c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <tempo_anterior_ms_E.2183>
     980:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <tempo_anterior_ms_E.2183+0x1>
     984:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <tempo_anterior_ms_E.2183+0x2>
     988:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <tempo_anterior_ms_E.2183+0x3>
     98c:	28 a1       	ldd	r18, Y+32	; 0x20
     98e:	39 a1       	ldd	r19, Y+33	; 0x21
     990:	4a a1       	ldd	r20, Y+34	; 0x22
     992:	5b a1       	ldd	r21, Y+35	; 0x23
     994:	28 1b       	sub	r18, r24
     996:	39 0b       	sbc	r19, r25
     998:	4a 0b       	sbc	r20, r26
     99a:	5b 0b       	sbc	r21, r27
     99c:	6c 89       	ldd	r22, Y+20	; 0x14
     99e:	7d 89       	ldd	r23, Y+21	; 0x15
     9a0:	88 8d       	ldd	r24, Y+24	; 0x18
     9a2:	99 8d       	ldd	r25, Y+25	; 0x19
     9a4:	86 0f       	add	r24, r22
     9a6:	97 1f       	adc	r25, r23
     9a8:	96 95       	lsr	r25
     9aa:	87 95       	ror	r24
     9ac:	96 95       	lsr	r25
     9ae:	87 95       	ror	r24
     9b0:	cc 01       	movw	r24, r24
     9b2:	a0 e0       	ldi	r26, 0x00	; 0
     9b4:	b0 e0       	ldi	r27, 0x00	; 0
     9b6:	28 17       	cp	r18, r24
     9b8:	39 07       	cpc	r19, r25
     9ba:	4a 07       	cpc	r20, r26
     9bc:	5b 07       	cpc	r21, r27
     9be:	08 f4       	brcc	.+2      	; 0x9c2 <__stack+0xc3>
     9c0:	ce c0       	rjmp	.+412    	; 0xb5e <__stack+0x25f>
		{
			i_E++;
     9c2:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <i_E.2181>
     9c6:	8f 5f       	subi	r24, 0xFF	; 255
     9c8:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <i_E.2181>
			tempo_anterior_ms_E += ((Semaforo.tempo_verde_ms + Semaforo.tempo_amarelo_ms)/4);
     9cc:	2c 89       	ldd	r18, Y+20	; 0x14
     9ce:	3d 89       	ldd	r19, Y+21	; 0x15
     9d0:	88 8d       	ldd	r24, Y+24	; 0x18
     9d2:	99 8d       	ldd	r25, Y+25	; 0x19
     9d4:	82 0f       	add	r24, r18
     9d6:	93 1f       	adc	r25, r19
     9d8:	96 95       	lsr	r25
     9da:	87 95       	ror	r24
     9dc:	96 95       	lsr	r25
     9de:	87 95       	ror	r24
     9e0:	9c 01       	movw	r18, r24
     9e2:	40 e0       	ldi	r20, 0x00	; 0
     9e4:	50 e0       	ldi	r21, 0x00	; 0
     9e6:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <tempo_anterior_ms_E.2183>
     9ea:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <tempo_anterior_ms_E.2183+0x1>
     9ee:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <tempo_anterior_ms_E.2183+0x2>
     9f2:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <tempo_anterior_ms_E.2183+0x3>
     9f6:	82 0f       	add	r24, r18
     9f8:	93 1f       	adc	r25, r19
     9fa:	a4 1f       	adc	r26, r20
     9fc:	b5 1f       	adc	r27, r21
     9fe:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <tempo_anterior_ms_E.2183>
     a02:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <tempo_anterior_ms_E.2183+0x1>
     a06:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <tempo_anterior_ms_E.2183+0x2>
     a0a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <tempo_anterior_ms_E.2183+0x3>
			USART_Transmit('0'+ i_E);
     a0e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <i_E.2181>
     a12:	80 5d       	subi	r24, 0xD0	; 208
     a14:	0e 94 51 03 	call	0x6a2	; 0x6a2 <USART_Transmit>
				i_E=0;
				USART_Transmit('0' + i_E);							
			}
		}
	}	
}
     a18:	a2 c0       	rjmp	.+324    	; 0xb5e <__stack+0x25f>
			USART_Transmit('0'+ i_E);
		}
	}
	else
	{
		if(i_E <=7)
     a1a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <i_E.2181>
     a1e:	88 30       	cpi	r24, 0x08	; 8
     a20:	0c f0       	brlt	.+2      	; 0xa24 <__stack+0x125>
     a22:	53 c0       	rjmp	.+166    	; 0xaca <__stack+0x1cb>
		{
			if((Tempo_ms - tempo_anterior_ms_E) >= (Semaforo.tempo_vermelho_ms - Semaforo.tempo_amarelo_ms)/4)
     a24:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <tempo_anterior_ms_E.2183>
     a28:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <tempo_anterior_ms_E.2183+0x1>
     a2c:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <tempo_anterior_ms_E.2183+0x2>
     a30:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <tempo_anterior_ms_E.2183+0x3>
     a34:	28 a1       	ldd	r18, Y+32	; 0x20
     a36:	39 a1       	ldd	r19, Y+33	; 0x21
     a38:	4a a1       	ldd	r20, Y+34	; 0x22
     a3a:	5b a1       	ldd	r21, Y+35	; 0x23
     a3c:	28 1b       	sub	r18, r24
     a3e:	39 0b       	sbc	r19, r25
     a40:	4a 0b       	sbc	r20, r26
     a42:	5b 0b       	sbc	r21, r27
     a44:	6e 89       	ldd	r22, Y+22	; 0x16
     a46:	7f 89       	ldd	r23, Y+23	; 0x17
     a48:	88 8d       	ldd	r24, Y+24	; 0x18
     a4a:	99 8d       	ldd	r25, Y+25	; 0x19
     a4c:	fb 01       	movw	r30, r22
     a4e:	e8 1b       	sub	r30, r24
     a50:	f9 0b       	sbc	r31, r25
     a52:	cf 01       	movw	r24, r30
     a54:	96 95       	lsr	r25
     a56:	87 95       	ror	r24
     a58:	96 95       	lsr	r25
     a5a:	87 95       	ror	r24
     a5c:	cc 01       	movw	r24, r24
     a5e:	a0 e0       	ldi	r26, 0x00	; 0
     a60:	b0 e0       	ldi	r27, 0x00	; 0
     a62:	28 17       	cp	r18, r24
     a64:	39 07       	cpc	r19, r25
     a66:	4a 07       	cpc	r20, r26
     a68:	5b 07       	cpc	r21, r27
     a6a:	08 f4       	brcc	.+2      	; 0xa6e <__stack+0x16f>
     a6c:	78 c0       	rjmp	.+240    	; 0xb5e <__stack+0x25f>
			{
				i_E++;
     a6e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <i_E.2181>
     a72:	8f 5f       	subi	r24, 0xFF	; 255
     a74:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <i_E.2181>
				tempo_anterior_ms_E += (Semaforo.tempo_vermelho_ms - Semaforo.tempo_amarelo_ms)/4;
     a78:	2e 89       	ldd	r18, Y+22	; 0x16
     a7a:	3f 89       	ldd	r19, Y+23	; 0x17
     a7c:	88 8d       	ldd	r24, Y+24	; 0x18
     a7e:	99 8d       	ldd	r25, Y+25	; 0x19
     a80:	a9 01       	movw	r20, r18
     a82:	48 1b       	sub	r20, r24
     a84:	59 0b       	sbc	r21, r25
     a86:	ca 01       	movw	r24, r20
     a88:	96 95       	lsr	r25
     a8a:	87 95       	ror	r24
     a8c:	96 95       	lsr	r25
     a8e:	87 95       	ror	r24
     a90:	9c 01       	movw	r18, r24
     a92:	40 e0       	ldi	r20, 0x00	; 0
     a94:	50 e0       	ldi	r21, 0x00	; 0
     a96:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <tempo_anterior_ms_E.2183>
     a9a:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <tempo_anterior_ms_E.2183+0x1>
     a9e:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <tempo_anterior_ms_E.2183+0x2>
     aa2:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <tempo_anterior_ms_E.2183+0x3>
     aa6:	82 0f       	add	r24, r18
     aa8:	93 1f       	adc	r25, r19
     aaa:	a4 1f       	adc	r26, r20
     aac:	b5 1f       	adc	r27, r21
     aae:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <tempo_anterior_ms_E.2183>
     ab2:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <tempo_anterior_ms_E.2183+0x1>
     ab6:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <tempo_anterior_ms_E.2183+0x2>
     aba:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <tempo_anterior_ms_E.2183+0x3>
				USART_Transmit('0'+i_E);
     abe:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <i_E.2181>
     ac2:	80 5d       	subi	r24, 0xD0	; 208
     ac4:	0e 94 51 03 	call	0x6a2	; 0x6a2 <USART_Transmit>
				i_E=0;
				USART_Transmit('0' + i_E);							
			}
		}
	}	
}
     ac8:	4a c0       	rjmp	.+148    	; 0xb5e <__stack+0x25f>
				USART_Transmit('0'+i_E);
			}
		}
		else
		{
			if (i_E<=8)
     aca:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <i_E.2181>
     ace:	89 30       	cpi	r24, 0x09	; 9
     ad0:	0c f0       	brlt	.+2      	; 0xad4 <__stack+0x1d5>
     ad2:	3e c0       	rjmp	.+124    	; 0xb50 <__stack+0x251>
			{
				if((Tempo_ms - tempo_anterior_ms_E) >= (Semaforo.tempo_amarelo_ms))
     ad4:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <tempo_anterior_ms_E.2183>
     ad8:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <tempo_anterior_ms_E.2183+0x1>
     adc:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <tempo_anterior_ms_E.2183+0x2>
     ae0:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <tempo_anterior_ms_E.2183+0x3>
     ae4:	28 a1       	ldd	r18, Y+32	; 0x20
     ae6:	39 a1       	ldd	r19, Y+33	; 0x21
     ae8:	4a a1       	ldd	r20, Y+34	; 0x22
     aea:	5b a1       	ldd	r21, Y+35	; 0x23
     aec:	28 1b       	sub	r18, r24
     aee:	39 0b       	sbc	r19, r25
     af0:	4a 0b       	sbc	r20, r26
     af2:	5b 0b       	sbc	r21, r27
     af4:	88 8d       	ldd	r24, Y+24	; 0x18
     af6:	99 8d       	ldd	r25, Y+25	; 0x19
     af8:	cc 01       	movw	r24, r24
     afa:	a0 e0       	ldi	r26, 0x00	; 0
     afc:	b0 e0       	ldi	r27, 0x00	; 0
     afe:	28 17       	cp	r18, r24
     b00:	39 07       	cpc	r19, r25
     b02:	4a 07       	cpc	r20, r26
     b04:	5b 07       	cpc	r21, r27
     b06:	58 f1       	brcs	.+86     	; 0xb5e <__stack+0x25f>
				{
					i_E++;
     b08:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <i_E.2181>
     b0c:	8f 5f       	subi	r24, 0xFF	; 255
     b0e:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <i_E.2181>
					tempo_anterior_ms_E += (Semaforo.tempo_amarelo_ms);
     b12:	88 8d       	ldd	r24, Y+24	; 0x18
     b14:	99 8d       	ldd	r25, Y+25	; 0x19
     b16:	9c 01       	movw	r18, r24
     b18:	40 e0       	ldi	r20, 0x00	; 0
     b1a:	50 e0       	ldi	r21, 0x00	; 0
     b1c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <tempo_anterior_ms_E.2183>
     b20:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <tempo_anterior_ms_E.2183+0x1>
     b24:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <tempo_anterior_ms_E.2183+0x2>
     b28:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <tempo_anterior_ms_E.2183+0x3>
     b2c:	82 0f       	add	r24, r18
     b2e:	93 1f       	adc	r25, r19
     b30:	a4 1f       	adc	r26, r20
     b32:	b5 1f       	adc	r27, r21
     b34:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <tempo_anterior_ms_E.2183>
     b38:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <tempo_anterior_ms_E.2183+0x1>
     b3c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <tempo_anterior_ms_E.2183+0x2>
     b40:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <tempo_anterior_ms_E.2183+0x3>
					USART_Transmit('0'+ i_E);
     b44:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <i_E.2181>
     b48:	80 5d       	subi	r24, 0xD0	; 208
     b4a:	0e 94 51 03 	call	0x6a2	; 0x6a2 <USART_Transmit>
				i_E=0;
				USART_Transmit('0' + i_E);							
			}
		}
	}	
}
     b4e:	07 c0       	rjmp	.+14     	; 0xb5e <__stack+0x25f>
					USART_Transmit('0'+ i_E);
				}
			}
			else
			{
				i_E=0;
     b50:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <i_E.2181>
				USART_Transmit('0' + i_E);							
     b54:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <i_E.2181>
     b58:	80 5d       	subi	r24, 0xD0	; 208
     b5a:	0e 94 51 03 	call	0x6a2	; 0x6a2 <USART_Transmit>
			}
		}
	}	
}
     b5e:	00 00       	nop
     b60:	a3 96       	adiw	r28, 0x23	; 35
     b62:	0f b6       	in	r0, 0x3f	; 63
     b64:	f8 94       	cli
     b66:	de bf       	out	0x3e, r29	; 62
     b68:	0f be       	out	0x3f, r0	; 63
     b6a:	cd bf       	out	0x3d, r28	; 61
     b6c:	df 91       	pop	r29
     b6e:	cf 91       	pop	r28
     b70:	1f 91       	pop	r17
     b72:	0f 91       	pop	r16
     b74:	ff 90       	pop	r15
     b76:	ef 90       	pop	r14
     b78:	df 90       	pop	r13
     b7a:	cf 90       	pop	r12
     b7c:	bf 90       	pop	r11
     b7e:	af 90       	pop	r10
     b80:	9f 90       	pop	r9
     b82:	8f 90       	pop	r8
     b84:	08 95       	ret

00000b86 <anima_LCD>:

void anima_LCD(stc_semaforo Semaforo)
{
     b86:	cf 92       	push	r12
     b88:	df 92       	push	r13
     b8a:	ef 92       	push	r14
     b8c:	ff 92       	push	r15
     b8e:	0f 93       	push	r16
     b90:	1f 93       	push	r17
     b92:	cf 93       	push	r28
     b94:	df 93       	push	r29
     b96:	cd b7       	in	r28, 0x3d	; 61
     b98:	de b7       	in	r29, 0x3e	; 62
     b9a:	a3 97       	sbiw	r28, 0x23	; 35
     b9c:	0f b6       	in	r0, 0x3f	; 63
     b9e:	f8 94       	cli
     ba0:	de bf       	out	0x3e, r29	; 62
     ba2:	0f be       	out	0x3f, r0	; 63
     ba4:	cd bf       	out	0x3d, r28	; 61
     ba6:	cf 8a       	std	Y+23, r12	; 0x17
     ba8:	d8 8e       	std	Y+24, r13	; 0x18
     baa:	e9 8e       	std	Y+25, r14	; 0x19
     bac:	fa 8e       	std	Y+26, r15	; 0x1a
     bae:	0b 8f       	std	Y+27, r16	; 0x1b
     bb0:	1c 8f       	std	Y+28, r17	; 0x1c
     bb2:	2d 8f       	std	Y+29, r18	; 0x1d
     bb4:	3e 8f       	std	Y+30, r19	; 0x1e
     bb6:	4f 8f       	std	Y+31, r20	; 0x1f
     bb8:	58 a3       	std	Y+32, r21	; 0x20
     bba:	69 a3       	std	Y+33, r22	; 0x21
     bbc:	7a a3       	std	Y+34, r23	; 0x22
     bbe:	8b a3       	std	Y+35, r24	; 0x23
	unsigned char tempo_amarelo_s_string[2];
	unsigned char carros_por_min_string[4];
	unsigned char sensor_lux_string[5] ;
	unsigned char sensor_temp_string[5]; 
	
	modo_string[0] = (Semaforo.modo) ?  'A'  :  'M'; modo_string[1] = '\0';
     bc0:	8f 89       	ldd	r24, Y+23	; 0x17
     bc2:	88 23       	and	r24, r24
     bc4:	11 f0       	breq	.+4      	; 0xbca <anima_LCD+0x44>
     bc6:	81 e4       	ldi	r24, 0x41	; 65
     bc8:	01 c0       	rjmp	.+2      	; 0xbcc <anima_LCD+0x46>
     bca:	8d e4       	ldi	r24, 0x4D	; 77
     bcc:	89 83       	std	Y+1, r24	; 0x01
     bce:	1a 82       	std	Y+2, r1	; 0x02
	
	sprintf(tempo_verde_s_string, "%u", Semaforo.tempo_verde_ms/1000);
     bd0:	88 8d       	ldd	r24, Y+24	; 0x18
     bd2:	99 8d       	ldd	r25, Y+25	; 0x19
     bd4:	96 95       	lsr	r25
     bd6:	87 95       	ror	r24
     bd8:	96 95       	lsr	r25
     bda:	87 95       	ror	r24
     bdc:	96 95       	lsr	r25
     bde:	87 95       	ror	r24
     be0:	9c 01       	movw	r18, r24
     be2:	a5 ec       	ldi	r26, 0xC5	; 197
     be4:	b0 e2       	ldi	r27, 0x20	; 32
     be6:	0e 94 3c 11 	call	0x2278	; 0x2278 <__umulhisi3>
     bea:	92 95       	swap	r25
     bec:	82 95       	swap	r24
     bee:	8f 70       	andi	r24, 0x0F	; 15
     bf0:	89 27       	eor	r24, r25
     bf2:	9f 70       	andi	r25, 0x0F	; 15
     bf4:	89 27       	eor	r24, r25
     bf6:	29 2f       	mov	r18, r25
     bf8:	2f 93       	push	r18
     bfa:	8f 93       	push	r24
     bfc:	8f e1       	ldi	r24, 0x1F	; 31
     bfe:	91 e0       	ldi	r25, 0x01	; 1
     c00:	89 2f       	mov	r24, r25
     c02:	8f 93       	push	r24
     c04:	8f e1       	ldi	r24, 0x1F	; 31
     c06:	91 e0       	ldi	r25, 0x01	; 1
     c08:	8f 93       	push	r24
     c0a:	ce 01       	movw	r24, r28
     c0c:	03 96       	adiw	r24, 0x03	; 3
     c0e:	29 2f       	mov	r18, r25
     c10:	2f 93       	push	r18
     c12:	8f 93       	push	r24
     c14:	0e 94 4b 11 	call	0x2296	; 0x2296 <sprintf>
     c18:	0f 90       	pop	r0
     c1a:	0f 90       	pop	r0
     c1c:	0f 90       	pop	r0
     c1e:	0f 90       	pop	r0
     c20:	0f 90       	pop	r0
     c22:	0f 90       	pop	r0
	sprintf(tempo_vermelho_s_string, "%u", Semaforo.tempo_vermelho_ms/1000);
     c24:	8a 8d       	ldd	r24, Y+26	; 0x1a
     c26:	9b 8d       	ldd	r25, Y+27	; 0x1b
     c28:	96 95       	lsr	r25
     c2a:	87 95       	ror	r24
     c2c:	96 95       	lsr	r25
     c2e:	87 95       	ror	r24
     c30:	96 95       	lsr	r25
     c32:	87 95       	ror	r24
     c34:	9c 01       	movw	r18, r24
     c36:	a5 ec       	ldi	r26, 0xC5	; 197
     c38:	b0 e2       	ldi	r27, 0x20	; 32
     c3a:	0e 94 3c 11 	call	0x2278	; 0x2278 <__umulhisi3>
     c3e:	92 95       	swap	r25
     c40:	82 95       	swap	r24
     c42:	8f 70       	andi	r24, 0x0F	; 15
     c44:	89 27       	eor	r24, r25
     c46:	9f 70       	andi	r25, 0x0F	; 15
     c48:	89 27       	eor	r24, r25
     c4a:	29 2f       	mov	r18, r25
     c4c:	2f 93       	push	r18
     c4e:	8f 93       	push	r24
     c50:	8f e1       	ldi	r24, 0x1F	; 31
     c52:	91 e0       	ldi	r25, 0x01	; 1
     c54:	89 2f       	mov	r24, r25
     c56:	8f 93       	push	r24
     c58:	8f e1       	ldi	r24, 0x1F	; 31
     c5a:	91 e0       	ldi	r25, 0x01	; 1
     c5c:	8f 93       	push	r24
     c5e:	ce 01       	movw	r24, r28
     c60:	05 96       	adiw	r24, 0x05	; 5
     c62:	29 2f       	mov	r18, r25
     c64:	2f 93       	push	r18
     c66:	8f 93       	push	r24
     c68:	0e 94 4b 11 	call	0x2296	; 0x2296 <sprintf>
     c6c:	0f 90       	pop	r0
     c6e:	0f 90       	pop	r0
     c70:	0f 90       	pop	r0
     c72:	0f 90       	pop	r0
     c74:	0f 90       	pop	r0
     c76:	0f 90       	pop	r0
	sprintf(tempo_amarelo_s_string, "%u", Semaforo.tempo_amarelo_ms/1000);
     c78:	8c 8d       	ldd	r24, Y+28	; 0x1c
     c7a:	9d 8d       	ldd	r25, Y+29	; 0x1d
     c7c:	96 95       	lsr	r25
     c7e:	87 95       	ror	r24
     c80:	96 95       	lsr	r25
     c82:	87 95       	ror	r24
     c84:	96 95       	lsr	r25
     c86:	87 95       	ror	r24
     c88:	9c 01       	movw	r18, r24
     c8a:	a5 ec       	ldi	r26, 0xC5	; 197
     c8c:	b0 e2       	ldi	r27, 0x20	; 32
     c8e:	0e 94 3c 11 	call	0x2278	; 0x2278 <__umulhisi3>
     c92:	92 95       	swap	r25
     c94:	82 95       	swap	r24
     c96:	8f 70       	andi	r24, 0x0F	; 15
     c98:	89 27       	eor	r24, r25
     c9a:	9f 70       	andi	r25, 0x0F	; 15
     c9c:	89 27       	eor	r24, r25
     c9e:	29 2f       	mov	r18, r25
     ca0:	2f 93       	push	r18
     ca2:	8f 93       	push	r24
     ca4:	8f e1       	ldi	r24, 0x1F	; 31
     ca6:	91 e0       	ldi	r25, 0x01	; 1
     ca8:	89 2f       	mov	r24, r25
     caa:	8f 93       	push	r24
     cac:	8f e1       	ldi	r24, 0x1F	; 31
     cae:	91 e0       	ldi	r25, 0x01	; 1
     cb0:	8f 93       	push	r24
     cb2:	ce 01       	movw	r24, r28
     cb4:	07 96       	adiw	r24, 0x07	; 7
     cb6:	29 2f       	mov	r18, r25
     cb8:	2f 93       	push	r18
     cba:	8f 93       	push	r24
     cbc:	0e 94 4b 11 	call	0x2296	; 0x2296 <sprintf>
     cc0:	0f 90       	pop	r0
     cc2:	0f 90       	pop	r0
     cc4:	0f 90       	pop	r0
     cc6:	0f 90       	pop	r0
     cc8:	0f 90       	pop	r0
     cca:	0f 90       	pop	r0
	sprintf(carros_por_min_string, "%u", Semaforo.carros_por_min);
     ccc:	8e 8d       	ldd	r24, Y+30	; 0x1e
     cce:	9f 8d       	ldd	r25, Y+31	; 0x1f
     cd0:	29 2f       	mov	r18, r25
     cd2:	2f 93       	push	r18
     cd4:	8f 93       	push	r24
     cd6:	8f e1       	ldi	r24, 0x1F	; 31
     cd8:	91 e0       	ldi	r25, 0x01	; 1
     cda:	89 2f       	mov	r24, r25
     cdc:	8f 93       	push	r24
     cde:	8f e1       	ldi	r24, 0x1F	; 31
     ce0:	91 e0       	ldi	r25, 0x01	; 1
     ce2:	8f 93       	push	r24
     ce4:	ce 01       	movw	r24, r28
     ce6:	09 96       	adiw	r24, 0x09	; 9
     ce8:	29 2f       	mov	r18, r25
     cea:	2f 93       	push	r18
     cec:	8f 93       	push	r24
     cee:	0e 94 4b 11 	call	0x2296	; 0x2296 <sprintf>
     cf2:	0f 90       	pop	r0
     cf4:	0f 90       	pop	r0
     cf6:	0f 90       	pop	r0
     cf8:	0f 90       	pop	r0
     cfa:	0f 90       	pop	r0
     cfc:	0f 90       	pop	r0
	sprintf(sensor_lux_string, "%u",  Semaforo.sensor_lux);
     cfe:	88 a1       	ldd	r24, Y+32	; 0x20
     d00:	99 a1       	ldd	r25, Y+33	; 0x21
     d02:	29 2f       	mov	r18, r25
     d04:	2f 93       	push	r18
     d06:	8f 93       	push	r24
     d08:	8f e1       	ldi	r24, 0x1F	; 31
     d0a:	91 e0       	ldi	r25, 0x01	; 1
     d0c:	89 2f       	mov	r24, r25
     d0e:	8f 93       	push	r24
     d10:	8f e1       	ldi	r24, 0x1F	; 31
     d12:	91 e0       	ldi	r25, 0x01	; 1
     d14:	8f 93       	push	r24
     d16:	ce 01       	movw	r24, r28
     d18:	0d 96       	adiw	r24, 0x0d	; 13
     d1a:	29 2f       	mov	r18, r25
     d1c:	2f 93       	push	r18
     d1e:	8f 93       	push	r24
     d20:	0e 94 4b 11 	call	0x2296	; 0x2296 <sprintf>
     d24:	0f 90       	pop	r0
     d26:	0f 90       	pop	r0
     d28:	0f 90       	pop	r0
     d2a:	0f 90       	pop	r0
     d2c:	0f 90       	pop	r0
     d2e:	0f 90       	pop	r0
	sprintf(sensor_temp_string, "%u", Semaforo.senstor_temp);
     d30:	8a a1       	ldd	r24, Y+34	; 0x22
     d32:	9b a1       	ldd	r25, Y+35	; 0x23
     d34:	29 2f       	mov	r18, r25
     d36:	2f 93       	push	r18
     d38:	8f 93       	push	r24
     d3a:	8f e1       	ldi	r24, 0x1F	; 31
     d3c:	91 e0       	ldi	r25, 0x01	; 1
     d3e:	89 2f       	mov	r24, r25
     d40:	8f 93       	push	r24
     d42:	8f e1       	ldi	r24, 0x1F	; 31
     d44:	91 e0       	ldi	r25, 0x01	; 1
     d46:	8f 93       	push	r24
     d48:	ce 01       	movw	r24, r28
     d4a:	42 96       	adiw	r24, 0x12	; 18
     d4c:	29 2f       	mov	r18, r25
     d4e:	2f 93       	push	r18
     d50:	8f 93       	push	r24
     d52:	0e 94 4b 11 	call	0x2296	; 0x2296 <sprintf>
     d56:	0f 90       	pop	r0
     d58:	0f 90       	pop	r0
     d5a:	0f 90       	pop	r0
     d5c:	0f 90       	pop	r0
     d5e:	0f 90       	pop	r0
     d60:	0f 90       	pop	r0
	
	nokia_lcd_clear();
     d62:	0e 94 a8 0c 	call	0x1950	; 0x1950 <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 5);
     d66:	65 e0       	ldi	r22, 0x05	; 5
     d68:	80 e0       	ldi	r24, 0x00	; 0
     d6a:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Modo", 1);
     d6e:	61 e0       	ldi	r22, 0x01	; 1
     d70:	82 e2       	ldi	r24, 0x22	; 34
     d72:	91 e0       	ldi	r25, 0x01	; 1
     d74:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(30, 5);
     d78:	65 e0       	ldi	r22, 0x05	; 5
     d7a:	8e e1       	ldi	r24, 0x1E	; 30
     d7c:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	
	nokia_lcd_write_string(modo_string, 1);
     d80:	61 e0       	ldi	r22, 0x01	; 1
     d82:	ce 01       	movw	r24, r28
     d84:	01 96       	adiw	r24, 0x01	; 1
     d86:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 15);
     d8a:	6f e0       	ldi	r22, 0x0F	; 15
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string("T.Vd", 1);
     d92:	61 e0       	ldi	r22, 0x01	; 1
     d94:	87 e2       	ldi	r24, 0x27	; 39
     d96:	91 e0       	ldi	r25, 0x01	; 1
     d98:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30, 15);
     d9c:	6f e0       	ldi	r22, 0x0F	; 15
     d9e:	8e e1       	ldi	r24, 0x1E	; 30
     da0:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string(tempo_verde_s_string, 1);
     da4:	ce 01       	movw	r24, r28
     da6:	03 96       	adiw	r24, 0x03	; 3
     da8:	61 e0       	ldi	r22, 0x01	; 1
     daa:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 25);
     dae:	69 e1       	ldi	r22, 0x19	; 25
     db0:	80 e0       	ldi	r24, 0x00	; 0
     db2:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string("T.Vm", 1);
     db6:	61 e0       	ldi	r22, 0x01	; 1
     db8:	8c e2       	ldi	r24, 0x2C	; 44
     dba:	91 e0       	ldi	r25, 0x01	; 1
     dbc:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30, 25);
     dc0:	69 e1       	ldi	r22, 0x19	; 25
     dc2:	8e e1       	ldi	r24, 0x1E	; 30
     dc4:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string(tempo_vermelho_s_string, 1);
     dc8:	ce 01       	movw	r24, r28
     dca:	05 96       	adiw	r24, 0x05	; 5
     dcc:	61 e0       	ldi	r22, 0x01	; 1
     dce:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 35);
     dd2:	63 e2       	ldi	r22, 0x23	; 35
     dd4:	80 e0       	ldi	r24, 0x00	; 0
     dd6:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string("T.Am", 1);
     dda:	61 e0       	ldi	r22, 0x01	; 1
     ddc:	81 e3       	ldi	r24, 0x31	; 49
     dde:	91 e0       	ldi	r25, 0x01	; 1
     de0:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30, 35);
     de4:	63 e2       	ldi	r22, 0x23	; 35
     de6:	8e e1       	ldi	r24, 0x1E	; 30
     de8:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string(tempo_amarelo_s_string, 1);
     dec:	ce 01       	movw	r24, r28
     dee:	07 96       	adiw	r24, 0x07	; 7
     df0:	61 e0       	ldi	r22, 0x01	; 1
     df2:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(38, 5+selecao_parametro*10);
     df6:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
     dfa:	88 0f       	add	r24, r24
     dfc:	98 2f       	mov	r25, r24
     dfe:	99 0f       	add	r25, r25
     e00:	99 0f       	add	r25, r25
     e02:	89 0f       	add	r24, r25
     e04:	8b 5f       	subi	r24, 0xFB	; 251
     e06:	68 2f       	mov	r22, r24
     e08:	86 e2       	ldi	r24, 0x26	; 38
     e0a:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string("<", 1);
     e0e:	61 e0       	ldi	r22, 0x01	; 1
     e10:	86 e3       	ldi	r24, 0x36	; 54
     e12:	91 e0       	ldi	r25, 0x01	; 1
     e14:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	
	
	nokia_lcd_set_cursor(45, 25);
     e18:	69 e1       	ldi	r22, 0x19	; 25
     e1a:	8d e2       	ldi	r24, 0x2D	; 45
     e1c:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string(carros_por_min_string, 1);
     e20:	ce 01       	movw	r24, r28
     e22:	09 96       	adiw	r24, 0x09	; 9
     e24:	61 e0       	ldi	r22, 0x01	; 1
     e26:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(66, 25);
     e2a:	69 e1       	ldi	r22, 0x19	; 25
     e2c:	82 e4       	ldi	r24, 0x42	; 66
     e2e:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string("c/m", 1);
     e32:	61 e0       	ldi	r22, 0x01	; 1
     e34:	88 e3       	ldi	r24, 0x38	; 56
     e36:	91 e0       	ldi	r25, 0x01	; 1
     e38:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(45, 15);
     e3c:	6f e0       	ldi	r22, 0x0F	; 15
     e3e:	8d e2       	ldi	r24, 0x2D	; 45
     e40:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string(sensor_lux_string, 1);
     e44:	ce 01       	movw	r24, r28
     e46:	0d 96       	adiw	r24, 0x0d	; 13
     e48:	61 e0       	ldi	r22, 0x01	; 1
     e4a:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(66, 15);
     e4e:	6f e0       	ldi	r22, 0x0F	; 15
     e50:	82 e4       	ldi	r24, 0x42	; 66
     e52:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string("lux", 1);
     e56:	61 e0       	ldi	r22, 0x01	; 1
     e58:	8c e3       	ldi	r24, 0x3C	; 60
     e5a:	91 e0       	ldi	r25, 0x01	; 1
     e5c:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(45, 35);
     e60:	63 e2       	ldi	r22, 0x23	; 35
     e62:	8d e2       	ldi	r24, 0x2D	; 45
     e64:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string(sensor_temp_string, 1);
     e68:	ce 01       	movw	r24, r28
     e6a:	42 96       	adiw	r24, 0x12	; 18
     e6c:	61 e0       	ldi	r22, 0x01	; 1
     e6e:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	nokia_lcd_set_cursor(66, 35);
     e72:	63 e2       	ldi	r22, 0x23	; 35
     e74:	82 e4       	ldi	r24, 0x42	; 66
     e76:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <nokia_lcd_set_cursor>
	nokia_lcd_write_string("°C", 1);
     e7a:	61 e0       	ldi	r22, 0x01	; 1
     e7c:	80 e4       	ldi	r24, 0x40	; 64
     e7e:	91 e0       	ldi	r25, 0x01	; 1
     e80:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <nokia_lcd_write_string>
	
	
	
	nokia_lcd_render();
     e84:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <nokia_lcd_render>
}
     e88:	00 00       	nop
     e8a:	a3 96       	adiw	r28, 0x23	; 35
     e8c:	0f b6       	in	r0, 0x3f	; 63
     e8e:	f8 94       	cli
     e90:	de bf       	out	0x3e, r29	; 62
     e92:	0f be       	out	0x3f, r0	; 63
     e94:	cd bf       	out	0x3d, r28	; 61
     e96:	df 91       	pop	r29
     e98:	cf 91       	pop	r28
     e9a:	1f 91       	pop	r17
     e9c:	0f 91       	pop	r16
     e9e:	ff 90       	pop	r15
     ea0:	ef 90       	pop	r14
     ea2:	df 90       	pop	r13
     ea4:	cf 90       	pop	r12
     ea6:	08 95       	ret

00000ea8 <estima_carros_por_min>:

void estima_carros_por_min(uint8_t *flag_disparo)
{
     ea8:	cf 93       	push	r28
     eaa:	df 93       	push	r29
     eac:	00 d0       	rcall	.+0      	; 0xeae <estima_carros_por_min+0x6>
     eae:	cd b7       	in	r28, 0x3d	; 61
     eb0:	de b7       	in	r29, 0x3e	; 62
     eb2:	9a 83       	std	Y+2, r25	; 0x02
     eb4:	89 83       	std	Y+1, r24	; 0x01
	static uint16_t aux = 0;
	
	if (*flag_disparo)
     eb6:	89 81       	ldd	r24, Y+1	; 0x01
     eb8:	9a 81       	ldd	r25, Y+2	; 0x02
     eba:	fc 01       	movw	r30, r24
     ebc:	80 81       	ld	r24, Z
     ebe:	88 23       	and	r24, r24
     ec0:	09 f4       	brne	.+2      	; 0xec4 <estima_carros_por_min+0x1c>
     ec2:	c0 c0       	rjmp	.+384    	; 0x1044 <estima_carros_por_min+0x19c>
	{
		*flag_disparo = 0;
     ec4:	89 81       	ldd	r24, Y+1	; 0x01
     ec6:	9a 81       	ldd	r25, Y+2	; 0x02
     ec8:	fc 01       	movw	r30, r24
     eca:	10 82       	st	Z, r1
		aux = num_carros;
     ecc:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <num_carros>
     ed0:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <num_carros+0x1>
     ed4:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <aux.2197+0x1>
     ed8:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <aux.2197>
		num_carros = 0;
     edc:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <num_carros+0x1>
     ee0:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <num_carros>
		semaforo.carros_por_min = aux*12;
     ee4:	20 91 57 01 	lds	r18, 0x0157	; 0x800157 <aux.2197>
     ee8:	30 91 58 01 	lds	r19, 0x0158	; 0x800158 <aux.2197+0x1>
     eec:	c9 01       	movw	r24, r18
     eee:	88 0f       	add	r24, r24
     ef0:	99 1f       	adc	r25, r25
     ef2:	82 0f       	add	r24, r18
     ef4:	93 1f       	adc	r25, r19
     ef6:	88 0f       	add	r24, r24
     ef8:	99 1f       	adc	r25, r25
     efa:	88 0f       	add	r24, r24
     efc:	99 1f       	adc	r25, r25
     efe:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
     f02:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
		
		
		if (semaforo.modo)
     f06:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f0a:	88 23       	and	r24, r24
     f0c:	09 f4       	brne	.+2      	; 0xf10 <estima_carros_por_min+0x68>
     f0e:	9a c0       	rjmp	.+308    	; 0x1044 <estima_carros_por_min+0x19c>
		{
			semaforo.tempo_verde_ms = 1000 + ((uint16_t)(semaforo.carros_por_min*16.7)/1000)*1000;
     f10:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
     f14:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
     f18:	cc 01       	movw	r24, r24
     f1a:	a0 e0       	ldi	r26, 0x00	; 0
     f1c:	b0 e0       	ldi	r27, 0x00	; 0
     f1e:	bc 01       	movw	r22, r24
     f20:	cd 01       	movw	r24, r26
     f22:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <__floatunsisf>
     f26:	dc 01       	movw	r26, r24
     f28:	cb 01       	movw	r24, r22
     f2a:	2a e9       	ldi	r18, 0x9A	; 154
     f2c:	39 e9       	ldi	r19, 0x99	; 153
     f2e:	45 e8       	ldi	r20, 0x85	; 133
     f30:	51 e4       	ldi	r21, 0x41	; 65
     f32:	bc 01       	movw	r22, r24
     f34:	cd 01       	movw	r24, r26
     f36:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
     f3a:	dc 01       	movw	r26, r24
     f3c:	cb 01       	movw	r24, r22
     f3e:	bc 01       	movw	r22, r24
     f40:	cd 01       	movw	r24, r26
     f42:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__fixunssfsi>
     f46:	dc 01       	movw	r26, r24
     f48:	cb 01       	movw	r24, r22
     f4a:	96 95       	lsr	r25
     f4c:	87 95       	ror	r24
     f4e:	96 95       	lsr	r25
     f50:	87 95       	ror	r24
     f52:	96 95       	lsr	r25
     f54:	87 95       	ror	r24
     f56:	9c 01       	movw	r18, r24
     f58:	a5 ec       	ldi	r26, 0xC5	; 197
     f5a:	b0 e2       	ldi	r27, 0x20	; 32
     f5c:	0e 94 3c 11 	call	0x2278	; 0x2278 <__umulhisi3>
     f60:	92 95       	swap	r25
     f62:	82 95       	swap	r24
     f64:	8f 70       	andi	r24, 0x0F	; 15
     f66:	89 27       	eor	r24, r25
     f68:	9f 70       	andi	r25, 0x0F	; 15
     f6a:	89 27       	eor	r24, r25
     f6c:	ac 01       	movw	r20, r24
     f6e:	4f 5f       	subi	r20, 0xFF	; 255
     f70:	5f 4f       	sbci	r21, 0xFF	; 255
     f72:	28 ee       	ldi	r18, 0xE8	; 232
     f74:	33 e0       	ldi	r19, 0x03	; 3
     f76:	42 9f       	mul	r20, r18
     f78:	c0 01       	movw	r24, r0
     f7a:	43 9f       	mul	r20, r19
     f7c:	90 0d       	add	r25, r0
     f7e:	52 9f       	mul	r21, r18
     f80:	90 0d       	add	r25, r0
     f82:	11 24       	eor	r1, r1
     f84:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     f88:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
			if (semaforo.tempo_verde_ms > 9000)
     f8c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     f90:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     f94:	89 32       	cpi	r24, 0x29	; 41
     f96:	93 42       	sbci	r25, 0x23	; 35
     f98:	30 f0       	brcs	.+12     	; 0xfa6 <estima_carros_por_min+0xfe>
			semaforo.tempo_verde_ms = 9000;
     f9a:	88 e2       	ldi	r24, 0x28	; 40
     f9c:	93 e2       	ldi	r25, 0x23	; 35
     f9e:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     fa2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
			
			semaforo.tempo_vermelho_ms = 9000 - ((uint16_t)(semaforo.carros_por_min*16.7)/1000)*1000;
     fa6:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
     faa:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
     fae:	cc 01       	movw	r24, r24
     fb0:	a0 e0       	ldi	r26, 0x00	; 0
     fb2:	b0 e0       	ldi	r27, 0x00	; 0
     fb4:	bc 01       	movw	r22, r24
     fb6:	cd 01       	movw	r24, r26
     fb8:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <__floatunsisf>
     fbc:	dc 01       	movw	r26, r24
     fbe:	cb 01       	movw	r24, r22
     fc0:	2a e9       	ldi	r18, 0x9A	; 154
     fc2:	39 e9       	ldi	r19, 0x99	; 153
     fc4:	45 e8       	ldi	r20, 0x85	; 133
     fc6:	51 e4       	ldi	r21, 0x41	; 65
     fc8:	bc 01       	movw	r22, r24
     fca:	cd 01       	movw	r24, r26
     fcc:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
     fd0:	dc 01       	movw	r26, r24
     fd2:	cb 01       	movw	r24, r22
     fd4:	bc 01       	movw	r22, r24
     fd6:	cd 01       	movw	r24, r26
     fd8:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__fixunssfsi>
     fdc:	dc 01       	movw	r26, r24
     fde:	cb 01       	movw	r24, r22
     fe0:	96 95       	lsr	r25
     fe2:	87 95       	ror	r24
     fe4:	96 95       	lsr	r25
     fe6:	87 95       	ror	r24
     fe8:	96 95       	lsr	r25
     fea:	87 95       	ror	r24
     fec:	9c 01       	movw	r18, r24
     fee:	a5 ec       	ldi	r26, 0xC5	; 197
     ff0:	b0 e2       	ldi	r27, 0x20	; 32
     ff2:	0e 94 3c 11 	call	0x2278	; 0x2278 <__umulhisi3>
     ff6:	ac 01       	movw	r20, r24
     ff8:	52 95       	swap	r21
     ffa:	42 95       	swap	r20
     ffc:	4f 70       	andi	r20, 0x0F	; 15
     ffe:	45 27       	eor	r20, r21
    1000:	5f 70       	andi	r21, 0x0F	; 15
    1002:	45 27       	eor	r20, r21
    1004:	28 ee       	ldi	r18, 0xE8	; 232
    1006:	33 e0       	ldi	r19, 0x03	; 3
    1008:	42 9f       	mul	r20, r18
    100a:	c0 01       	movw	r24, r0
    100c:	43 9f       	mul	r20, r19
    100e:	90 0d       	add	r25, r0
    1010:	52 9f       	mul	r21, r18
    1012:	90 0d       	add	r25, r0
    1014:	11 24       	eor	r1, r1
    1016:	28 e2       	ldi	r18, 0x28	; 40
    1018:	33 e2       	ldi	r19, 0x23	; 35
    101a:	a9 01       	movw	r20, r18
    101c:	48 1b       	sub	r20, r24
    101e:	59 0b       	sbc	r21, r25
    1020:	ca 01       	movw	r24, r20
    1022:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
    1026:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
			if (semaforo.tempo_vermelho_ms > 32000)
    102a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    102e:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
    1032:	81 30       	cpi	r24, 0x01	; 1
    1034:	9d 47       	sbci	r25, 0x7D	; 125
    1036:	30 f0       	brcs	.+12     	; 0x1044 <estima_carros_por_min+0x19c>
			semaforo.tempo_vermelho_ms = 1000;
    1038:	88 ee       	ldi	r24, 0xE8	; 232
    103a:	93 e0       	ldi	r25, 0x03	; 3
    103c:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
    1040:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
		}
	}
}
    1044:	00 00       	nop
    1046:	0f 90       	pop	r0
    1048:	0f 90       	pop	r0
    104a:	df 91       	pop	r29
    104c:	cf 91       	pop	r28
    104e:	08 95       	ret

00001050 <leituraADC_sensores>:

void leituraADC_sensores(uint8_t *flag_disparo)
{
    1050:	cf 92       	push	r12
    1052:	df 92       	push	r13
    1054:	ef 92       	push	r14
    1056:	ff 92       	push	r15
    1058:	0f 93       	push	r16
    105a:	1f 93       	push	r17
    105c:	cf 93       	push	r28
    105e:	df 93       	push	r29
    1060:	cd b7       	in	r28, 0x3d	; 61
    1062:	de b7       	in	r29, 0x3e	; 62
    1064:	6e 97       	sbiw	r28, 0x1e	; 30
    1066:	0f b6       	in	r0, 0x3f	; 63
    1068:	f8 94       	cli
    106a:	de bf       	out	0x3e, r29	; 62
    106c:	0f be       	out	0x3f, r0	; 63
    106e:	cd bf       	out	0x3d, r28	; 61
    1070:	9e 8f       	std	Y+30, r25	; 0x1e
    1072:	8d 8f       	std	Y+29, r24	; 0x1d
	static uint16_t cont=0;	
	float R1=9998,logR2,R2,T, c1=0.9187244108E-03, c2=2.643518478E-04,c3=0.006895693462E-07;
    1074:	80 e0       	ldi	r24, 0x00	; 0
    1076:	98 e3       	ldi	r25, 0x38	; 56
    1078:	ac e1       	ldi	r26, 0x1C	; 28
    107a:	b6 e4       	ldi	r27, 0x46	; 70
    107c:	89 83       	std	Y+1, r24	; 0x01
    107e:	9a 83       	std	Y+2, r25	; 0x02
    1080:	ab 83       	std	Y+3, r26	; 0x03
    1082:	bc 83       	std	Y+4, r27	; 0x04
    1084:	8d e8       	ldi	r24, 0x8D	; 141
    1086:	96 ed       	ldi	r25, 0xD6	; 214
    1088:	a0 e7       	ldi	r26, 0x70	; 112
    108a:	ba e3       	ldi	r27, 0x3A	; 58
    108c:	8d 83       	std	Y+5, r24	; 0x05
    108e:	9e 83       	std	Y+6, r25	; 0x06
    1090:	af 83       	std	Y+7, r26	; 0x07
    1092:	b8 87       	std	Y+8, r27	; 0x08
    1094:	84 eb       	ldi	r24, 0xB4	; 180
    1096:	98 e9       	ldi	r25, 0x98	; 152
    1098:	aa e8       	ldi	r26, 0x8A	; 138
    109a:	b9 e3       	ldi	r27, 0x39	; 57
    109c:	89 87       	std	Y+9, r24	; 0x09
    109e:	9a 87       	std	Y+10, r25	; 0x0a
    10a0:	ab 87       	std	Y+11, r26	; 0x0b
    10a2:	bc 87       	std	Y+12, r27	; 0x0c
    10a4:	81 e2       	ldi	r24, 0x21	; 33
    10a6:	9c e8       	ldi	r25, 0x8C	; 140
    10a8:	ad e3       	ldi	r26, 0x3D	; 61
    10aa:	b0 e3       	ldi	r27, 0x30	; 48
    10ac:	8d 87       	std	Y+13, r24	; 0x0d
    10ae:	9e 87       	std	Y+14, r25	; 0x0e
    10b0:	af 87       	std	Y+15, r26	; 0x0f
    10b2:	b8 8b       	std	Y+16, r27	; 0x10
	
	if (*flag_disparo)
    10b4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    10b6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    10b8:	fc 01       	movw	r30, r24
    10ba:	80 81       	ld	r24, Z
    10bc:	88 23       	and	r24, r24
    10be:	09 f4       	brne	.+2      	; 0x10c2 <leituraADC_sensores+0x72>
    10c0:	31 c1       	rjmp	.+610    	; 0x1324 <leituraADC_sensores+0x2d4>
	{
		switch(cont)
    10c2:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <cont.2201>
    10c6:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <cont.2201+0x1>
    10ca:	00 97       	sbiw	r24, 0x00	; 0
    10cc:	21 f0       	breq	.+8      	; 0x10d6 <leituraADC_sensores+0x86>
    10ce:	01 97       	sbiw	r24, 0x01	; 1
    10d0:	09 f4       	brne	.+2      	; 0x10d4 <leituraADC_sensores+0x84>
    10d2:	6c c0       	rjmp	.+216    	; 0x11ac <leituraADC_sensores+0x15c>
    10d4:	13 c1       	rjmp	.+550    	; 0x12fc <leituraADC_sensores+0x2ac>
		{
		case 0:
		semaforo.sensor_lux = (1023000/ADC) - 1000;
    10d6:	88 e7       	ldi	r24, 0x78	; 120
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	fc 01       	movw	r30, r24
    10dc:	80 81       	ld	r24, Z
    10de:	91 81       	ldd	r25, Z+1	; 0x01
    10e0:	9c 01       	movw	r18, r24
    10e2:	40 e0       	ldi	r20, 0x00	; 0
    10e4:	50 e0       	ldi	r21, 0x00	; 0
    10e6:	88 e1       	ldi	r24, 0x18	; 24
    10e8:	9c e9       	ldi	r25, 0x9C	; 156
    10ea:	af e0       	ldi	r26, 0x0F	; 15
    10ec:	b0 e0       	ldi	r27, 0x00	; 0
    10ee:	bc 01       	movw	r22, r24
    10f0:	cd 01       	movw	r24, r26
    10f2:	0e 94 1d 11 	call	0x223a	; 0x223a <__divmodsi4>
    10f6:	da 01       	movw	r26, r20
    10f8:	c9 01       	movw	r24, r18
    10fa:	88 5e       	subi	r24, 0xE8	; 232
    10fc:	93 40       	sbci	r25, 0x03	; 3
    10fe:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
    1102:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
		if (((semaforo.sensor_lux <= 300)&& (!(PIND & (1<<0)))) || (semaforo.sensor_lux <= 300)&&(semaforo.carros_por_min>0))
    1106:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
    110a:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
    110e:	8d 32       	cpi	r24, 0x2D	; 45
    1110:	91 40       	sbci	r25, 0x01	; 1
    1112:	50 f4       	brcc	.+20     	; 0x1128 <leituraADC_sensores+0xd8>
    1114:	89 e2       	ldi	r24, 0x29	; 41
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	fc 01       	movw	r30, r24
    111a:	80 81       	ld	r24, Z
    111c:	88 2f       	mov	r24, r24
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	81 70       	andi	r24, 0x01	; 1
    1122:	99 27       	eor	r25, r25
    1124:	89 2b       	or	r24, r25
    1126:	69 f0       	breq	.+26     	; 0x1142 <leituraADC_sensores+0xf2>
    1128:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
    112c:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
    1130:	8d 32       	cpi	r24, 0x2D	; 45
    1132:	91 40       	sbci	r25, 0x01	; 1
    1134:	60 f4       	brcc	.+24     	; 0x114e <leituraADC_sensores+0xfe>
    1136:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
    113a:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
    113e:	89 2b       	or	r24, r25
    1140:	31 f0       	breq	.+12     	; 0x114e <leituraADC_sensores+0xfe>
		{
			OCR2B = 250;
    1142:	84 eb       	ldi	r24, 0xB4	; 180
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	2a ef       	ldi	r18, 0xFA	; 250
    1148:	fc 01       	movw	r30, r24
    114a:	20 83       	st	Z, r18
    114c:	29 c0       	rjmp	.+82     	; 0x11a0 <leituraADC_sensores+0x150>
		}
		else if (((semaforo.sensor_lux <= 300)&& (!(!(PIND & (1<<0))))) || (semaforo.sensor_lux <= 300)&&(semaforo.carros_por_min>0))
    114e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
    1152:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
    1156:	8d 32       	cpi	r24, 0x2D	; 45
    1158:	91 40       	sbci	r25, 0x01	; 1
    115a:	50 f4       	brcc	.+20     	; 0x1170 <leituraADC_sensores+0x120>
    115c:	89 e2       	ldi	r24, 0x29	; 41
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	fc 01       	movw	r30, r24
    1162:	80 81       	ld	r24, Z
    1164:	88 2f       	mov	r24, r24
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	81 70       	andi	r24, 0x01	; 1
    116a:	99 27       	eor	r25, r25
    116c:	89 2b       	or	r24, r25
    116e:	69 f4       	brne	.+26     	; 0x118a <leituraADC_sensores+0x13a>
    1170:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
    1174:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
    1178:	8d 32       	cpi	r24, 0x2D	; 45
    117a:	91 40       	sbci	r25, 0x01	; 1
    117c:	60 f4       	brcc	.+24     	; 0x1196 <leituraADC_sensores+0x146>
    117e:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
    1182:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
    1186:	89 2b       	or	r24, r25
    1188:	31 f0       	breq	.+12     	; 0x1196 <leituraADC_sensores+0x146>
		{
			OCR2B = 80;
    118a:	84 eb       	ldi	r24, 0xB4	; 180
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	20 e5       	ldi	r18, 0x50	; 80
    1190:	fc 01       	movw	r30, r24
    1192:	20 83       	st	Z, r18
    1194:	05 c0       	rjmp	.+10     	; 0x11a0 <leituraADC_sensores+0x150>
		}
		else
		OCR2B = 1;
    1196:	84 eb       	ldi	r24, 0xB4	; 180
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	21 e0       	ldi	r18, 0x01	; 1
    119c:	fc 01       	movw	r30, r24
    119e:	20 83       	st	Z, r18
		ADMUX = 0b01000001;
    11a0:	8c e7       	ldi	r24, 0x7C	; 124
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	21 e4       	ldi	r18, 0x41	; 65
    11a6:	fc 01       	movw	r30, r24
    11a8:	20 83       	st	Z, r18
		break;
    11aa:	a8 c0       	rjmp	.+336    	; 0x12fc <leituraADC_sensores+0x2ac>
		
		case 1:
		R2 = (1023 / (float)ADC - 1) * R1;
    11ac:	88 e7       	ldi	r24, 0x78	; 120
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	fc 01       	movw	r30, r24
    11b2:	80 81       	ld	r24, Z
    11b4:	91 81       	ldd	r25, Z+1	; 0x01
    11b6:	cc 01       	movw	r24, r24
    11b8:	a0 e0       	ldi	r26, 0x00	; 0
    11ba:	b0 e0       	ldi	r27, 0x00	; 0
    11bc:	bc 01       	movw	r22, r24
    11be:	cd 01       	movw	r24, r26
    11c0:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <__floatunsisf>
    11c4:	dc 01       	movw	r26, r24
    11c6:	cb 01       	movw	r24, r22
    11c8:	9c 01       	movw	r18, r24
    11ca:	ad 01       	movw	r20, r26
    11cc:	60 e0       	ldi	r22, 0x00	; 0
    11ce:	70 ec       	ldi	r23, 0xC0	; 192
    11d0:	8f e7       	ldi	r24, 0x7F	; 127
    11d2:	94 e4       	ldi	r25, 0x44	; 68
    11d4:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <__divsf3>
    11d8:	dc 01       	movw	r26, r24
    11da:	cb 01       	movw	r24, r22
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	40 e8       	ldi	r20, 0x80	; 128
    11e2:	5f e3       	ldi	r21, 0x3F	; 63
    11e4:	bc 01       	movw	r22, r24
    11e6:	cd 01       	movw	r24, r26
    11e8:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <__subsf3>
    11ec:	dc 01       	movw	r26, r24
    11ee:	cb 01       	movw	r24, r22
    11f0:	29 81       	ldd	r18, Y+1	; 0x01
    11f2:	3a 81       	ldd	r19, Y+2	; 0x02
    11f4:	4b 81       	ldd	r20, Y+3	; 0x03
    11f6:	5c 81       	ldd	r21, Y+4	; 0x04
    11f8:	bc 01       	movw	r22, r24
    11fa:	cd 01       	movw	r24, r26
    11fc:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
    1200:	dc 01       	movw	r26, r24
    1202:	cb 01       	movw	r24, r22
    1204:	89 8b       	std	Y+17, r24	; 0x11
    1206:	9a 8b       	std	Y+18, r25	; 0x12
    1208:	ab 8b       	std	Y+19, r26	; 0x13
    120a:	bc 8b       	std	Y+20, r27	; 0x14
		logR2 = log(R2);
    120c:	89 89       	ldd	r24, Y+17	; 0x11
    120e:	9a 89       	ldd	r25, Y+18	; 0x12
    1210:	ab 89       	ldd	r26, Y+19	; 0x13
    1212:	bc 89       	ldd	r27, Y+20	; 0x14
    1214:	bc 01       	movw	r22, r24
    1216:	cd 01       	movw	r24, r26
    1218:	0e 94 05 10 	call	0x200a	; 0x200a <log>
    121c:	dc 01       	movw	r26, r24
    121e:	cb 01       	movw	r24, r22
    1220:	8d 8b       	std	Y+21, r24	; 0x15
    1222:	9e 8b       	std	Y+22, r25	; 0x16
    1224:	af 8b       	std	Y+23, r26	; 0x17
    1226:	b8 8f       	std	Y+24, r27	; 0x18
		T = (1 / (c1 + (c2*logR2) + (c3*logR2*logR2*logR2)));
    1228:	2d 89       	ldd	r18, Y+21	; 0x15
    122a:	3e 89       	ldd	r19, Y+22	; 0x16
    122c:	4f 89       	ldd	r20, Y+23	; 0x17
    122e:	58 8d       	ldd	r21, Y+24	; 0x18
    1230:	69 85       	ldd	r22, Y+9	; 0x09
    1232:	7a 85       	ldd	r23, Y+10	; 0x0a
    1234:	8b 85       	ldd	r24, Y+11	; 0x0b
    1236:	9c 85       	ldd	r25, Y+12	; 0x0c
    1238:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
    123c:	dc 01       	movw	r26, r24
    123e:	cb 01       	movw	r24, r22
    1240:	2d 81       	ldd	r18, Y+5	; 0x05
    1242:	3e 81       	ldd	r19, Y+6	; 0x06
    1244:	4f 81       	ldd	r20, Y+7	; 0x07
    1246:	58 85       	ldd	r21, Y+8	; 0x08
    1248:	bc 01       	movw	r22, r24
    124a:	cd 01       	movw	r24, r26
    124c:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__addsf3>
    1250:	dc 01       	movw	r26, r24
    1252:	cb 01       	movw	r24, r22
    1254:	6c 01       	movw	r12, r24
    1256:	7d 01       	movw	r14, r26
    1258:	2d 89       	ldd	r18, Y+21	; 0x15
    125a:	3e 89       	ldd	r19, Y+22	; 0x16
    125c:	4f 89       	ldd	r20, Y+23	; 0x17
    125e:	58 8d       	ldd	r21, Y+24	; 0x18
    1260:	6d 85       	ldd	r22, Y+13	; 0x0d
    1262:	7e 85       	ldd	r23, Y+14	; 0x0e
    1264:	8f 85       	ldd	r24, Y+15	; 0x0f
    1266:	98 89       	ldd	r25, Y+16	; 0x10
    1268:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
    126c:	dc 01       	movw	r26, r24
    126e:	cb 01       	movw	r24, r22
    1270:	2d 89       	ldd	r18, Y+21	; 0x15
    1272:	3e 89       	ldd	r19, Y+22	; 0x16
    1274:	4f 89       	ldd	r20, Y+23	; 0x17
    1276:	58 8d       	ldd	r21, Y+24	; 0x18
    1278:	bc 01       	movw	r22, r24
    127a:	cd 01       	movw	r24, r26
    127c:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
    1280:	dc 01       	movw	r26, r24
    1282:	cb 01       	movw	r24, r22
    1284:	2d 89       	ldd	r18, Y+21	; 0x15
    1286:	3e 89       	ldd	r19, Y+22	; 0x16
    1288:	4f 89       	ldd	r20, Y+23	; 0x17
    128a:	58 8d       	ldd	r21, Y+24	; 0x18
    128c:	bc 01       	movw	r22, r24
    128e:	cd 01       	movw	r24, r26
    1290:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
    1294:	dc 01       	movw	r26, r24
    1296:	cb 01       	movw	r24, r22
    1298:	9c 01       	movw	r18, r24
    129a:	ad 01       	movw	r20, r26
    129c:	c7 01       	movw	r24, r14
    129e:	b6 01       	movw	r22, r12
    12a0:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__addsf3>
    12a4:	dc 01       	movw	r26, r24
    12a6:	cb 01       	movw	r24, r22
    12a8:	9c 01       	movw	r18, r24
    12aa:	ad 01       	movw	r20, r26
    12ac:	60 e0       	ldi	r22, 0x00	; 0
    12ae:	70 e0       	ldi	r23, 0x00	; 0
    12b0:	80 e8       	ldi	r24, 0x80	; 128
    12b2:	9f e3       	ldi	r25, 0x3F	; 63
    12b4:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <__divsf3>
    12b8:	dc 01       	movw	r26, r24
    12ba:	cb 01       	movw	r24, r22
    12bc:	89 8f       	std	Y+25, r24	; 0x19
    12be:	9a 8f       	std	Y+26, r25	; 0x1a
    12c0:	ab 8f       	std	Y+27, r26	; 0x1b
    12c2:	bc 8f       	std	Y+28, r27	; 0x1c
		semaforo.senstor_temp = T - 177;
    12c4:	20 e0       	ldi	r18, 0x00	; 0
    12c6:	30 e0       	ldi	r19, 0x00	; 0
    12c8:	41 e3       	ldi	r20, 0x31	; 49
    12ca:	53 e4       	ldi	r21, 0x43	; 67
    12cc:	69 8d       	ldd	r22, Y+25	; 0x19
    12ce:	7a 8d       	ldd	r23, Y+26	; 0x1a
    12d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    12d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    12d4:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <__subsf3>
    12d8:	dc 01       	movw	r26, r24
    12da:	cb 01       	movw	r24, r22
    12dc:	bc 01       	movw	r22, r24
    12de:	cd 01       	movw	r24, r26
    12e0:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__fixunssfsi>
    12e4:	dc 01       	movw	r26, r24
    12e6:	cb 01       	movw	r24, r22
    12e8:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <__DATA_REGION_ORIGIN__+0xc>
    12ec:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__DATA_REGION_ORIGIN__+0xb>
		ADMUX= 0b01000000;
    12f0:	8c e7       	ldi	r24, 0x7C	; 124
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	20 e4       	ldi	r18, 0x40	; 64
    12f6:	fc 01       	movw	r30, r24
    12f8:	20 83       	st	Z, r18
		break;
    12fa:	00 00       	nop
		}
		
		if(cont <1)
    12fc:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <cont.2201>
    1300:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <cont.2201+0x1>
    1304:	89 2b       	or	r24, r25
    1306:	51 f4       	brne	.+20     	; 0x131c <leituraADC_sensores+0x2cc>
		{
			cont++;
    1308:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <cont.2201>
    130c:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <cont.2201+0x1>
    1310:	01 96       	adiw	r24, 0x01	; 1
    1312:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <cont.2201+0x1>
    1316:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <cont.2201>
    131a:	04 c0       	rjmp	.+8      	; 0x1324 <leituraADC_sensores+0x2d4>
		}
		else
			cont=0;
    131c:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <cont.2201+0x1>
    1320:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <cont.2201>
		}
		
		*flag_disparo = 0;
    1324:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1326:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1328:	fc 01       	movw	r30, r24
    132a:	10 82       	st	Z, r1
		anima_LCD(semaforo);
    132c:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1330:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1334:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    1338:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    133c:	00 91 04 01 	lds	r16, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
    1340:	10 91 05 01 	lds	r17, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
    1344:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
    1348:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
    134c:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
    1350:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
    1354:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
    1358:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <__DATA_REGION_ORIGIN__+0xb>
    135c:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__DATA_REGION_ORIGIN__+0xc>
    1360:	0e 94 c3 05 	call	0xb86	; 0xb86 <anima_LCD>
	}
    1364:	00 00       	nop
    1366:	6e 96       	adiw	r28, 0x1e	; 30
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	f8 94       	cli
    136c:	de bf       	out	0x3e, r29	; 62
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	cd bf       	out	0x3d, r28	; 61
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	1f 91       	pop	r17
    1378:	0f 91       	pop	r16
    137a:	ff 90       	pop	r15
    137c:	ef 90       	pop	r14
    137e:	df 90       	pop	r13
    1380:	cf 90       	pop	r12
    1382:	08 95       	ret

00001384 <main>:


int main(void)
{
    1384:	8f 92       	push	r8
    1386:	9f 92       	push	r9
    1388:	af 92       	push	r10
    138a:	bf 92       	push	r11
    138c:	cf 92       	push	r12
    138e:	df 92       	push	r13
    1390:	ef 92       	push	r14
    1392:	ff 92       	push	r15
    1394:	0f 93       	push	r16
    1396:	1f 93       	push	r17
    1398:	cf 93       	push	r28
    139a:	df 93       	push	r29
    139c:	cd b7       	in	r28, 0x3d	; 61
    139e:	de b7       	in	r29, 0x3e	; 62
	//GPIO
	DDRB  = 0b11111111;
    13a0:	84 e2       	ldi	r24, 0x24	; 36
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	2f ef       	ldi	r18, 0xFF	; 255
    13a6:	fc 01       	movw	r30, r24
    13a8:	20 83       	st	Z, r18
	DDRD  = 0b10001000;
    13aa:	8a e2       	ldi	r24, 0x2A	; 42
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	28 e8       	ldi	r18, 0x88	; 136
    13b0:	fc 01       	movw	r30, r24
    13b2:	20 83       	st	Z, r18
	DDRC  = ~((1<<6)|(1<<0));
    13b4:	87 e2       	ldi	r24, 0x27	; 39
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	2e eb       	ldi	r18, 0xBE	; 190
    13ba:	fc 01       	movw	r30, r24
    13bc:	20 83       	st	Z, r18
	PORTD = 0b01110111;
    13be:	8b e2       	ldi	r24, 0x2B	; 43
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	27 e7       	ldi	r18, 0x77	; 119
    13c4:	fc 01       	movw	r30, r24
    13c6:	20 83       	st	Z, r18
	PORTC |= (1<<6);
    13c8:	88 e2       	ldi	r24, 0x28	; 40
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	28 e2       	ldi	r18, 0x28	; 40
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	f9 01       	movw	r30, r18
    13d2:	20 81       	ld	r18, Z
    13d4:	20 64       	ori	r18, 0x40	; 64
    13d6:	fc 01       	movw	r30, r24
    13d8:	20 83       	st	Z, r18
	
	//USART
	UBRR0H = (unsigned char)(MYUBRR>>8);	//Ajusta a taxa de transmissão, parte alta
    13da:	85 ec       	ldi	r24, 0xC5	; 197
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	fc 01       	movw	r30, r24
    13e0:	10 82       	st	Z, r1
	UBRR0L = (unsigned char)MYUBRR;		//Ajusta a taxa de transmissão, parte baixa
    13e2:	84 ec       	ldi	r24, 0xC4	; 196
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	2f ef       	ldi	r18, 0xFF	; 255
    13e8:	fc 01       	movw	r30, r24
    13ea:	20 83       	st	Z, r18
	UCSR0B = (1<<RXCIE0)|(1<<RXEN0)|(1<<TXEN0); //Habilita a interrup. do receptor, Habilita o transmissor e o receptor
    13ec:	81 ec       	ldi	r24, 0xC1	; 193
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	28 e9       	ldi	r18, 0x98	; 152
    13f2:	fc 01       	movw	r30, r24
    13f4:	20 83       	st	Z, r18
	UCSR0C = (3<<UCSZ00); //Ajusta o formato do frame: 8 bits de dados e 1 de parada, paridade none
    13f6:	82 ec       	ldi	r24, 0xC2	; 194
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	26 e0       	ldi	r18, 0x06	; 6
    13fc:	fc 01       	movw	r30, r24
    13fe:	20 83       	st	Z, r18
	
	
	EICRA = 0b00001010;
    1400:	89 e6       	ldi	r24, 0x69	; 105
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	2a e0       	ldi	r18, 0x0A	; 10
    1406:	fc 01       	movw	r30, r24
    1408:	20 83       	st	Z, r18
	EIMSK = 0b00000011;
    140a:	8d e3       	ldi	r24, 0x3D	; 61
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	23 e0       	ldi	r18, 0x03	; 3
    1410:	fc 01       	movw	r30, r24
    1412:	20 83       	st	Z, r18
	PCICR = 0b00000100;
    1414:	88 e6       	ldi	r24, 0x68	; 104
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	24 e0       	ldi	r18, 0x04	; 4
    141a:	fc 01       	movw	r30, r24
    141c:	20 83       	st	Z, r18
	PCMSK2 =0b01110010;
    141e:	8d e6       	ldi	r24, 0x6D	; 109
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	22 e7       	ldi	r18, 0x72	; 114
    1424:	fc 01       	movw	r30, r24
    1426:	20 83       	st	Z, r18
	
	TCCR0A = 0b00000010;
    1428:	84 e4       	ldi	r24, 0x44	; 68
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	22 e0       	ldi	r18, 0x02	; 2
    142e:	fc 01       	movw	r30, r24
    1430:	20 83       	st	Z, r18
	TCCR0B = 0b00000011;
    1432:	85 e4       	ldi	r24, 0x45	; 69
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	23 e0       	ldi	r18, 0x03	; 3
    1438:	fc 01       	movw	r30, r24
    143a:	20 83       	st	Z, r18
	OCR0A = 249;
    143c:	87 e4       	ldi	r24, 0x47	; 71
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	29 ef       	ldi	r18, 0xF9	; 249
    1442:	fc 01       	movw	r30, r24
    1444:	20 83       	st	Z, r18
	TIMSK0 = 0b00000010;
    1446:	8e e6       	ldi	r24, 0x6E	; 110
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	22 e0       	ldi	r18, 0x02	; 2
    144c:	fc 01       	movw	r30, r24
    144e:	20 83       	st	Z, r18
	
	//Configuração PWM
	TCCR2A = 0b10100011;
    1450:	80 eb       	ldi	r24, 0xB0	; 176
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	23 ea       	ldi	r18, 0xA3	; 163
    1456:	fc 01       	movw	r30, r24
    1458:	20 83       	st	Z, r18
	TCCR2B = 0b00000011;
    145a:	81 eb       	ldi	r24, 0xB1	; 177
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	23 e0       	ldi	r18, 0x03	; 3
    1460:	fc 01       	movw	r30, r24
    1462:	20 83       	st	Z, r18

	//Configuração do ADC
	ADMUX =  0b01000000;
    1464:	8c e7       	ldi	r24, 0x7C	; 124
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	20 e4       	ldi	r18, 0x40	; 64
    146a:	fc 01       	movw	r30, r24
    146c:	20 83       	st	Z, r18
	ADCSRA = 0b11100111;
    146e:	8a e7       	ldi	r24, 0x7A	; 122
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	27 ee       	ldi	r18, 0xE7	; 231
    1474:	fc 01       	movw	r30, r24
    1476:	20 83       	st	Z, r18
	ADCSRB = 0b00000000;
    1478:	8b e7       	ldi	r24, 0x7B	; 123
    147a:	90 e0       	ldi	r25, 0x00	; 0
    147c:	fc 01       	movw	r30, r24
    147e:	10 82       	st	Z, r1
	DIDR0 =  0b00000001;
    1480:	8e e7       	ldi	r24, 0x7E	; 126
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	21 e0       	ldi	r18, 0x01	; 1
    1486:	fc 01       	movw	r30, r24
    1488:	20 83       	st	Z, r18
	
	//Inicialização do LCD
	nokia_lcd_init();
    148a:	0e 94 28 0b 	call	0x1650	; 0x1650 <nokia_lcd_init>
	anima_LCD(semaforo);
    148e:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1492:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1496:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    149a:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    149e:	00 91 04 01 	lds	r16, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
    14a2:	10 91 05 01 	lds	r17, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
    14a6:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
    14aa:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
    14ae:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
    14b2:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
    14b6:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
    14ba:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <__DATA_REGION_ORIGIN__+0xb>
    14be:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__DATA_REGION_ORIGIN__+0xc>
    14c2:	0e 94 c3 05 	call	0xb86	; 0xb86 <anima_LCD>
	sei();
    14c6:	78 94       	sei
	
	
	
	while (1)
	{
		anima_semaforo(semaforo,tempo_ms);
    14c8:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <tempo_ms>
    14cc:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <tempo_ms+0x1>
    14d0:	a0 91 49 01 	lds	r26, 0x0149	; 0x800149 <tempo_ms+0x2>
    14d4:	b0 91 4a 01 	lds	r27, 0x014A	; 0x80014a <tempo_ms+0x3>
    14d8:	4c 01       	movw	r8, r24
    14da:	5d 01       	movw	r10, r26
    14dc:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    14e0:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    14e4:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    14e8:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    14ec:	00 91 04 01 	lds	r16, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
    14f0:	10 91 05 01 	lds	r17, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
    14f4:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
    14f8:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
    14fc:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
    1500:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
    1504:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
    1508:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <__DATA_REGION_ORIGIN__+0xb>
    150c:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__DATA_REGION_ORIGIN__+0xc>
    1510:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <anima_semaforo>
		estima_carros_por_min(&flag_5000ms);
    1514:	85 e4       	ldi	r24, 0x45	; 69
    1516:	91 e0       	ldi	r25, 0x01	; 1
    1518:	0e 94 54 07 	call	0xea8	; 0xea8 <estima_carros_por_min>
		leituraADC_sensores(&flag_500ms);
    151c:	86 e4       	ldi	r24, 0x46	; 70
    151e:	91 e0       	ldi	r25, 0x01	; 1
    1520:	0e 94 28 08 	call	0x1050	; 0x1050 <leituraADC_sensores>
	}
    1524:	d1 cf       	rjmp	.-94     	; 0x14c8 <main+0x144>

00001526 <write>:
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
}
    1526:	1f 93       	push	r17
    1528:	cf 93       	push	r28
    152a:	df 93       	push	r29
    152c:	00 d0       	rcall	.+0      	; 0x152e <write+0x8>
    152e:	cd b7       	in	r28, 0x3d	; 61
    1530:	de b7       	in	r29, 0x3e	; 62
    1532:	89 83       	std	Y+1, r24	; 0x01
    1534:	6a 83       	std	Y+2, r22	; 0x02
    1536:	88 e2       	ldi	r24, 0x28	; 40
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	28 e2       	ldi	r18, 0x28	; 40
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	f9 01       	movw	r30, r18
    1540:	20 81       	ld	r18, Z
    1542:	2b 7f       	andi	r18, 0xFB	; 251
    1544:	fc 01       	movw	r30, r24
    1546:	20 83       	st	Z, r18
    1548:	8a 81       	ldd	r24, Y+2	; 0x02
    154a:	88 23       	and	r24, r24
    154c:	51 f0       	breq	.+20     	; 0x1562 <write+0x3c>
    154e:	88 e2       	ldi	r24, 0x28	; 40
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	28 e2       	ldi	r18, 0x28	; 40
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	f9 01       	movw	r30, r18
    1558:	20 81       	ld	r18, Z
    155a:	20 61       	ori	r18, 0x10	; 16
    155c:	fc 01       	movw	r30, r24
    155e:	20 83       	st	Z, r18
    1560:	09 c0       	rjmp	.+18     	; 0x1574 <write+0x4e>
    1562:	88 e2       	ldi	r24, 0x28	; 40
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	28 e2       	ldi	r18, 0x28	; 40
    1568:	30 e0       	ldi	r19, 0x00	; 0
    156a:	f9 01       	movw	r30, r18
    156c:	20 81       	ld	r18, Z
    156e:	2f 7e       	andi	r18, 0xEF	; 239
    1570:	fc 01       	movw	r30, r24
    1572:	20 83       	st	Z, r18
    1574:	10 e0       	ldi	r17, 0x00	; 0
    1576:	3c c0       	rjmp	.+120    	; 0x15f0 <write+0xca>
    1578:	89 81       	ldd	r24, Y+1	; 0x01
    157a:	88 2f       	mov	r24, r24
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	21 2f       	mov	r18, r17
    1580:	30 e0       	ldi	r19, 0x00	; 0
    1582:	47 e0       	ldi	r20, 0x07	; 7
    1584:	50 e0       	ldi	r21, 0x00	; 0
    1586:	ba 01       	movw	r22, r20
    1588:	62 1b       	sub	r22, r18
    158a:	73 0b       	sbc	r23, r19
    158c:	9b 01       	movw	r18, r22
    158e:	02 c0       	rjmp	.+4      	; 0x1594 <write+0x6e>
    1590:	95 95       	asr	r25
    1592:	87 95       	ror	r24
    1594:	2a 95       	dec	r18
    1596:	e2 f7       	brpl	.-8      	; 0x1590 <write+0x6a>
    1598:	81 70       	andi	r24, 0x01	; 1
    159a:	99 27       	eor	r25, r25
    159c:	89 2b       	or	r24, r25
    159e:	51 f0       	breq	.+20     	; 0x15b4 <write+0x8e>
    15a0:	88 e2       	ldi	r24, 0x28	; 40
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	28 e2       	ldi	r18, 0x28	; 40
    15a6:	30 e0       	ldi	r19, 0x00	; 0
    15a8:	f9 01       	movw	r30, r18
    15aa:	20 81       	ld	r18, Z
    15ac:	20 62       	ori	r18, 0x20	; 32
    15ae:	fc 01       	movw	r30, r24
    15b0:	20 83       	st	Z, r18
    15b2:	09 c0       	rjmp	.+18     	; 0x15c6 <write+0xa0>
    15b4:	88 e2       	ldi	r24, 0x28	; 40
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	28 e2       	ldi	r18, 0x28	; 40
    15ba:	30 e0       	ldi	r19, 0x00	; 0
    15bc:	f9 01       	movw	r30, r18
    15be:	20 81       	ld	r18, Z
    15c0:	2f 7d       	andi	r18, 0xDF	; 223
    15c2:	fc 01       	movw	r30, r24
    15c4:	20 83       	st	Z, r18
    15c6:	88 e2       	ldi	r24, 0x28	; 40
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	28 e2       	ldi	r18, 0x28	; 40
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	f9 01       	movw	r30, r18
    15d0:	20 81       	ld	r18, Z
    15d2:	20 64       	ori	r18, 0x40	; 64
    15d4:	fc 01       	movw	r30, r24
    15d6:	20 83       	st	Z, r18
    15d8:	88 e2       	ldi	r24, 0x28	; 40
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	28 e2       	ldi	r18, 0x28	; 40
    15de:	30 e0       	ldi	r19, 0x00	; 0
    15e0:	f9 01       	movw	r30, r18
    15e2:	20 81       	ld	r18, Z
    15e4:	2f 7b       	andi	r18, 0xBF	; 191
    15e6:	fc 01       	movw	r30, r24
    15e8:	20 83       	st	Z, r18
    15ea:	81 2f       	mov	r24, r17
    15ec:	11 e0       	ldi	r17, 0x01	; 1
    15ee:	18 0f       	add	r17, r24
    15f0:	18 30       	cpi	r17, 0x08	; 8
    15f2:	10 f2       	brcs	.-124    	; 0x1578 <write+0x52>
    15f4:	88 e2       	ldi	r24, 0x28	; 40
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	28 e2       	ldi	r18, 0x28	; 40
    15fa:	30 e0       	ldi	r19, 0x00	; 0
    15fc:	f9 01       	movw	r30, r18
    15fe:	20 81       	ld	r18, Z
    1600:	24 60       	ori	r18, 0x04	; 4
    1602:	fc 01       	movw	r30, r24
    1604:	20 83       	st	Z, r18
    1606:	00 00       	nop
    1608:	0f 90       	pop	r0
    160a:	0f 90       	pop	r0
    160c:	df 91       	pop	r29
    160e:	cf 91       	pop	r28
    1610:	1f 91       	pop	r17
    1612:	08 95       	ret

00001614 <write_cmd>:
    1614:	cf 93       	push	r28
    1616:	df 93       	push	r29
    1618:	1f 92       	push	r1
    161a:	cd b7       	in	r28, 0x3d	; 61
    161c:	de b7       	in	r29, 0x3e	; 62
    161e:	89 83       	std	Y+1, r24	; 0x01
    1620:	60 e0       	ldi	r22, 0x00	; 0
    1622:	89 81       	ldd	r24, Y+1	; 0x01
    1624:	0e 94 93 0a 	call	0x1526	; 0x1526 <write>
    1628:	00 00       	nop
    162a:	0f 90       	pop	r0
    162c:	df 91       	pop	r29
    162e:	cf 91       	pop	r28
    1630:	08 95       	ret

00001632 <write_data>:
    1632:	cf 93       	push	r28
    1634:	df 93       	push	r29
    1636:	1f 92       	push	r1
    1638:	cd b7       	in	r28, 0x3d	; 61
    163a:	de b7       	in	r29, 0x3e	; 62
    163c:	89 83       	std	Y+1, r24	; 0x01
    163e:	61 e0       	ldi	r22, 0x01	; 1
    1640:	89 81       	ldd	r24, Y+1	; 0x01
    1642:	0e 94 93 0a 	call	0x1526	; 0x1526 <write>
    1646:	00 00       	nop
    1648:	0f 90       	pop	r0
    164a:	df 91       	pop	r29
    164c:	cf 91       	pop	r28
    164e:	08 95       	ret

00001650 <nokia_lcd_init>:
    1650:	0f 93       	push	r16
    1652:	1f 93       	push	r17
    1654:	cf 93       	push	r28
    1656:	df 93       	push	r29
    1658:	cd b7       	in	r28, 0x3d	; 61
    165a:	de b7       	in	r29, 0x3e	; 62
    165c:	6c 97       	sbiw	r28, 0x1c	; 28
    165e:	0f b6       	in	r0, 0x3f	; 63
    1660:	f8 94       	cli
    1662:	de bf       	out	0x3e, r29	; 62
    1664:	0f be       	out	0x3f, r0	; 63
    1666:	cd bf       	out	0x3d, r28	; 61
    1668:	87 e2       	ldi	r24, 0x27	; 39
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	27 e2       	ldi	r18, 0x27	; 39
    166e:	30 e0       	ldi	r19, 0x00	; 0
    1670:	f9 01       	movw	r30, r18
    1672:	20 81       	ld	r18, Z
    1674:	24 60       	ori	r18, 0x04	; 4
    1676:	fc 01       	movw	r30, r24
    1678:	20 83       	st	Z, r18
    167a:	87 e2       	ldi	r24, 0x27	; 39
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	27 e2       	ldi	r18, 0x27	; 39
    1680:	30 e0       	ldi	r19, 0x00	; 0
    1682:	f9 01       	movw	r30, r18
    1684:	20 81       	ld	r18, Z
    1686:	28 60       	ori	r18, 0x08	; 8
    1688:	fc 01       	movw	r30, r24
    168a:	20 83       	st	Z, r18
    168c:	87 e2       	ldi	r24, 0x27	; 39
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	27 e2       	ldi	r18, 0x27	; 39
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	f9 01       	movw	r30, r18
    1696:	20 81       	ld	r18, Z
    1698:	20 61       	ori	r18, 0x10	; 16
    169a:	fc 01       	movw	r30, r24
    169c:	20 83       	st	Z, r18
    169e:	87 e2       	ldi	r24, 0x27	; 39
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	27 e2       	ldi	r18, 0x27	; 39
    16a4:	30 e0       	ldi	r19, 0x00	; 0
    16a6:	f9 01       	movw	r30, r18
    16a8:	20 81       	ld	r18, Z
    16aa:	20 62       	ori	r18, 0x20	; 32
    16ac:	fc 01       	movw	r30, r24
    16ae:	20 83       	st	Z, r18
    16b0:	87 e2       	ldi	r24, 0x27	; 39
    16b2:	90 e0       	ldi	r25, 0x00	; 0
    16b4:	27 e2       	ldi	r18, 0x27	; 39
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	f9 01       	movw	r30, r18
    16ba:	20 81       	ld	r18, Z
    16bc:	20 64       	ori	r18, 0x40	; 64
    16be:	fc 01       	movw	r30, r24
    16c0:	20 83       	st	Z, r18
    16c2:	88 e2       	ldi	r24, 0x28	; 40
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	28 e2       	ldi	r18, 0x28	; 40
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	f9 01       	movw	r30, r18
    16cc:	20 81       	ld	r18, Z
    16ce:	28 60       	ori	r18, 0x08	; 8
    16d0:	fc 01       	movw	r30, r24
    16d2:	20 83       	st	Z, r18
    16d4:	88 e2       	ldi	r24, 0x28	; 40
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	28 e2       	ldi	r18, 0x28	; 40
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	f9 01       	movw	r30, r18
    16de:	20 81       	ld	r18, Z
    16e0:	24 60       	ori	r18, 0x04	; 4
    16e2:	fc 01       	movw	r30, r24
    16e4:	20 83       	st	Z, r18
    16e6:	80 e0       	ldi	r24, 0x00	; 0
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	a0 e2       	ldi	r26, 0x20	; 32
    16ec:	b1 e4       	ldi	r27, 0x41	; 65
    16ee:	89 83       	std	Y+1, r24	; 0x01
    16f0:	9a 83       	std	Y+2, r25	; 0x02
    16f2:	ab 83       	std	Y+3, r26	; 0x03
    16f4:	bc 83       	std	Y+4, r27	; 0x04
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	30 e0       	ldi	r19, 0x00	; 0
    16fa:	4a e7       	ldi	r20, 0x7A	; 122
    16fc:	53 e4       	ldi	r21, 0x43	; 67
    16fe:	69 81       	ldd	r22, Y+1	; 0x01
    1700:	7a 81       	ldd	r23, Y+2	; 0x02
    1702:	8b 81       	ldd	r24, Y+3	; 0x03
    1704:	9c 81       	ldd	r25, Y+4	; 0x04
    1706:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
    170a:	dc 01       	movw	r26, r24
    170c:	cb 01       	movw	r24, r22
    170e:	8b 8b       	std	Y+19, r24	; 0x13
    1710:	9c 8b       	std	Y+20, r25	; 0x14
    1712:	ad 8b       	std	Y+21, r26	; 0x15
    1714:	be 8b       	std	Y+22, r27	; 0x16
    1716:	20 e0       	ldi	r18, 0x00	; 0
    1718:	30 e0       	ldi	r19, 0x00	; 0
    171a:	40 e8       	ldi	r20, 0x80	; 128
    171c:	5f e3       	ldi	r21, 0x3F	; 63
    171e:	6b 89       	ldd	r22, Y+19	; 0x13
    1720:	7c 89       	ldd	r23, Y+20	; 0x14
    1722:	8d 89       	ldd	r24, Y+21	; 0x15
    1724:	9e 89       	ldd	r25, Y+22	; 0x16
    1726:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <__cmpsf2>
    172a:	88 23       	and	r24, r24
    172c:	2c f4       	brge	.+10     	; 0x1738 <nokia_lcd_init+0xe8>
    172e:	81 e0       	ldi	r24, 0x01	; 1
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	98 8f       	std	Y+24, r25	; 0x18
    1734:	8f 8b       	std	Y+23, r24	; 0x17
    1736:	3f c0       	rjmp	.+126    	; 0x17b6 <nokia_lcd_init+0x166>
    1738:	20 e0       	ldi	r18, 0x00	; 0
    173a:	3f ef       	ldi	r19, 0xFF	; 255
    173c:	4f e7       	ldi	r20, 0x7F	; 127
    173e:	57 e4       	ldi	r21, 0x47	; 71
    1740:	6b 89       	ldd	r22, Y+19	; 0x13
    1742:	7c 89       	ldd	r23, Y+20	; 0x14
    1744:	8d 89       	ldd	r24, Y+21	; 0x15
    1746:	9e 89       	ldd	r25, Y+22	; 0x16
    1748:	0e 94 f8 0f 	call	0x1ff0	; 0x1ff0 <__gesf2>
    174c:	18 16       	cp	r1, r24
    174e:	4c f5       	brge	.+82     	; 0x17a2 <nokia_lcd_init+0x152>
    1750:	20 e0       	ldi	r18, 0x00	; 0
    1752:	30 e0       	ldi	r19, 0x00	; 0
    1754:	40 e2       	ldi	r20, 0x20	; 32
    1756:	51 e4       	ldi	r21, 0x41	; 65
    1758:	69 81       	ldd	r22, Y+1	; 0x01
    175a:	7a 81       	ldd	r23, Y+2	; 0x02
    175c:	8b 81       	ldd	r24, Y+3	; 0x03
    175e:	9c 81       	ldd	r25, Y+4	; 0x04
    1760:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
    1764:	dc 01       	movw	r26, r24
    1766:	cb 01       	movw	r24, r22
    1768:	bc 01       	movw	r22, r24
    176a:	cd 01       	movw	r24, r26
    176c:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__fixunssfsi>
    1770:	dc 01       	movw	r26, r24
    1772:	cb 01       	movw	r24, r22
    1774:	98 8f       	std	Y+24, r25	; 0x18
    1776:	8f 8b       	std	Y+23, r24	; 0x17
    1778:	0f c0       	rjmp	.+30     	; 0x1798 <nokia_lcd_init+0x148>
    177a:	89 e1       	ldi	r24, 0x19	; 25
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	9a 8f       	std	Y+26, r25	; 0x1a
    1780:	89 8f       	std	Y+25, r24	; 0x19
    1782:	89 8d       	ldd	r24, Y+25	; 0x19
    1784:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1786:	01 97       	sbiw	r24, 0x01	; 1
    1788:	f1 f7       	brne	.-4      	; 0x1786 <nokia_lcd_init+0x136>
    178a:	9a 8f       	std	Y+26, r25	; 0x1a
    178c:	89 8f       	std	Y+25, r24	; 0x19
    178e:	8f 89       	ldd	r24, Y+23	; 0x17
    1790:	98 8d       	ldd	r25, Y+24	; 0x18
    1792:	01 97       	sbiw	r24, 0x01	; 1
    1794:	98 8f       	std	Y+24, r25	; 0x18
    1796:	8f 8b       	std	Y+23, r24	; 0x17
    1798:	8f 89       	ldd	r24, Y+23	; 0x17
    179a:	98 8d       	ldd	r25, Y+24	; 0x18
    179c:	89 2b       	or	r24, r25
    179e:	69 f7       	brne	.-38     	; 0x177a <nokia_lcd_init+0x12a>
    17a0:	14 c0       	rjmp	.+40     	; 0x17ca <nokia_lcd_init+0x17a>
    17a2:	6b 89       	ldd	r22, Y+19	; 0x13
    17a4:	7c 89       	ldd	r23, Y+20	; 0x14
    17a6:	8d 89       	ldd	r24, Y+21	; 0x15
    17a8:	9e 89       	ldd	r25, Y+22	; 0x16
    17aa:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__fixunssfsi>
    17ae:	dc 01       	movw	r26, r24
    17b0:	cb 01       	movw	r24, r22
    17b2:	98 8f       	std	Y+24, r25	; 0x18
    17b4:	8f 8b       	std	Y+23, r24	; 0x17
    17b6:	8f 89       	ldd	r24, Y+23	; 0x17
    17b8:	98 8d       	ldd	r25, Y+24	; 0x18
    17ba:	9c 8f       	std	Y+28, r25	; 0x1c
    17bc:	8b 8f       	std	Y+27, r24	; 0x1b
    17be:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17c0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17c2:	01 97       	sbiw	r24, 0x01	; 1
    17c4:	f1 f7       	brne	.-4      	; 0x17c2 <nokia_lcd_init+0x172>
    17c6:	9c 8f       	std	Y+28, r25	; 0x1c
    17c8:	8b 8f       	std	Y+27, r24	; 0x1b
    17ca:	88 e2       	ldi	r24, 0x28	; 40
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	28 e2       	ldi	r18, 0x28	; 40
    17d0:	30 e0       	ldi	r19, 0x00	; 0
    17d2:	f9 01       	movw	r30, r18
    17d4:	20 81       	ld	r18, Z
    17d6:	27 7f       	andi	r18, 0xF7	; 247
    17d8:	fc 01       	movw	r30, r24
    17da:	20 83       	st	Z, r18
    17dc:	80 e0       	ldi	r24, 0x00	; 0
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	ac e8       	ldi	r26, 0x8C	; 140
    17e2:	b2 e4       	ldi	r27, 0x42	; 66
    17e4:	8d 83       	std	Y+5, r24	; 0x05
    17e6:	9e 83       	std	Y+6, r25	; 0x06
    17e8:	af 83       	std	Y+7, r26	; 0x07
    17ea:	b8 87       	std	Y+8, r27	; 0x08
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	4a e7       	ldi	r20, 0x7A	; 122
    17f2:	53 e4       	ldi	r21, 0x43	; 67
    17f4:	6d 81       	ldd	r22, Y+5	; 0x05
    17f6:	7e 81       	ldd	r23, Y+6	; 0x06
    17f8:	8f 81       	ldd	r24, Y+7	; 0x07
    17fa:	98 85       	ldd	r25, Y+8	; 0x08
    17fc:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
    1800:	dc 01       	movw	r26, r24
    1802:	cb 01       	movw	r24, r22
    1804:	89 87       	std	Y+9, r24	; 0x09
    1806:	9a 87       	std	Y+10, r25	; 0x0a
    1808:	ab 87       	std	Y+11, r26	; 0x0b
    180a:	bc 87       	std	Y+12, r27	; 0x0c
    180c:	20 e0       	ldi	r18, 0x00	; 0
    180e:	30 e0       	ldi	r19, 0x00	; 0
    1810:	40 e8       	ldi	r20, 0x80	; 128
    1812:	5f e3       	ldi	r21, 0x3F	; 63
    1814:	69 85       	ldd	r22, Y+9	; 0x09
    1816:	7a 85       	ldd	r23, Y+10	; 0x0a
    1818:	8b 85       	ldd	r24, Y+11	; 0x0b
    181a:	9c 85       	ldd	r25, Y+12	; 0x0c
    181c:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <__cmpsf2>
    1820:	88 23       	and	r24, r24
    1822:	2c f4       	brge	.+10     	; 0x182e <nokia_lcd_init+0x1de>
    1824:	81 e0       	ldi	r24, 0x01	; 1
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	9e 87       	std	Y+14, r25	; 0x0e
    182a:	8d 87       	std	Y+13, r24	; 0x0d
    182c:	3f c0       	rjmp	.+126    	; 0x18ac <nokia_lcd_init+0x25c>
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	3f ef       	ldi	r19, 0xFF	; 255
    1832:	4f e7       	ldi	r20, 0x7F	; 127
    1834:	57 e4       	ldi	r21, 0x47	; 71
    1836:	69 85       	ldd	r22, Y+9	; 0x09
    1838:	7a 85       	ldd	r23, Y+10	; 0x0a
    183a:	8b 85       	ldd	r24, Y+11	; 0x0b
    183c:	9c 85       	ldd	r25, Y+12	; 0x0c
    183e:	0e 94 f8 0f 	call	0x1ff0	; 0x1ff0 <__gesf2>
    1842:	18 16       	cp	r1, r24
    1844:	4c f5       	brge	.+82     	; 0x1898 <nokia_lcd_init+0x248>
    1846:	20 e0       	ldi	r18, 0x00	; 0
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	40 e2       	ldi	r20, 0x20	; 32
    184c:	51 e4       	ldi	r21, 0x41	; 65
    184e:	6d 81       	ldd	r22, Y+5	; 0x05
    1850:	7e 81       	ldd	r23, Y+6	; 0x06
    1852:	8f 81       	ldd	r24, Y+7	; 0x07
    1854:	98 85       	ldd	r25, Y+8	; 0x08
    1856:	0e 94 4d 10 	call	0x209a	; 0x209a <__mulsf3>
    185a:	dc 01       	movw	r26, r24
    185c:	cb 01       	movw	r24, r22
    185e:	bc 01       	movw	r22, r24
    1860:	cd 01       	movw	r24, r26
    1862:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__fixunssfsi>
    1866:	dc 01       	movw	r26, r24
    1868:	cb 01       	movw	r24, r22
    186a:	9e 87       	std	Y+14, r25	; 0x0e
    186c:	8d 87       	std	Y+13, r24	; 0x0d
    186e:	0f c0       	rjmp	.+30     	; 0x188e <nokia_lcd_init+0x23e>
    1870:	89 e1       	ldi	r24, 0x19	; 25
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	98 8b       	std	Y+16, r25	; 0x10
    1876:	8f 87       	std	Y+15, r24	; 0x0f
    1878:	8f 85       	ldd	r24, Y+15	; 0x0f
    187a:	98 89       	ldd	r25, Y+16	; 0x10
    187c:	01 97       	sbiw	r24, 0x01	; 1
    187e:	f1 f7       	brne	.-4      	; 0x187c <nokia_lcd_init+0x22c>
    1880:	98 8b       	std	Y+16, r25	; 0x10
    1882:	8f 87       	std	Y+15, r24	; 0x0f
    1884:	8d 85       	ldd	r24, Y+13	; 0x0d
    1886:	9e 85       	ldd	r25, Y+14	; 0x0e
    1888:	01 97       	sbiw	r24, 0x01	; 1
    188a:	9e 87       	std	Y+14, r25	; 0x0e
    188c:	8d 87       	std	Y+13, r24	; 0x0d
    188e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1890:	9e 85       	ldd	r25, Y+14	; 0x0e
    1892:	89 2b       	or	r24, r25
    1894:	69 f7       	brne	.-38     	; 0x1870 <nokia_lcd_init+0x220>
    1896:	14 c0       	rjmp	.+40     	; 0x18c0 <nokia_lcd_init+0x270>
    1898:	69 85       	ldd	r22, Y+9	; 0x09
    189a:	7a 85       	ldd	r23, Y+10	; 0x0a
    189c:	8b 85       	ldd	r24, Y+11	; 0x0b
    189e:	9c 85       	ldd	r25, Y+12	; 0x0c
    18a0:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__fixunssfsi>
    18a4:	dc 01       	movw	r26, r24
    18a6:	cb 01       	movw	r24, r22
    18a8:	9e 87       	std	Y+14, r25	; 0x0e
    18aa:	8d 87       	std	Y+13, r24	; 0x0d
    18ac:	8d 85       	ldd	r24, Y+13	; 0x0d
    18ae:	9e 85       	ldd	r25, Y+14	; 0x0e
    18b0:	9a 8b       	std	Y+18, r25	; 0x12
    18b2:	89 8b       	std	Y+17, r24	; 0x11
    18b4:	89 89       	ldd	r24, Y+17	; 0x11
    18b6:	9a 89       	ldd	r25, Y+18	; 0x12
    18b8:	01 97       	sbiw	r24, 0x01	; 1
    18ba:	f1 f7       	brne	.-4      	; 0x18b8 <nokia_lcd_init+0x268>
    18bc:	9a 8b       	std	Y+18, r25	; 0x12
    18be:	89 8b       	std	Y+17, r24	; 0x11
    18c0:	88 e2       	ldi	r24, 0x28	; 40
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	28 e2       	ldi	r18, 0x28	; 40
    18c6:	30 e0       	ldi	r19, 0x00	; 0
    18c8:	f9 01       	movw	r30, r18
    18ca:	20 81       	ld	r18, Z
    18cc:	28 60       	ori	r18, 0x08	; 8
    18ce:	fc 01       	movw	r30, r24
    18d0:	20 83       	st	Z, r18
    18d2:	88 e2       	ldi	r24, 0x28	; 40
    18d4:	90 e0       	ldi	r25, 0x00	; 0
    18d6:	28 e2       	ldi	r18, 0x28	; 40
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	f9 01       	movw	r30, r18
    18dc:	20 81       	ld	r18, Z
    18de:	2b 7f       	andi	r18, 0xFB	; 251
    18e0:	fc 01       	movw	r30, r24
    18e2:	20 83       	st	Z, r18
    18e4:	81 e2       	ldi	r24, 0x21	; 33
    18e6:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    18ea:	83 e1       	ldi	r24, 0x13	; 19
    18ec:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    18f0:	86 e0       	ldi	r24, 0x06	; 6
    18f2:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    18f6:	82 ec       	ldi	r24, 0xC2	; 194
    18f8:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    18fc:	80 e2       	ldi	r24, 0x20	; 32
    18fe:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    1902:	89 e0       	ldi	r24, 0x09	; 9
    1904:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    1908:	80 e8       	ldi	r24, 0x80	; 128
    190a:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    190e:	80 e4       	ldi	r24, 0x40	; 64
    1910:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    1914:	00 e0       	ldi	r16, 0x00	; 0
    1916:	10 e0       	ldi	r17, 0x00	; 0
    1918:	05 c0       	rjmp	.+10     	; 0x1924 <nokia_lcd_init+0x2d4>
    191a:	80 e0       	ldi	r24, 0x00	; 0
    191c:	0e 94 19 0b 	call	0x1632	; 0x1632 <write_data>
    1920:	0f 5f       	subi	r16, 0xFF	; 255
    1922:	1f 4f       	sbci	r17, 0xFF	; 255
    1924:	08 3f       	cpi	r16, 0xF8	; 248
    1926:	f1 e0       	ldi	r31, 0x01	; 1
    1928:	1f 07       	cpc	r17, r31
    192a:	b8 f3       	brcs	.-18     	; 0x191a <nokia_lcd_init+0x2ca>
    192c:	88 e0       	ldi	r24, 0x08	; 8
    192e:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    1932:	8c e0       	ldi	r24, 0x0C	; 12
    1934:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    1938:	00 00       	nop
    193a:	6c 96       	adiw	r28, 0x1c	; 28
    193c:	0f b6       	in	r0, 0x3f	; 63
    193e:	f8 94       	cli
    1940:	de bf       	out	0x3e, r29	; 62
    1942:	0f be       	out	0x3f, r0	; 63
    1944:	cd bf       	out	0x3d, r28	; 61
    1946:	df 91       	pop	r29
    1948:	cf 91       	pop	r28
    194a:	1f 91       	pop	r17
    194c:	0f 91       	pop	r16
    194e:	08 95       	ret

00001950 <nokia_lcd_clear>:
    1950:	0f 93       	push	r16
    1952:	1f 93       	push	r17
    1954:	cf 93       	push	r28
    1956:	df 93       	push	r29
    1958:	cd b7       	in	r28, 0x3d	; 61
    195a:	de b7       	in	r29, 0x3e	; 62
    195c:	80 e8       	ldi	r24, 0x80	; 128
    195e:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    1962:	80 e4       	ldi	r24, 0x40	; 64
    1964:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
    1968:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <nokia_lcd+0x1f8>
    196c:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <nokia_lcd+0x1f9>
    1970:	00 e0       	ldi	r16, 0x00	; 0
    1972:	10 e0       	ldi	r17, 0x00	; 0
    1974:	07 c0       	rjmp	.+14     	; 0x1984 <nokia_lcd_clear+0x34>
    1976:	c8 01       	movw	r24, r16
    1978:	85 5a       	subi	r24, 0xA5	; 165
    197a:	9e 4f       	sbci	r25, 0xFE	; 254
    197c:	fc 01       	movw	r30, r24
    197e:	10 82       	st	Z, r1
    1980:	0f 5f       	subi	r16, 0xFF	; 255
    1982:	1f 4f       	sbci	r17, 0xFF	; 255
    1984:	08 3f       	cpi	r16, 0xF8	; 248
    1986:	f1 e0       	ldi	r31, 0x01	; 1
    1988:	1f 07       	cpc	r17, r31
    198a:	a8 f3       	brcs	.-22     	; 0x1976 <nokia_lcd_clear+0x26>
    198c:	00 00       	nop
    198e:	df 91       	pop	r29
    1990:	cf 91       	pop	r28
    1992:	1f 91       	pop	r17
    1994:	0f 91       	pop	r16
    1996:	08 95       	ret

00001998 <nokia_lcd_set_pixel>:

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
    1998:	cf 93       	push	r28
    199a:	df 93       	push	r29
    199c:	00 d0       	rcall	.+0      	; 0x199e <nokia_lcd_set_pixel+0x6>
    199e:	00 d0       	rcall	.+0      	; 0x19a0 <nokia_lcd_set_pixel+0x8>
    19a0:	1f 92       	push	r1
    19a2:	cd b7       	in	r28, 0x3d	; 61
    19a4:	de b7       	in	r29, 0x3e	; 62
    19a6:	8b 83       	std	Y+3, r24	; 0x03
    19a8:	6c 83       	std	Y+4, r22	; 0x04
    19aa:	4d 83       	std	Y+5, r20	; 0x05
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
    19ac:	8c 81       	ldd	r24, Y+4	; 0x04
    19ae:	86 95       	lsr	r24
    19b0:	86 95       	lsr	r24
    19b2:	86 95       	lsr	r24
    19b4:	88 2f       	mov	r24, r24
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	44 e5       	ldi	r20, 0x54	; 84
    19ba:	48 9f       	mul	r20, r24
    19bc:	90 01       	movw	r18, r0
    19be:	49 9f       	mul	r20, r25
    19c0:	30 0d       	add	r19, r0
    19c2:	11 24       	eor	r1, r1
    19c4:	8b 81       	ldd	r24, Y+3	; 0x03
    19c6:	88 2f       	mov	r24, r24
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	82 0f       	add	r24, r18
    19cc:	93 1f       	adc	r25, r19
    19ce:	85 5a       	subi	r24, 0xA5	; 165
    19d0:	9e 4f       	sbci	r25, 0xFE	; 254
    19d2:	9a 83       	std	Y+2, r25	; 0x02
    19d4:	89 83       	std	Y+1, r24	; 0x01
	if (value)
    19d6:	8d 81       	ldd	r24, Y+5	; 0x05
    19d8:	88 23       	and	r24, r24
    19da:	c9 f0       	breq	.+50     	; 0x1a0e <nokia_lcd_set_pixel+0x76>
		*byte |= (1 << (y % 8));
    19dc:	89 81       	ldd	r24, Y+1	; 0x01
    19de:	9a 81       	ldd	r25, Y+2	; 0x02
    19e0:	fc 01       	movw	r30, r24
    19e2:	80 81       	ld	r24, Z
    19e4:	48 2f       	mov	r20, r24
    19e6:	8c 81       	ldd	r24, Y+4	; 0x04
    19e8:	88 2f       	mov	r24, r24
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	9c 01       	movw	r18, r24
    19ee:	27 70       	andi	r18, 0x07	; 7
    19f0:	33 27       	eor	r19, r19
    19f2:	81 e0       	ldi	r24, 0x01	; 1
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	02 c0       	rjmp	.+4      	; 0x19fc <nokia_lcd_set_pixel+0x64>
    19f8:	88 0f       	add	r24, r24
    19fa:	99 1f       	adc	r25, r25
    19fc:	2a 95       	dec	r18
    19fe:	e2 f7       	brpl	.-8      	; 0x19f8 <nokia_lcd_set_pixel+0x60>
    1a00:	84 2b       	or	r24, r20
    1a02:	28 2f       	mov	r18, r24
    1a04:	89 81       	ldd	r24, Y+1	; 0x01
    1a06:	9a 81       	ldd	r25, Y+2	; 0x02
    1a08:	fc 01       	movw	r30, r24
    1a0a:	20 83       	st	Z, r18
	else
		*byte &= ~(1 << (y %8 ));
}
    1a0c:	19 c0       	rjmp	.+50     	; 0x1a40 <nokia_lcd_set_pixel+0xa8>
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
	if (value)
		*byte |= (1 << (y % 8));
	else
		*byte &= ~(1 << (y %8 ));
    1a0e:	89 81       	ldd	r24, Y+1	; 0x01
    1a10:	9a 81       	ldd	r25, Y+2	; 0x02
    1a12:	fc 01       	movw	r30, r24
    1a14:	80 81       	ld	r24, Z
    1a16:	48 2f       	mov	r20, r24
    1a18:	8c 81       	ldd	r24, Y+4	; 0x04
    1a1a:	88 2f       	mov	r24, r24
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	9c 01       	movw	r18, r24
    1a20:	27 70       	andi	r18, 0x07	; 7
    1a22:	33 27       	eor	r19, r19
    1a24:	81 e0       	ldi	r24, 0x01	; 1
    1a26:	90 e0       	ldi	r25, 0x00	; 0
    1a28:	02 c0       	rjmp	.+4      	; 0x1a2e <nokia_lcd_set_pixel+0x96>
    1a2a:	88 0f       	add	r24, r24
    1a2c:	99 1f       	adc	r25, r25
    1a2e:	2a 95       	dec	r18
    1a30:	e2 f7       	brpl	.-8      	; 0x1a2a <nokia_lcd_set_pixel+0x92>
    1a32:	80 95       	com	r24
    1a34:	84 23       	and	r24, r20
    1a36:	28 2f       	mov	r18, r24
    1a38:	89 81       	ldd	r24, Y+1	; 0x01
    1a3a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	20 83       	st	Z, r18
}
    1a40:	00 00       	nop
    1a42:	0f 90       	pop	r0
    1a44:	0f 90       	pop	r0
    1a46:	0f 90       	pop	r0
    1a48:	0f 90       	pop	r0
    1a4a:	0f 90       	pop	r0
    1a4c:	df 91       	pop	r29
    1a4e:	cf 91       	pop	r28
    1a50:	08 95       	ret

00001a52 <nokia_lcd_write_char>:

void nokia_lcd_write_char(char code, uint8_t scale)
{
    1a52:	0f 93       	push	r16
    1a54:	1f 93       	push	r17
    1a56:	cf 93       	push	r28
    1a58:	df 93       	push	r29
    1a5a:	00 d0       	rcall	.+0      	; 0x1a5c <nokia_lcd_write_char+0xa>
    1a5c:	00 d0       	rcall	.+0      	; 0x1a5e <nokia_lcd_write_char+0xc>
    1a5e:	1f 92       	push	r1
    1a60:	cd b7       	in	r28, 0x3d	; 61
    1a62:	de b7       	in	r29, 0x3e	; 62
    1a64:	8c 83       	std	Y+4, r24	; 0x04
    1a66:	6d 83       	std	Y+5, r22	; 0x05
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1a68:	10 e0       	ldi	r17, 0x00	; 0
    1a6a:	65 c0       	rjmp	.+202    	; 0x1b36 <nokia_lcd_write_char+0xe4>
		for (y = 0; y < 7*scale; y++)
    1a6c:	00 e0       	ldi	r16, 0x00	; 0
    1a6e:	4e c0       	rjmp	.+156    	; 0x1b0c <nokia_lcd_write_char+0xba>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    1a70:	8c 81       	ldd	r24, Y+4	; 0x04
    1a72:	88 2f       	mov	r24, r24
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	9c 01       	movw	r18, r24
    1a78:	20 52       	subi	r18, 0x20	; 32
    1a7a:	31 09       	sbc	r19, r1
    1a7c:	9d 81       	ldd	r25, Y+5	; 0x05
    1a7e:	81 2f       	mov	r24, r17
    1a80:	69 2f       	mov	r22, r25
    1a82:	0e 94 ef 10 	call	0x21de	; 0x21de <__udivmodqi4>
    1a86:	48 2f       	mov	r20, r24
    1a88:	50 e0       	ldi	r21, 0x00	; 0
    1a8a:	c9 01       	movw	r24, r18
    1a8c:	88 0f       	add	r24, r24
    1a8e:	99 1f       	adc	r25, r25
    1a90:	88 0f       	add	r24, r24
    1a92:	99 1f       	adc	r25, r25
    1a94:	82 0f       	add	r24, r18
    1a96:	93 1f       	adc	r25, r19
    1a98:	84 0f       	add	r24, r20
    1a9a:	95 1f       	adc	r25, r21
    1a9c:	8e 53       	subi	r24, 0x3E	; 62
    1a9e:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa0:	9a 83       	std	Y+2, r25	; 0x02
    1aa2:	89 83       	std	Y+1, r24	; 0x01
    1aa4:	89 81       	ldd	r24, Y+1	; 0x01
    1aa6:	9a 81       	ldd	r25, Y+2	; 0x02
    1aa8:	fc 01       	movw	r30, r24
    1aaa:	84 91       	lpm	r24, Z
    1aac:	8b 83       	std	Y+3, r24	; 0x03
    1aae:	8b 81       	ldd	r24, Y+3	; 0x03
    1ab0:	28 2f       	mov	r18, r24
    1ab2:	30 e0       	ldi	r19, 0x00	; 0
    1ab4:	9d 81       	ldd	r25, Y+5	; 0x05
    1ab6:	80 2f       	mov	r24, r16
    1ab8:	69 2f       	mov	r22, r25
    1aba:	0e 94 ef 10 	call	0x21de	; 0x21de <__udivmodqi4>
    1abe:	88 2f       	mov	r24, r24
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	a9 01       	movw	r20, r18
    1ac4:	02 c0       	rjmp	.+4      	; 0x1aca <nokia_lcd_write_char+0x78>
    1ac6:	55 95       	asr	r21
    1ac8:	47 95       	ror	r20
    1aca:	8a 95       	dec	r24
    1acc:	e2 f7       	brpl	.-8      	; 0x1ac6 <nokia_lcd_write_char+0x74>
    1ace:	ca 01       	movw	r24, r20
    1ad0:	81 70       	andi	r24, 0x01	; 1
    1ad2:	99 27       	eor	r25, r25
    1ad4:	89 2b       	or	r24, r25
    1ad6:	61 f0       	breq	.+24     	; 0x1af0 <nokia_lcd_write_char+0x9e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
    1ad8:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <nokia_lcd+0x1f9>
    1adc:	98 2f       	mov	r25, r24
    1ade:	90 0f       	add	r25, r16
    1ae0:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <nokia_lcd+0x1f8>
    1ae4:	81 0f       	add	r24, r17
    1ae6:	41 e0       	ldi	r20, 0x01	; 1
    1ae8:	69 2f       	mov	r22, r25
    1aea:	0e 94 cc 0c 	call	0x1998	; 0x1998 <nokia_lcd_set_pixel>
    1aee:	0b c0       	rjmp	.+22     	; 0x1b06 <nokia_lcd_write_char+0xb4>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    1af0:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <nokia_lcd+0x1f9>
    1af4:	98 2f       	mov	r25, r24
    1af6:	90 0f       	add	r25, r16
    1af8:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <nokia_lcd+0x1f8>
    1afc:	81 0f       	add	r24, r17
    1afe:	40 e0       	ldi	r20, 0x00	; 0
    1b00:	69 2f       	mov	r22, r25
    1b02:	0e 94 cc 0c 	call	0x1998	; 0x1998 <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
    1b06:	80 2f       	mov	r24, r16
    1b08:	01 e0       	ldi	r16, 0x01	; 1
    1b0a:	08 0f       	add	r16, r24
    1b0c:	40 2f       	mov	r20, r16
    1b0e:	50 e0       	ldi	r21, 0x00	; 0
    1b10:	8d 81       	ldd	r24, Y+5	; 0x05
    1b12:	28 2f       	mov	r18, r24
    1b14:	30 e0       	ldi	r19, 0x00	; 0
    1b16:	c9 01       	movw	r24, r18
    1b18:	88 0f       	add	r24, r24
    1b1a:	99 1f       	adc	r25, r25
    1b1c:	88 0f       	add	r24, r24
    1b1e:	99 1f       	adc	r25, r25
    1b20:	88 0f       	add	r24, r24
    1b22:	99 1f       	adc	r25, r25
    1b24:	82 1b       	sub	r24, r18
    1b26:	93 0b       	sbc	r25, r19
    1b28:	48 17       	cp	r20, r24
    1b2a:	59 07       	cpc	r21, r25
    1b2c:	0c f4       	brge	.+2      	; 0x1b30 <nokia_lcd_write_char+0xde>
    1b2e:	a0 cf       	rjmp	.-192    	; 0x1a70 <nokia_lcd_write_char+0x1e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1b30:	81 2f       	mov	r24, r17
    1b32:	11 e0       	ldi	r17, 0x01	; 1
    1b34:	18 0f       	add	r17, r24
    1b36:	41 2f       	mov	r20, r17
    1b38:	50 e0       	ldi	r21, 0x00	; 0
    1b3a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b3c:	28 2f       	mov	r18, r24
    1b3e:	30 e0       	ldi	r19, 0x00	; 0
    1b40:	c9 01       	movw	r24, r18
    1b42:	88 0f       	add	r24, r24
    1b44:	99 1f       	adc	r25, r25
    1b46:	88 0f       	add	r24, r24
    1b48:	99 1f       	adc	r25, r25
    1b4a:	82 0f       	add	r24, r18
    1b4c:	93 1f       	adc	r25, r19
    1b4e:	48 17       	cp	r20, r24
    1b50:	59 07       	cpc	r21, r25
    1b52:	0c f4       	brge	.+2      	; 0x1b56 <nokia_lcd_write_char+0x104>
    1b54:	8b cf       	rjmp	.-234    	; 0x1a6c <nokia_lcd_write_char+0x1a>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    1b56:	20 91 53 03 	lds	r18, 0x0353	; 0x800353 <nokia_lcd+0x1f8>
    1b5a:	9d 81       	ldd	r25, Y+5	; 0x05
    1b5c:	89 2f       	mov	r24, r25
    1b5e:	88 0f       	add	r24, r24
    1b60:	88 0f       	add	r24, r24
    1b62:	89 0f       	add	r24, r25
    1b64:	82 0f       	add	r24, r18
    1b66:	8f 5f       	subi	r24, 0xFF	; 255
    1b68:	80 93 53 03 	sts	0x0353, r24	; 0x800353 <nokia_lcd+0x1f8>
	if (nokia_lcd.cursor_x >= 84) {
    1b6c:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <nokia_lcd+0x1f8>
    1b70:	84 35       	cpi	r24, 0x54	; 84
    1b72:	70 f0       	brcs	.+28     	; 0x1b90 <nokia_lcd_write_char+0x13e>
		nokia_lcd.cursor_x = 0;
    1b74:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
    1b78:	20 91 54 03 	lds	r18, 0x0354	; 0x800354 <nokia_lcd+0x1f9>
    1b7c:	9d 81       	ldd	r25, Y+5	; 0x05
    1b7e:	89 2f       	mov	r24, r25
    1b80:	88 0f       	add	r24, r24
    1b82:	88 0f       	add	r24, r24
    1b84:	88 0f       	add	r24, r24
    1b86:	89 1b       	sub	r24, r25
    1b88:	82 0f       	add	r24, r18
    1b8a:	8f 5f       	subi	r24, 0xFF	; 255
    1b8c:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <nokia_lcd+0x1f9>
	}
	if (nokia_lcd.cursor_y >= 48) {
    1b90:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <nokia_lcd+0x1f9>
    1b94:	80 33       	cpi	r24, 0x30	; 48
    1b96:	20 f0       	brcs	.+8      	; 0x1ba0 <nokia_lcd_write_char+0x14e>
		nokia_lcd.cursor_x = 0;
    1b98:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
    1b9c:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <nokia_lcd+0x1f9>
	}
}
    1ba0:	00 00       	nop
    1ba2:	0f 90       	pop	r0
    1ba4:	0f 90       	pop	r0
    1ba6:	0f 90       	pop	r0
    1ba8:	0f 90       	pop	r0
    1baa:	0f 90       	pop	r0
    1bac:	df 91       	pop	r29
    1bae:	cf 91       	pop	r28
    1bb0:	1f 91       	pop	r17
    1bb2:	0f 91       	pop	r16
    1bb4:	08 95       	ret

00001bb6 <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
    1bb6:	cf 93       	push	r28
    1bb8:	df 93       	push	r29
    1bba:	00 d0       	rcall	.+0      	; 0x1bbc <nokia_lcd_write_string+0x6>
    1bbc:	1f 92       	push	r1
    1bbe:	cd b7       	in	r28, 0x3d	; 61
    1bc0:	de b7       	in	r29, 0x3e	; 62
    1bc2:	9a 83       	std	Y+2, r25	; 0x02
    1bc4:	89 83       	std	Y+1, r24	; 0x01
    1bc6:	6b 83       	std	Y+3, r22	; 0x03
	while(*str)
    1bc8:	0c c0       	rjmp	.+24     	; 0x1be2 <nokia_lcd_write_string+0x2c>
		nokia_lcd_write_char(*str++, scale);
    1bca:	89 81       	ldd	r24, Y+1	; 0x01
    1bcc:	9a 81       	ldd	r25, Y+2	; 0x02
    1bce:	9c 01       	movw	r18, r24
    1bd0:	2f 5f       	subi	r18, 0xFF	; 255
    1bd2:	3f 4f       	sbci	r19, 0xFF	; 255
    1bd4:	3a 83       	std	Y+2, r19	; 0x02
    1bd6:	29 83       	std	Y+1, r18	; 0x01
    1bd8:	fc 01       	movw	r30, r24
    1bda:	80 81       	ld	r24, Z
    1bdc:	6b 81       	ldd	r22, Y+3	; 0x03
    1bde:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
    1be2:	89 81       	ldd	r24, Y+1	; 0x01
    1be4:	9a 81       	ldd	r25, Y+2	; 0x02
    1be6:	fc 01       	movw	r30, r24
    1be8:	80 81       	ld	r24, Z
    1bea:	88 23       	and	r24, r24
    1bec:	71 f7       	brne	.-36     	; 0x1bca <nokia_lcd_write_string+0x14>
		nokia_lcd_write_char(*str++, scale);
}
    1bee:	00 00       	nop
    1bf0:	0f 90       	pop	r0
    1bf2:	0f 90       	pop	r0
    1bf4:	0f 90       	pop	r0
    1bf6:	df 91       	pop	r29
    1bf8:	cf 91       	pop	r28
    1bfa:	08 95       	ret

00001bfc <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    1bfc:	cf 93       	push	r28
    1bfe:	df 93       	push	r29
    1c00:	00 d0       	rcall	.+0      	; 0x1c02 <nokia_lcd_set_cursor+0x6>
    1c02:	cd b7       	in	r28, 0x3d	; 61
    1c04:	de b7       	in	r29, 0x3e	; 62
    1c06:	89 83       	std	Y+1, r24	; 0x01
    1c08:	6a 83       	std	Y+2, r22	; 0x02
	nokia_lcd.cursor_x = x;
    1c0a:	89 81       	ldd	r24, Y+1	; 0x01
    1c0c:	80 93 53 03 	sts	0x0353, r24	; 0x800353 <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
    1c10:	8a 81       	ldd	r24, Y+2	; 0x02
    1c12:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <nokia_lcd+0x1f9>
}
    1c16:	00 00       	nop
    1c18:	0f 90       	pop	r0
    1c1a:	0f 90       	pop	r0
    1c1c:	df 91       	pop	r29
    1c1e:	cf 91       	pop	r28
    1c20:	08 95       	ret

00001c22 <nokia_lcd_render>:

void nokia_lcd_render(void)
{
    1c22:	0f 93       	push	r16
    1c24:	1f 93       	push	r17
    1c26:	cf 93       	push	r28
    1c28:	df 93       	push	r29
    1c2a:	cd b7       	in	r28, 0x3d	; 61
    1c2c:	de b7       	in	r29, 0x3e	; 62
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
    1c2e:	80 e8       	ldi	r24, 0x80	; 128
    1c30:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>
	write_cmd(0x40);
    1c34:	80 e4       	ldi	r24, 0x40	; 64
    1c36:	0e 94 0a 0b 	call	0x1614	; 0x1614 <write_cmd>

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    1c3a:	00 e0       	ldi	r16, 0x00	; 0
    1c3c:	10 e0       	ldi	r17, 0x00	; 0
    1c3e:	09 c0       	rjmp	.+18     	; 0x1c52 <nokia_lcd_render+0x30>
		write_data(nokia_lcd.screen[i]);
    1c40:	c8 01       	movw	r24, r16
    1c42:	85 5a       	subi	r24, 0xA5	; 165
    1c44:	9e 4f       	sbci	r25, 0xFE	; 254
    1c46:	fc 01       	movw	r30, r24
    1c48:	80 81       	ld	r24, Z
    1c4a:	0e 94 19 0b 	call	0x1632	; 0x1632 <write_data>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    1c4e:	0f 5f       	subi	r16, 0xFF	; 255
    1c50:	1f 4f       	sbci	r17, 0xFF	; 255
    1c52:	08 3f       	cpi	r16, 0xF8	; 248
    1c54:	f1 e0       	ldi	r31, 0x01	; 1
    1c56:	1f 07       	cpc	r17, r31
    1c58:	98 f3       	brcs	.-26     	; 0x1c40 <nokia_lcd_render+0x1e>
		write_data(nokia_lcd.screen[i]);
}
    1c5a:	00 00       	nop
    1c5c:	df 91       	pop	r29
    1c5e:	cf 91       	pop	r28
    1c60:	1f 91       	pop	r17
    1c62:	0f 91       	pop	r16
    1c64:	08 95       	ret

00001c66 <__subsf3>:
    1c66:	50 58       	subi	r21, 0x80	; 128

00001c68 <__addsf3>:
    1c68:	bb 27       	eor	r27, r27
    1c6a:	aa 27       	eor	r26, r26
    1c6c:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__addsf3x>
    1c70:	0c 94 be 0f 	jmp	0x1f7c	; 0x1f7c <__fp_round>
    1c74:	0e 94 b0 0f 	call	0x1f60	; 0x1f60 <__fp_pscA>
    1c78:	38 f0       	brcs	.+14     	; 0x1c88 <__addsf3+0x20>
    1c7a:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <__fp_pscB>
    1c7e:	20 f0       	brcs	.+8      	; 0x1c88 <__addsf3+0x20>
    1c80:	39 f4       	brne	.+14     	; 0x1c90 <__addsf3+0x28>
    1c82:	9f 3f       	cpi	r25, 0xFF	; 255
    1c84:	19 f4       	brne	.+6      	; 0x1c8c <__addsf3+0x24>
    1c86:	26 f4       	brtc	.+8      	; 0x1c90 <__addsf3+0x28>
    1c88:	0c 94 ad 0f 	jmp	0x1f5a	; 0x1f5a <__fp_nan>
    1c8c:	0e f4       	brtc	.+2      	; 0x1c90 <__addsf3+0x28>
    1c8e:	e0 95       	com	r30
    1c90:	e7 fb       	bst	r30, 7
    1c92:	0c 94 a7 0f 	jmp	0x1f4e	; 0x1f4e <__fp_inf>

00001c96 <__addsf3x>:
    1c96:	e9 2f       	mov	r30, r25
    1c98:	0e 94 cf 0f 	call	0x1f9e	; 0x1f9e <__fp_split3>
    1c9c:	58 f3       	brcs	.-42     	; 0x1c74 <__addsf3+0xc>
    1c9e:	ba 17       	cp	r27, r26
    1ca0:	62 07       	cpc	r22, r18
    1ca2:	73 07       	cpc	r23, r19
    1ca4:	84 07       	cpc	r24, r20
    1ca6:	95 07       	cpc	r25, r21
    1ca8:	20 f0       	brcs	.+8      	; 0x1cb2 <__addsf3x+0x1c>
    1caa:	79 f4       	brne	.+30     	; 0x1cca <__addsf3x+0x34>
    1cac:	a6 f5       	brtc	.+104    	; 0x1d16 <__addsf3x+0x80>
    1cae:	0c 94 f1 0f 	jmp	0x1fe2	; 0x1fe2 <__fp_zero>
    1cb2:	0e f4       	brtc	.+2      	; 0x1cb6 <__addsf3x+0x20>
    1cb4:	e0 95       	com	r30
    1cb6:	0b 2e       	mov	r0, r27
    1cb8:	ba 2f       	mov	r27, r26
    1cba:	a0 2d       	mov	r26, r0
    1cbc:	0b 01       	movw	r0, r22
    1cbe:	b9 01       	movw	r22, r18
    1cc0:	90 01       	movw	r18, r0
    1cc2:	0c 01       	movw	r0, r24
    1cc4:	ca 01       	movw	r24, r20
    1cc6:	a0 01       	movw	r20, r0
    1cc8:	11 24       	eor	r1, r1
    1cca:	ff 27       	eor	r31, r31
    1ccc:	59 1b       	sub	r21, r25
    1cce:	99 f0       	breq	.+38     	; 0x1cf6 <__addsf3x+0x60>
    1cd0:	59 3f       	cpi	r21, 0xF9	; 249
    1cd2:	50 f4       	brcc	.+20     	; 0x1ce8 <__addsf3x+0x52>
    1cd4:	50 3e       	cpi	r21, 0xE0	; 224
    1cd6:	68 f1       	brcs	.+90     	; 0x1d32 <__addsf3x+0x9c>
    1cd8:	1a 16       	cp	r1, r26
    1cda:	f0 40       	sbci	r31, 0x00	; 0
    1cdc:	a2 2f       	mov	r26, r18
    1cde:	23 2f       	mov	r18, r19
    1ce0:	34 2f       	mov	r19, r20
    1ce2:	44 27       	eor	r20, r20
    1ce4:	58 5f       	subi	r21, 0xF8	; 248
    1ce6:	f3 cf       	rjmp	.-26     	; 0x1cce <__addsf3x+0x38>
    1ce8:	46 95       	lsr	r20
    1cea:	37 95       	ror	r19
    1cec:	27 95       	ror	r18
    1cee:	a7 95       	ror	r26
    1cf0:	f0 40       	sbci	r31, 0x00	; 0
    1cf2:	53 95       	inc	r21
    1cf4:	c9 f7       	brne	.-14     	; 0x1ce8 <__addsf3x+0x52>
    1cf6:	7e f4       	brtc	.+30     	; 0x1d16 <__addsf3x+0x80>
    1cf8:	1f 16       	cp	r1, r31
    1cfa:	ba 0b       	sbc	r27, r26
    1cfc:	62 0b       	sbc	r22, r18
    1cfe:	73 0b       	sbc	r23, r19
    1d00:	84 0b       	sbc	r24, r20
    1d02:	ba f0       	brmi	.+46     	; 0x1d32 <__addsf3x+0x9c>
    1d04:	91 50       	subi	r25, 0x01	; 1
    1d06:	a1 f0       	breq	.+40     	; 0x1d30 <__addsf3x+0x9a>
    1d08:	ff 0f       	add	r31, r31
    1d0a:	bb 1f       	adc	r27, r27
    1d0c:	66 1f       	adc	r22, r22
    1d0e:	77 1f       	adc	r23, r23
    1d10:	88 1f       	adc	r24, r24
    1d12:	c2 f7       	brpl	.-16     	; 0x1d04 <__addsf3x+0x6e>
    1d14:	0e c0       	rjmp	.+28     	; 0x1d32 <__addsf3x+0x9c>
    1d16:	ba 0f       	add	r27, r26
    1d18:	62 1f       	adc	r22, r18
    1d1a:	73 1f       	adc	r23, r19
    1d1c:	84 1f       	adc	r24, r20
    1d1e:	48 f4       	brcc	.+18     	; 0x1d32 <__addsf3x+0x9c>
    1d20:	87 95       	ror	r24
    1d22:	77 95       	ror	r23
    1d24:	67 95       	ror	r22
    1d26:	b7 95       	ror	r27
    1d28:	f7 95       	ror	r31
    1d2a:	9e 3f       	cpi	r25, 0xFE	; 254
    1d2c:	08 f0       	brcs	.+2      	; 0x1d30 <__addsf3x+0x9a>
    1d2e:	b0 cf       	rjmp	.-160    	; 0x1c90 <__addsf3+0x28>
    1d30:	93 95       	inc	r25
    1d32:	88 0f       	add	r24, r24
    1d34:	08 f0       	brcs	.+2      	; 0x1d38 <__addsf3x+0xa2>
    1d36:	99 27       	eor	r25, r25
    1d38:	ee 0f       	add	r30, r30
    1d3a:	97 95       	ror	r25
    1d3c:	87 95       	ror	r24
    1d3e:	08 95       	ret

00001d40 <__cmpsf2>:
    1d40:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__fp_cmp>
    1d44:	08 f4       	brcc	.+2      	; 0x1d48 <__cmpsf2+0x8>
    1d46:	81 e0       	ldi	r24, 0x01	; 1
    1d48:	08 95       	ret

00001d4a <__divsf3>:
    1d4a:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <__divsf3x>
    1d4e:	0c 94 be 0f 	jmp	0x1f7c	; 0x1f7c <__fp_round>
    1d52:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <__fp_pscB>
    1d56:	58 f0       	brcs	.+22     	; 0x1d6e <__divsf3+0x24>
    1d58:	0e 94 b0 0f 	call	0x1f60	; 0x1f60 <__fp_pscA>
    1d5c:	40 f0       	brcs	.+16     	; 0x1d6e <__divsf3+0x24>
    1d5e:	29 f4       	brne	.+10     	; 0x1d6a <__divsf3+0x20>
    1d60:	5f 3f       	cpi	r21, 0xFF	; 255
    1d62:	29 f0       	breq	.+10     	; 0x1d6e <__divsf3+0x24>
    1d64:	0c 94 a7 0f 	jmp	0x1f4e	; 0x1f4e <__fp_inf>
    1d68:	51 11       	cpse	r21, r1
    1d6a:	0c 94 f2 0f 	jmp	0x1fe4	; 0x1fe4 <__fp_szero>
    1d6e:	0c 94 ad 0f 	jmp	0x1f5a	; 0x1f5a <__fp_nan>

00001d72 <__divsf3x>:
    1d72:	0e 94 cf 0f 	call	0x1f9e	; 0x1f9e <__fp_split3>
    1d76:	68 f3       	brcs	.-38     	; 0x1d52 <__divsf3+0x8>

00001d78 <__divsf3_pse>:
    1d78:	99 23       	and	r25, r25
    1d7a:	b1 f3       	breq	.-20     	; 0x1d68 <__divsf3+0x1e>
    1d7c:	55 23       	and	r21, r21
    1d7e:	91 f3       	breq	.-28     	; 0x1d64 <__divsf3+0x1a>
    1d80:	95 1b       	sub	r25, r21
    1d82:	55 0b       	sbc	r21, r21
    1d84:	bb 27       	eor	r27, r27
    1d86:	aa 27       	eor	r26, r26
    1d88:	62 17       	cp	r22, r18
    1d8a:	73 07       	cpc	r23, r19
    1d8c:	84 07       	cpc	r24, r20
    1d8e:	38 f0       	brcs	.+14     	; 0x1d9e <__divsf3_pse+0x26>
    1d90:	9f 5f       	subi	r25, 0xFF	; 255
    1d92:	5f 4f       	sbci	r21, 0xFF	; 255
    1d94:	22 0f       	add	r18, r18
    1d96:	33 1f       	adc	r19, r19
    1d98:	44 1f       	adc	r20, r20
    1d9a:	aa 1f       	adc	r26, r26
    1d9c:	a9 f3       	breq	.-22     	; 0x1d88 <__divsf3_pse+0x10>
    1d9e:	35 d0       	rcall	.+106    	; 0x1e0a <__divsf3_pse+0x92>
    1da0:	0e 2e       	mov	r0, r30
    1da2:	3a f0       	brmi	.+14     	; 0x1db2 <__divsf3_pse+0x3a>
    1da4:	e0 e8       	ldi	r30, 0x80	; 128
    1da6:	32 d0       	rcall	.+100    	; 0x1e0c <__divsf3_pse+0x94>
    1da8:	91 50       	subi	r25, 0x01	; 1
    1daa:	50 40       	sbci	r21, 0x00	; 0
    1dac:	e6 95       	lsr	r30
    1dae:	00 1c       	adc	r0, r0
    1db0:	ca f7       	brpl	.-14     	; 0x1da4 <__divsf3_pse+0x2c>
    1db2:	2b d0       	rcall	.+86     	; 0x1e0a <__divsf3_pse+0x92>
    1db4:	fe 2f       	mov	r31, r30
    1db6:	29 d0       	rcall	.+82     	; 0x1e0a <__divsf3_pse+0x92>
    1db8:	66 0f       	add	r22, r22
    1dba:	77 1f       	adc	r23, r23
    1dbc:	88 1f       	adc	r24, r24
    1dbe:	bb 1f       	adc	r27, r27
    1dc0:	26 17       	cp	r18, r22
    1dc2:	37 07       	cpc	r19, r23
    1dc4:	48 07       	cpc	r20, r24
    1dc6:	ab 07       	cpc	r26, r27
    1dc8:	b0 e8       	ldi	r27, 0x80	; 128
    1dca:	09 f0       	breq	.+2      	; 0x1dce <__divsf3_pse+0x56>
    1dcc:	bb 0b       	sbc	r27, r27
    1dce:	80 2d       	mov	r24, r0
    1dd0:	bf 01       	movw	r22, r30
    1dd2:	ff 27       	eor	r31, r31
    1dd4:	93 58       	subi	r25, 0x83	; 131
    1dd6:	5f 4f       	sbci	r21, 0xFF	; 255
    1dd8:	3a f0       	brmi	.+14     	; 0x1de8 <__divsf3_pse+0x70>
    1dda:	9e 3f       	cpi	r25, 0xFE	; 254
    1ddc:	51 05       	cpc	r21, r1
    1dde:	78 f0       	brcs	.+30     	; 0x1dfe <__divsf3_pse+0x86>
    1de0:	0c 94 a7 0f 	jmp	0x1f4e	; 0x1f4e <__fp_inf>
    1de4:	0c 94 f2 0f 	jmp	0x1fe4	; 0x1fe4 <__fp_szero>
    1de8:	5f 3f       	cpi	r21, 0xFF	; 255
    1dea:	e4 f3       	brlt	.-8      	; 0x1de4 <__divsf3_pse+0x6c>
    1dec:	98 3e       	cpi	r25, 0xE8	; 232
    1dee:	d4 f3       	brlt	.-12     	; 0x1de4 <__divsf3_pse+0x6c>
    1df0:	86 95       	lsr	r24
    1df2:	77 95       	ror	r23
    1df4:	67 95       	ror	r22
    1df6:	b7 95       	ror	r27
    1df8:	f7 95       	ror	r31
    1dfa:	9f 5f       	subi	r25, 0xFF	; 255
    1dfc:	c9 f7       	brne	.-14     	; 0x1df0 <__divsf3_pse+0x78>
    1dfe:	88 0f       	add	r24, r24
    1e00:	91 1d       	adc	r25, r1
    1e02:	96 95       	lsr	r25
    1e04:	87 95       	ror	r24
    1e06:	97 f9       	bld	r25, 7
    1e08:	08 95       	ret
    1e0a:	e1 e0       	ldi	r30, 0x01	; 1
    1e0c:	66 0f       	add	r22, r22
    1e0e:	77 1f       	adc	r23, r23
    1e10:	88 1f       	adc	r24, r24
    1e12:	bb 1f       	adc	r27, r27
    1e14:	62 17       	cp	r22, r18
    1e16:	73 07       	cpc	r23, r19
    1e18:	84 07       	cpc	r24, r20
    1e1a:	ba 07       	cpc	r27, r26
    1e1c:	20 f0       	brcs	.+8      	; 0x1e26 <__divsf3_pse+0xae>
    1e1e:	62 1b       	sub	r22, r18
    1e20:	73 0b       	sbc	r23, r19
    1e22:	84 0b       	sbc	r24, r20
    1e24:	ba 0b       	sbc	r27, r26
    1e26:	ee 1f       	adc	r30, r30
    1e28:	88 f7       	brcc	.-30     	; 0x1e0c <__divsf3_pse+0x94>
    1e2a:	e0 95       	com	r30
    1e2c:	08 95       	ret

00001e2e <__fixunssfsi>:
    1e2e:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <__fp_splitA>
    1e32:	88 f0       	brcs	.+34     	; 0x1e56 <__fixunssfsi+0x28>
    1e34:	9f 57       	subi	r25, 0x7F	; 127
    1e36:	98 f0       	brcs	.+38     	; 0x1e5e <__fixunssfsi+0x30>
    1e38:	b9 2f       	mov	r27, r25
    1e3a:	99 27       	eor	r25, r25
    1e3c:	b7 51       	subi	r27, 0x17	; 23
    1e3e:	b0 f0       	brcs	.+44     	; 0x1e6c <__fixunssfsi+0x3e>
    1e40:	e1 f0       	breq	.+56     	; 0x1e7a <__fixunssfsi+0x4c>
    1e42:	66 0f       	add	r22, r22
    1e44:	77 1f       	adc	r23, r23
    1e46:	88 1f       	adc	r24, r24
    1e48:	99 1f       	adc	r25, r25
    1e4a:	1a f0       	brmi	.+6      	; 0x1e52 <__fixunssfsi+0x24>
    1e4c:	ba 95       	dec	r27
    1e4e:	c9 f7       	brne	.-14     	; 0x1e42 <__fixunssfsi+0x14>
    1e50:	14 c0       	rjmp	.+40     	; 0x1e7a <__fixunssfsi+0x4c>
    1e52:	b1 30       	cpi	r27, 0x01	; 1
    1e54:	91 f0       	breq	.+36     	; 0x1e7a <__fixunssfsi+0x4c>
    1e56:	0e 94 f1 0f 	call	0x1fe2	; 0x1fe2 <__fp_zero>
    1e5a:	b1 e0       	ldi	r27, 0x01	; 1
    1e5c:	08 95       	ret
    1e5e:	0c 94 f1 0f 	jmp	0x1fe2	; 0x1fe2 <__fp_zero>
    1e62:	67 2f       	mov	r22, r23
    1e64:	78 2f       	mov	r23, r24
    1e66:	88 27       	eor	r24, r24
    1e68:	b8 5f       	subi	r27, 0xF8	; 248
    1e6a:	39 f0       	breq	.+14     	; 0x1e7a <__fixunssfsi+0x4c>
    1e6c:	b9 3f       	cpi	r27, 0xF9	; 249
    1e6e:	cc f3       	brlt	.-14     	; 0x1e62 <__fixunssfsi+0x34>
    1e70:	86 95       	lsr	r24
    1e72:	77 95       	ror	r23
    1e74:	67 95       	ror	r22
    1e76:	b3 95       	inc	r27
    1e78:	d9 f7       	brne	.-10     	; 0x1e70 <__fixunssfsi+0x42>
    1e7a:	3e f4       	brtc	.+14     	; 0x1e8a <__fixunssfsi+0x5c>
    1e7c:	90 95       	com	r25
    1e7e:	80 95       	com	r24
    1e80:	70 95       	com	r23
    1e82:	61 95       	neg	r22
    1e84:	7f 4f       	sbci	r23, 0xFF	; 255
    1e86:	8f 4f       	sbci	r24, 0xFF	; 255
    1e88:	9f 4f       	sbci	r25, 0xFF	; 255
    1e8a:	08 95       	ret

00001e8c <__floatunsisf>:
    1e8c:	e8 94       	clt
    1e8e:	09 c0       	rjmp	.+18     	; 0x1ea2 <__floatsisf+0x12>

00001e90 <__floatsisf>:
    1e90:	97 fb       	bst	r25, 7
    1e92:	3e f4       	brtc	.+14     	; 0x1ea2 <__floatsisf+0x12>
    1e94:	90 95       	com	r25
    1e96:	80 95       	com	r24
    1e98:	70 95       	com	r23
    1e9a:	61 95       	neg	r22
    1e9c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e9e:	8f 4f       	sbci	r24, 0xFF	; 255
    1ea0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ea2:	99 23       	and	r25, r25
    1ea4:	a9 f0       	breq	.+42     	; 0x1ed0 <__floatsisf+0x40>
    1ea6:	f9 2f       	mov	r31, r25
    1ea8:	96 e9       	ldi	r25, 0x96	; 150
    1eaa:	bb 27       	eor	r27, r27
    1eac:	93 95       	inc	r25
    1eae:	f6 95       	lsr	r31
    1eb0:	87 95       	ror	r24
    1eb2:	77 95       	ror	r23
    1eb4:	67 95       	ror	r22
    1eb6:	b7 95       	ror	r27
    1eb8:	f1 11       	cpse	r31, r1
    1eba:	f8 cf       	rjmp	.-16     	; 0x1eac <__floatsisf+0x1c>
    1ebc:	fa f4       	brpl	.+62     	; 0x1efc <__floatsisf+0x6c>
    1ebe:	bb 0f       	add	r27, r27
    1ec0:	11 f4       	brne	.+4      	; 0x1ec6 <__floatsisf+0x36>
    1ec2:	60 ff       	sbrs	r22, 0
    1ec4:	1b c0       	rjmp	.+54     	; 0x1efc <__floatsisf+0x6c>
    1ec6:	6f 5f       	subi	r22, 0xFF	; 255
    1ec8:	7f 4f       	sbci	r23, 0xFF	; 255
    1eca:	8f 4f       	sbci	r24, 0xFF	; 255
    1ecc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ece:	16 c0       	rjmp	.+44     	; 0x1efc <__floatsisf+0x6c>
    1ed0:	88 23       	and	r24, r24
    1ed2:	11 f0       	breq	.+4      	; 0x1ed8 <__floatsisf+0x48>
    1ed4:	96 e9       	ldi	r25, 0x96	; 150
    1ed6:	11 c0       	rjmp	.+34     	; 0x1efa <__floatsisf+0x6a>
    1ed8:	77 23       	and	r23, r23
    1eda:	21 f0       	breq	.+8      	; 0x1ee4 <__floatsisf+0x54>
    1edc:	9e e8       	ldi	r25, 0x8E	; 142
    1ede:	87 2f       	mov	r24, r23
    1ee0:	76 2f       	mov	r23, r22
    1ee2:	05 c0       	rjmp	.+10     	; 0x1eee <__floatsisf+0x5e>
    1ee4:	66 23       	and	r22, r22
    1ee6:	71 f0       	breq	.+28     	; 0x1f04 <__floatsisf+0x74>
    1ee8:	96 e8       	ldi	r25, 0x86	; 134
    1eea:	86 2f       	mov	r24, r22
    1eec:	70 e0       	ldi	r23, 0x00	; 0
    1eee:	60 e0       	ldi	r22, 0x00	; 0
    1ef0:	2a f0       	brmi	.+10     	; 0x1efc <__floatsisf+0x6c>
    1ef2:	9a 95       	dec	r25
    1ef4:	66 0f       	add	r22, r22
    1ef6:	77 1f       	adc	r23, r23
    1ef8:	88 1f       	adc	r24, r24
    1efa:	da f7       	brpl	.-10     	; 0x1ef2 <__floatsisf+0x62>
    1efc:	88 0f       	add	r24, r24
    1efe:	96 95       	lsr	r25
    1f00:	87 95       	ror	r24
    1f02:	97 f9       	bld	r25, 7
    1f04:	08 95       	ret

00001f06 <__fp_cmp>:
    1f06:	99 0f       	add	r25, r25
    1f08:	00 08       	sbc	r0, r0
    1f0a:	55 0f       	add	r21, r21
    1f0c:	aa 0b       	sbc	r26, r26
    1f0e:	e0 e8       	ldi	r30, 0x80	; 128
    1f10:	fe ef       	ldi	r31, 0xFE	; 254
    1f12:	16 16       	cp	r1, r22
    1f14:	17 06       	cpc	r1, r23
    1f16:	e8 07       	cpc	r30, r24
    1f18:	f9 07       	cpc	r31, r25
    1f1a:	c0 f0       	brcs	.+48     	; 0x1f4c <__fp_cmp+0x46>
    1f1c:	12 16       	cp	r1, r18
    1f1e:	13 06       	cpc	r1, r19
    1f20:	e4 07       	cpc	r30, r20
    1f22:	f5 07       	cpc	r31, r21
    1f24:	98 f0       	brcs	.+38     	; 0x1f4c <__fp_cmp+0x46>
    1f26:	62 1b       	sub	r22, r18
    1f28:	73 0b       	sbc	r23, r19
    1f2a:	84 0b       	sbc	r24, r20
    1f2c:	95 0b       	sbc	r25, r21
    1f2e:	39 f4       	brne	.+14     	; 0x1f3e <__fp_cmp+0x38>
    1f30:	0a 26       	eor	r0, r26
    1f32:	61 f0       	breq	.+24     	; 0x1f4c <__fp_cmp+0x46>
    1f34:	23 2b       	or	r18, r19
    1f36:	24 2b       	or	r18, r20
    1f38:	25 2b       	or	r18, r21
    1f3a:	21 f4       	brne	.+8      	; 0x1f44 <__fp_cmp+0x3e>
    1f3c:	08 95       	ret
    1f3e:	0a 26       	eor	r0, r26
    1f40:	09 f4       	brne	.+2      	; 0x1f44 <__fp_cmp+0x3e>
    1f42:	a1 40       	sbci	r26, 0x01	; 1
    1f44:	a6 95       	lsr	r26
    1f46:	8f ef       	ldi	r24, 0xFF	; 255
    1f48:	81 1d       	adc	r24, r1
    1f4a:	81 1d       	adc	r24, r1
    1f4c:	08 95       	ret

00001f4e <__fp_inf>:
    1f4e:	97 f9       	bld	r25, 7
    1f50:	9f 67       	ori	r25, 0x7F	; 127
    1f52:	80 e8       	ldi	r24, 0x80	; 128
    1f54:	70 e0       	ldi	r23, 0x00	; 0
    1f56:	60 e0       	ldi	r22, 0x00	; 0
    1f58:	08 95       	ret

00001f5a <__fp_nan>:
    1f5a:	9f ef       	ldi	r25, 0xFF	; 255
    1f5c:	80 ec       	ldi	r24, 0xC0	; 192
    1f5e:	08 95       	ret

00001f60 <__fp_pscA>:
    1f60:	00 24       	eor	r0, r0
    1f62:	0a 94       	dec	r0
    1f64:	16 16       	cp	r1, r22
    1f66:	17 06       	cpc	r1, r23
    1f68:	18 06       	cpc	r1, r24
    1f6a:	09 06       	cpc	r0, r25
    1f6c:	08 95       	ret

00001f6e <__fp_pscB>:
    1f6e:	00 24       	eor	r0, r0
    1f70:	0a 94       	dec	r0
    1f72:	12 16       	cp	r1, r18
    1f74:	13 06       	cpc	r1, r19
    1f76:	14 06       	cpc	r1, r20
    1f78:	05 06       	cpc	r0, r21
    1f7a:	08 95       	ret

00001f7c <__fp_round>:
    1f7c:	09 2e       	mov	r0, r25
    1f7e:	03 94       	inc	r0
    1f80:	00 0c       	add	r0, r0
    1f82:	11 f4       	brne	.+4      	; 0x1f88 <__fp_round+0xc>
    1f84:	88 23       	and	r24, r24
    1f86:	52 f0       	brmi	.+20     	; 0x1f9c <__fp_round+0x20>
    1f88:	bb 0f       	add	r27, r27
    1f8a:	40 f4       	brcc	.+16     	; 0x1f9c <__fp_round+0x20>
    1f8c:	bf 2b       	or	r27, r31
    1f8e:	11 f4       	brne	.+4      	; 0x1f94 <__fp_round+0x18>
    1f90:	60 ff       	sbrs	r22, 0
    1f92:	04 c0       	rjmp	.+8      	; 0x1f9c <__fp_round+0x20>
    1f94:	6f 5f       	subi	r22, 0xFF	; 255
    1f96:	7f 4f       	sbci	r23, 0xFF	; 255
    1f98:	8f 4f       	sbci	r24, 0xFF	; 255
    1f9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f9c:	08 95       	ret

00001f9e <__fp_split3>:
    1f9e:	57 fd       	sbrc	r21, 7
    1fa0:	90 58       	subi	r25, 0x80	; 128
    1fa2:	44 0f       	add	r20, r20
    1fa4:	55 1f       	adc	r21, r21
    1fa6:	59 f0       	breq	.+22     	; 0x1fbe <__fp_splitA+0x10>
    1fa8:	5f 3f       	cpi	r21, 0xFF	; 255
    1faa:	71 f0       	breq	.+28     	; 0x1fc8 <__fp_splitA+0x1a>
    1fac:	47 95       	ror	r20

00001fae <__fp_splitA>:
    1fae:	88 0f       	add	r24, r24
    1fb0:	97 fb       	bst	r25, 7
    1fb2:	99 1f       	adc	r25, r25
    1fb4:	61 f0       	breq	.+24     	; 0x1fce <__fp_splitA+0x20>
    1fb6:	9f 3f       	cpi	r25, 0xFF	; 255
    1fb8:	79 f0       	breq	.+30     	; 0x1fd8 <__fp_splitA+0x2a>
    1fba:	87 95       	ror	r24
    1fbc:	08 95       	ret
    1fbe:	12 16       	cp	r1, r18
    1fc0:	13 06       	cpc	r1, r19
    1fc2:	14 06       	cpc	r1, r20
    1fc4:	55 1f       	adc	r21, r21
    1fc6:	f2 cf       	rjmp	.-28     	; 0x1fac <__fp_split3+0xe>
    1fc8:	46 95       	lsr	r20
    1fca:	f1 df       	rcall	.-30     	; 0x1fae <__fp_splitA>
    1fcc:	08 c0       	rjmp	.+16     	; 0x1fde <__fp_splitA+0x30>
    1fce:	16 16       	cp	r1, r22
    1fd0:	17 06       	cpc	r1, r23
    1fd2:	18 06       	cpc	r1, r24
    1fd4:	99 1f       	adc	r25, r25
    1fd6:	f1 cf       	rjmp	.-30     	; 0x1fba <__fp_splitA+0xc>
    1fd8:	86 95       	lsr	r24
    1fda:	71 05       	cpc	r23, r1
    1fdc:	61 05       	cpc	r22, r1
    1fde:	08 94       	sec
    1fe0:	08 95       	ret

00001fe2 <__fp_zero>:
    1fe2:	e8 94       	clt

00001fe4 <__fp_szero>:
    1fe4:	bb 27       	eor	r27, r27
    1fe6:	66 27       	eor	r22, r22
    1fe8:	77 27       	eor	r23, r23
    1fea:	cb 01       	movw	r24, r22
    1fec:	97 f9       	bld	r25, 7
    1fee:	08 95       	ret

00001ff0 <__gesf2>:
    1ff0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__fp_cmp>
    1ff4:	08 f4       	brcc	.+2      	; 0x1ff8 <__gesf2+0x8>
    1ff6:	8f ef       	ldi	r24, 0xFF	; 255
    1ff8:	08 95       	ret
    1ffa:	16 f0       	brts	.+4      	; 0x2000 <__gesf2+0x10>
    1ffc:	0c 94 ba 10 	jmp	0x2174	; 0x2174 <__fp_mpack>
    2000:	0c 94 ad 0f 	jmp	0x1f5a	; 0x1f5a <__fp_nan>
    2004:	68 94       	set
    2006:	0c 94 a7 0f 	jmp	0x1f4e	; 0x1f4e <__fp_inf>

0000200a <log>:
    200a:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <__fp_splitA>
    200e:	a8 f3       	brcs	.-22     	; 0x1ffa <__gesf2+0xa>
    2010:	99 23       	and	r25, r25
    2012:	c1 f3       	breq	.-16     	; 0x2004 <__gesf2+0x14>
    2014:	ae f3       	brts	.-22     	; 0x2000 <__gesf2+0x10>
    2016:	df 93       	push	r29
    2018:	cf 93       	push	r28
    201a:	1f 93       	push	r17
    201c:	0f 93       	push	r16
    201e:	ff 92       	push	r15
    2020:	c9 2f       	mov	r28, r25
    2022:	dd 27       	eor	r29, r29
    2024:	88 23       	and	r24, r24
    2026:	2a f0       	brmi	.+10     	; 0x2032 <log+0x28>
    2028:	21 97       	sbiw	r28, 0x01	; 1
    202a:	66 0f       	add	r22, r22
    202c:	77 1f       	adc	r23, r23
    202e:	88 1f       	adc	r24, r24
    2030:	da f7       	brpl	.-10     	; 0x2028 <log+0x1e>
    2032:	20 e0       	ldi	r18, 0x00	; 0
    2034:	30 e0       	ldi	r19, 0x00	; 0
    2036:	40 e8       	ldi	r20, 0x80	; 128
    2038:	5f eb       	ldi	r21, 0xBF	; 191
    203a:	9f e3       	ldi	r25, 0x3F	; 63
    203c:	88 39       	cpi	r24, 0x98	; 152
    203e:	20 f0       	brcs	.+8      	; 0x2048 <log+0x3e>
    2040:	80 3e       	cpi	r24, 0xE0	; 224
    2042:	38 f0       	brcs	.+14     	; 0x2052 <log+0x48>
    2044:	21 96       	adiw	r28, 0x01	; 1
    2046:	8f 77       	andi	r24, 0x7F	; 127
    2048:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__addsf3>
    204c:	e8 e6       	ldi	r30, 0x68	; 104
    204e:	f0 e0       	ldi	r31, 0x00	; 0
    2050:	04 c0       	rjmp	.+8      	; 0x205a <log+0x50>
    2052:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__addsf3>
    2056:	e5 e9       	ldi	r30, 0x95	; 149
    2058:	f0 e0       	ldi	r31, 0x00	; 0
    205a:	0e 94 c8 10 	call	0x2190	; 0x2190 <__fp_powser>
    205e:	8b 01       	movw	r16, r22
    2060:	be 01       	movw	r22, r28
    2062:	ec 01       	movw	r28, r24
    2064:	fb 2e       	mov	r15, r27
    2066:	6f 57       	subi	r22, 0x7F	; 127
    2068:	71 09       	sbc	r23, r1
    206a:	75 95       	asr	r23
    206c:	77 1f       	adc	r23, r23
    206e:	88 0b       	sbc	r24, r24
    2070:	99 0b       	sbc	r25, r25
    2072:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <__floatsisf>
    2076:	28 e1       	ldi	r18, 0x18	; 24
    2078:	32 e7       	ldi	r19, 0x72	; 114
    207a:	41 e3       	ldi	r20, 0x31	; 49
    207c:	5f e3       	ldi	r21, 0x3F	; 63
    207e:	0e 94 60 10 	call	0x20c0	; 0x20c0 <__mulsf3x>
    2082:	af 2d       	mov	r26, r15
    2084:	98 01       	movw	r18, r16
    2086:	ae 01       	movw	r20, r28
    2088:	ff 90       	pop	r15
    208a:	0f 91       	pop	r16
    208c:	1f 91       	pop	r17
    208e:	cf 91       	pop	r28
    2090:	df 91       	pop	r29
    2092:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__addsf3x>
    2096:	0c 94 be 0f 	jmp	0x1f7c	; 0x1f7c <__fp_round>

0000209a <__mulsf3>:
    209a:	0e 94 60 10 	call	0x20c0	; 0x20c0 <__mulsf3x>
    209e:	0c 94 be 0f 	jmp	0x1f7c	; 0x1f7c <__fp_round>
    20a2:	0e 94 b0 0f 	call	0x1f60	; 0x1f60 <__fp_pscA>
    20a6:	38 f0       	brcs	.+14     	; 0x20b6 <__mulsf3+0x1c>
    20a8:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <__fp_pscB>
    20ac:	20 f0       	brcs	.+8      	; 0x20b6 <__mulsf3+0x1c>
    20ae:	95 23       	and	r25, r21
    20b0:	11 f0       	breq	.+4      	; 0x20b6 <__mulsf3+0x1c>
    20b2:	0c 94 a7 0f 	jmp	0x1f4e	; 0x1f4e <__fp_inf>
    20b6:	0c 94 ad 0f 	jmp	0x1f5a	; 0x1f5a <__fp_nan>
    20ba:	11 24       	eor	r1, r1
    20bc:	0c 94 f2 0f 	jmp	0x1fe4	; 0x1fe4 <__fp_szero>

000020c0 <__mulsf3x>:
    20c0:	0e 94 cf 0f 	call	0x1f9e	; 0x1f9e <__fp_split3>
    20c4:	70 f3       	brcs	.-36     	; 0x20a2 <__mulsf3+0x8>

000020c6 <__mulsf3_pse>:
    20c6:	95 9f       	mul	r25, r21
    20c8:	c1 f3       	breq	.-16     	; 0x20ba <__mulsf3+0x20>
    20ca:	95 0f       	add	r25, r21
    20cc:	50 e0       	ldi	r21, 0x00	; 0
    20ce:	55 1f       	adc	r21, r21
    20d0:	62 9f       	mul	r22, r18
    20d2:	f0 01       	movw	r30, r0
    20d4:	72 9f       	mul	r23, r18
    20d6:	bb 27       	eor	r27, r27
    20d8:	f0 0d       	add	r31, r0
    20da:	b1 1d       	adc	r27, r1
    20dc:	63 9f       	mul	r22, r19
    20de:	aa 27       	eor	r26, r26
    20e0:	f0 0d       	add	r31, r0
    20e2:	b1 1d       	adc	r27, r1
    20e4:	aa 1f       	adc	r26, r26
    20e6:	64 9f       	mul	r22, r20
    20e8:	66 27       	eor	r22, r22
    20ea:	b0 0d       	add	r27, r0
    20ec:	a1 1d       	adc	r26, r1
    20ee:	66 1f       	adc	r22, r22
    20f0:	82 9f       	mul	r24, r18
    20f2:	22 27       	eor	r18, r18
    20f4:	b0 0d       	add	r27, r0
    20f6:	a1 1d       	adc	r26, r1
    20f8:	62 1f       	adc	r22, r18
    20fa:	73 9f       	mul	r23, r19
    20fc:	b0 0d       	add	r27, r0
    20fe:	a1 1d       	adc	r26, r1
    2100:	62 1f       	adc	r22, r18
    2102:	83 9f       	mul	r24, r19
    2104:	a0 0d       	add	r26, r0
    2106:	61 1d       	adc	r22, r1
    2108:	22 1f       	adc	r18, r18
    210a:	74 9f       	mul	r23, r20
    210c:	33 27       	eor	r19, r19
    210e:	a0 0d       	add	r26, r0
    2110:	61 1d       	adc	r22, r1
    2112:	23 1f       	adc	r18, r19
    2114:	84 9f       	mul	r24, r20
    2116:	60 0d       	add	r22, r0
    2118:	21 1d       	adc	r18, r1
    211a:	82 2f       	mov	r24, r18
    211c:	76 2f       	mov	r23, r22
    211e:	6a 2f       	mov	r22, r26
    2120:	11 24       	eor	r1, r1
    2122:	9f 57       	subi	r25, 0x7F	; 127
    2124:	50 40       	sbci	r21, 0x00	; 0
    2126:	9a f0       	brmi	.+38     	; 0x214e <__mulsf3_pse+0x88>
    2128:	f1 f0       	breq	.+60     	; 0x2166 <__mulsf3_pse+0xa0>
    212a:	88 23       	and	r24, r24
    212c:	4a f0       	brmi	.+18     	; 0x2140 <__mulsf3_pse+0x7a>
    212e:	ee 0f       	add	r30, r30
    2130:	ff 1f       	adc	r31, r31
    2132:	bb 1f       	adc	r27, r27
    2134:	66 1f       	adc	r22, r22
    2136:	77 1f       	adc	r23, r23
    2138:	88 1f       	adc	r24, r24
    213a:	91 50       	subi	r25, 0x01	; 1
    213c:	50 40       	sbci	r21, 0x00	; 0
    213e:	a9 f7       	brne	.-22     	; 0x212a <__mulsf3_pse+0x64>
    2140:	9e 3f       	cpi	r25, 0xFE	; 254
    2142:	51 05       	cpc	r21, r1
    2144:	80 f0       	brcs	.+32     	; 0x2166 <__mulsf3_pse+0xa0>
    2146:	0c 94 a7 0f 	jmp	0x1f4e	; 0x1f4e <__fp_inf>
    214a:	0c 94 f2 0f 	jmp	0x1fe4	; 0x1fe4 <__fp_szero>
    214e:	5f 3f       	cpi	r21, 0xFF	; 255
    2150:	e4 f3       	brlt	.-8      	; 0x214a <__mulsf3_pse+0x84>
    2152:	98 3e       	cpi	r25, 0xE8	; 232
    2154:	d4 f3       	brlt	.-12     	; 0x214a <__mulsf3_pse+0x84>
    2156:	86 95       	lsr	r24
    2158:	77 95       	ror	r23
    215a:	67 95       	ror	r22
    215c:	b7 95       	ror	r27
    215e:	f7 95       	ror	r31
    2160:	e7 95       	ror	r30
    2162:	9f 5f       	subi	r25, 0xFF	; 255
    2164:	c1 f7       	brne	.-16     	; 0x2156 <__mulsf3_pse+0x90>
    2166:	fe 2b       	or	r31, r30
    2168:	88 0f       	add	r24, r24
    216a:	91 1d       	adc	r25, r1
    216c:	96 95       	lsr	r25
    216e:	87 95       	ror	r24
    2170:	97 f9       	bld	r25, 7
    2172:	08 95       	ret

00002174 <__fp_mpack>:
    2174:	9f 3f       	cpi	r25, 0xFF	; 255
    2176:	31 f0       	breq	.+12     	; 0x2184 <__fp_mpack_finite+0xc>

00002178 <__fp_mpack_finite>:
    2178:	91 50       	subi	r25, 0x01	; 1
    217a:	20 f4       	brcc	.+8      	; 0x2184 <__fp_mpack_finite+0xc>
    217c:	87 95       	ror	r24
    217e:	77 95       	ror	r23
    2180:	67 95       	ror	r22
    2182:	b7 95       	ror	r27
    2184:	88 0f       	add	r24, r24
    2186:	91 1d       	adc	r25, r1
    2188:	96 95       	lsr	r25
    218a:	87 95       	ror	r24
    218c:	97 f9       	bld	r25, 7
    218e:	08 95       	ret

00002190 <__fp_powser>:
    2190:	df 93       	push	r29
    2192:	cf 93       	push	r28
    2194:	1f 93       	push	r17
    2196:	0f 93       	push	r16
    2198:	ff 92       	push	r15
    219a:	ef 92       	push	r14
    219c:	df 92       	push	r13
    219e:	7b 01       	movw	r14, r22
    21a0:	8c 01       	movw	r16, r24
    21a2:	68 94       	set
    21a4:	06 c0       	rjmp	.+12     	; 0x21b2 <__fp_powser+0x22>
    21a6:	da 2e       	mov	r13, r26
    21a8:	ef 01       	movw	r28, r30
    21aa:	0e 94 60 10 	call	0x20c0	; 0x20c0 <__mulsf3x>
    21ae:	fe 01       	movw	r30, r28
    21b0:	e8 94       	clt
    21b2:	a5 91       	lpm	r26, Z+
    21b4:	25 91       	lpm	r18, Z+
    21b6:	35 91       	lpm	r19, Z+
    21b8:	45 91       	lpm	r20, Z+
    21ba:	55 91       	lpm	r21, Z+
    21bc:	a6 f3       	brts	.-24     	; 0x21a6 <__fp_powser+0x16>
    21be:	ef 01       	movw	r28, r30
    21c0:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__addsf3x>
    21c4:	fe 01       	movw	r30, r28
    21c6:	97 01       	movw	r18, r14
    21c8:	a8 01       	movw	r20, r16
    21ca:	da 94       	dec	r13
    21cc:	69 f7       	brne	.-38     	; 0x21a8 <__fp_powser+0x18>
    21ce:	df 90       	pop	r13
    21d0:	ef 90       	pop	r14
    21d2:	ff 90       	pop	r15
    21d4:	0f 91       	pop	r16
    21d6:	1f 91       	pop	r17
    21d8:	cf 91       	pop	r28
    21da:	df 91       	pop	r29
    21dc:	08 95       	ret

000021de <__udivmodqi4>:
    21de:	99 1b       	sub	r25, r25
    21e0:	79 e0       	ldi	r23, 0x09	; 9
    21e2:	04 c0       	rjmp	.+8      	; 0x21ec <__udivmodqi4_ep>

000021e4 <__udivmodqi4_loop>:
    21e4:	99 1f       	adc	r25, r25
    21e6:	96 17       	cp	r25, r22
    21e8:	08 f0       	brcs	.+2      	; 0x21ec <__udivmodqi4_ep>
    21ea:	96 1b       	sub	r25, r22

000021ec <__udivmodqi4_ep>:
    21ec:	88 1f       	adc	r24, r24
    21ee:	7a 95       	dec	r23
    21f0:	c9 f7       	brne	.-14     	; 0x21e4 <__udivmodqi4_loop>
    21f2:	80 95       	com	r24
    21f4:	08 95       	ret

000021f6 <__udivmodsi4>:
    21f6:	a1 e2       	ldi	r26, 0x21	; 33
    21f8:	1a 2e       	mov	r1, r26
    21fa:	aa 1b       	sub	r26, r26
    21fc:	bb 1b       	sub	r27, r27
    21fe:	fd 01       	movw	r30, r26
    2200:	0d c0       	rjmp	.+26     	; 0x221c <__udivmodsi4_ep>

00002202 <__udivmodsi4_loop>:
    2202:	aa 1f       	adc	r26, r26
    2204:	bb 1f       	adc	r27, r27
    2206:	ee 1f       	adc	r30, r30
    2208:	ff 1f       	adc	r31, r31
    220a:	a2 17       	cp	r26, r18
    220c:	b3 07       	cpc	r27, r19
    220e:	e4 07       	cpc	r30, r20
    2210:	f5 07       	cpc	r31, r21
    2212:	20 f0       	brcs	.+8      	; 0x221c <__udivmodsi4_ep>
    2214:	a2 1b       	sub	r26, r18
    2216:	b3 0b       	sbc	r27, r19
    2218:	e4 0b       	sbc	r30, r20
    221a:	f5 0b       	sbc	r31, r21

0000221c <__udivmodsi4_ep>:
    221c:	66 1f       	adc	r22, r22
    221e:	77 1f       	adc	r23, r23
    2220:	88 1f       	adc	r24, r24
    2222:	99 1f       	adc	r25, r25
    2224:	1a 94       	dec	r1
    2226:	69 f7       	brne	.-38     	; 0x2202 <__udivmodsi4_loop>
    2228:	60 95       	com	r22
    222a:	70 95       	com	r23
    222c:	80 95       	com	r24
    222e:	90 95       	com	r25
    2230:	9b 01       	movw	r18, r22
    2232:	ac 01       	movw	r20, r24
    2234:	bd 01       	movw	r22, r26
    2236:	cf 01       	movw	r24, r30
    2238:	08 95       	ret

0000223a <__divmodsi4>:
    223a:	05 2e       	mov	r0, r21
    223c:	97 fb       	bst	r25, 7
    223e:	1e f4       	brtc	.+6      	; 0x2246 <__divmodsi4+0xc>
    2240:	00 94       	com	r0
    2242:	0e 94 34 11 	call	0x2268	; 0x2268 <__negsi2>
    2246:	57 fd       	sbrc	r21, 7
    2248:	07 d0       	rcall	.+14     	; 0x2258 <__divmodsi4_neg2>
    224a:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <__udivmodsi4>
    224e:	07 fc       	sbrc	r0, 7
    2250:	03 d0       	rcall	.+6      	; 0x2258 <__divmodsi4_neg2>
    2252:	4e f4       	brtc	.+18     	; 0x2266 <__divmodsi4_exit>
    2254:	0c 94 34 11 	jmp	0x2268	; 0x2268 <__negsi2>

00002258 <__divmodsi4_neg2>:
    2258:	50 95       	com	r21
    225a:	40 95       	com	r20
    225c:	30 95       	com	r19
    225e:	21 95       	neg	r18
    2260:	3f 4f       	sbci	r19, 0xFF	; 255
    2262:	4f 4f       	sbci	r20, 0xFF	; 255
    2264:	5f 4f       	sbci	r21, 0xFF	; 255

00002266 <__divmodsi4_exit>:
    2266:	08 95       	ret

00002268 <__negsi2>:
    2268:	90 95       	com	r25
    226a:	80 95       	com	r24
    226c:	70 95       	com	r23
    226e:	61 95       	neg	r22
    2270:	7f 4f       	sbci	r23, 0xFF	; 255
    2272:	8f 4f       	sbci	r24, 0xFF	; 255
    2274:	9f 4f       	sbci	r25, 0xFF	; 255
    2276:	08 95       	ret

00002278 <__umulhisi3>:
    2278:	a2 9f       	mul	r26, r18
    227a:	b0 01       	movw	r22, r0
    227c:	b3 9f       	mul	r27, r19
    227e:	c0 01       	movw	r24, r0
    2280:	a3 9f       	mul	r26, r19
    2282:	70 0d       	add	r23, r0
    2284:	81 1d       	adc	r24, r1
    2286:	11 24       	eor	r1, r1
    2288:	91 1d       	adc	r25, r1
    228a:	b2 9f       	mul	r27, r18
    228c:	70 0d       	add	r23, r0
    228e:	81 1d       	adc	r24, r1
    2290:	11 24       	eor	r1, r1
    2292:	91 1d       	adc	r25, r1
    2294:	08 95       	ret

00002296 <sprintf>:
    2296:	ae e0       	ldi	r26, 0x0E	; 14
    2298:	b0 e0       	ldi	r27, 0x00	; 0
    229a:	e1 e5       	ldi	r30, 0x51	; 81
    229c:	f1 e1       	ldi	r31, 0x11	; 17
    229e:	0c 94 0c 14 	jmp	0x2818	; 0x2818 <__prologue_saves__+0x1c>
    22a2:	0d 89       	ldd	r16, Y+21	; 0x15
    22a4:	1e 89       	ldd	r17, Y+22	; 0x16
    22a6:	86 e0       	ldi	r24, 0x06	; 6
    22a8:	8c 83       	std	Y+4, r24	; 0x04
    22aa:	1a 83       	std	Y+2, r17	; 0x02
    22ac:	09 83       	std	Y+1, r16	; 0x01
    22ae:	8f ef       	ldi	r24, 0xFF	; 255
    22b0:	9f e7       	ldi	r25, 0x7F	; 127
    22b2:	9e 83       	std	Y+6, r25	; 0x06
    22b4:	8d 83       	std	Y+5, r24	; 0x05
    22b6:	ae 01       	movw	r20, r28
    22b8:	47 5e       	subi	r20, 0xE7	; 231
    22ba:	5f 4f       	sbci	r21, 0xFF	; 255
    22bc:	6f 89       	ldd	r22, Y+23	; 0x17
    22be:	78 8d       	ldd	r23, Y+24	; 0x18
    22c0:	ce 01       	movw	r24, r28
    22c2:	01 96       	adiw	r24, 0x01	; 1
    22c4:	0e 94 6d 11 	call	0x22da	; 0x22da <vfprintf>
    22c8:	ef 81       	ldd	r30, Y+7	; 0x07
    22ca:	f8 85       	ldd	r31, Y+8	; 0x08
    22cc:	e0 0f       	add	r30, r16
    22ce:	f1 1f       	adc	r31, r17
    22d0:	10 82       	st	Z, r1
    22d2:	2e 96       	adiw	r28, 0x0e	; 14
    22d4:	e4 e0       	ldi	r30, 0x04	; 4
    22d6:	0c 94 28 14 	jmp	0x2850	; 0x2850 <__epilogue_restores__+0x1c>

000022da <vfprintf>:
    22da:	ab e0       	ldi	r26, 0x0B	; 11
    22dc:	b0 e0       	ldi	r27, 0x00	; 0
    22de:	e3 e7       	ldi	r30, 0x73	; 115
    22e0:	f1 e1       	ldi	r31, 0x11	; 17
    22e2:	0c 94 fe 13 	jmp	0x27fc	; 0x27fc <__prologue_saves__>
    22e6:	6c 01       	movw	r12, r24
    22e8:	7b 01       	movw	r14, r22
    22ea:	8a 01       	movw	r16, r20
    22ec:	fc 01       	movw	r30, r24
    22ee:	17 82       	std	Z+7, r1	; 0x07
    22f0:	16 82       	std	Z+6, r1	; 0x06
    22f2:	83 81       	ldd	r24, Z+3	; 0x03
    22f4:	81 ff       	sbrs	r24, 1
    22f6:	cc c1       	rjmp	.+920    	; 0x2690 <vfprintf+0x3b6>
    22f8:	ce 01       	movw	r24, r28
    22fa:	01 96       	adiw	r24, 0x01	; 1
    22fc:	3c 01       	movw	r6, r24
    22fe:	f6 01       	movw	r30, r12
    2300:	93 81       	ldd	r25, Z+3	; 0x03
    2302:	f7 01       	movw	r30, r14
    2304:	93 fd       	sbrc	r25, 3
    2306:	85 91       	lpm	r24, Z+
    2308:	93 ff       	sbrs	r25, 3
    230a:	81 91       	ld	r24, Z+
    230c:	7f 01       	movw	r14, r30
    230e:	88 23       	and	r24, r24
    2310:	09 f4       	brne	.+2      	; 0x2314 <vfprintf+0x3a>
    2312:	ba c1       	rjmp	.+884    	; 0x2688 <vfprintf+0x3ae>
    2314:	85 32       	cpi	r24, 0x25	; 37
    2316:	39 f4       	brne	.+14     	; 0x2326 <vfprintf+0x4c>
    2318:	93 fd       	sbrc	r25, 3
    231a:	85 91       	lpm	r24, Z+
    231c:	93 ff       	sbrs	r25, 3
    231e:	81 91       	ld	r24, Z+
    2320:	7f 01       	movw	r14, r30
    2322:	85 32       	cpi	r24, 0x25	; 37
    2324:	29 f4       	brne	.+10     	; 0x2330 <vfprintf+0x56>
    2326:	b6 01       	movw	r22, r12
    2328:	90 e0       	ldi	r25, 0x00	; 0
    232a:	0e 94 64 13 	call	0x26c8	; 0x26c8 <fputc>
    232e:	e7 cf       	rjmp	.-50     	; 0x22fe <vfprintf+0x24>
    2330:	91 2c       	mov	r9, r1
    2332:	21 2c       	mov	r2, r1
    2334:	31 2c       	mov	r3, r1
    2336:	ff e1       	ldi	r31, 0x1F	; 31
    2338:	f3 15       	cp	r31, r3
    233a:	d8 f0       	brcs	.+54     	; 0x2372 <vfprintf+0x98>
    233c:	8b 32       	cpi	r24, 0x2B	; 43
    233e:	79 f0       	breq	.+30     	; 0x235e <vfprintf+0x84>
    2340:	38 f4       	brcc	.+14     	; 0x2350 <vfprintf+0x76>
    2342:	80 32       	cpi	r24, 0x20	; 32
    2344:	79 f0       	breq	.+30     	; 0x2364 <vfprintf+0x8a>
    2346:	83 32       	cpi	r24, 0x23	; 35
    2348:	a1 f4       	brne	.+40     	; 0x2372 <vfprintf+0x98>
    234a:	23 2d       	mov	r18, r3
    234c:	20 61       	ori	r18, 0x10	; 16
    234e:	1d c0       	rjmp	.+58     	; 0x238a <vfprintf+0xb0>
    2350:	8d 32       	cpi	r24, 0x2D	; 45
    2352:	61 f0       	breq	.+24     	; 0x236c <vfprintf+0x92>
    2354:	80 33       	cpi	r24, 0x30	; 48
    2356:	69 f4       	brne	.+26     	; 0x2372 <vfprintf+0x98>
    2358:	23 2d       	mov	r18, r3
    235a:	21 60       	ori	r18, 0x01	; 1
    235c:	16 c0       	rjmp	.+44     	; 0x238a <vfprintf+0xb0>
    235e:	83 2d       	mov	r24, r3
    2360:	82 60       	ori	r24, 0x02	; 2
    2362:	38 2e       	mov	r3, r24
    2364:	e3 2d       	mov	r30, r3
    2366:	e4 60       	ori	r30, 0x04	; 4
    2368:	3e 2e       	mov	r3, r30
    236a:	2a c0       	rjmp	.+84     	; 0x23c0 <vfprintf+0xe6>
    236c:	f3 2d       	mov	r31, r3
    236e:	f8 60       	ori	r31, 0x08	; 8
    2370:	1d c0       	rjmp	.+58     	; 0x23ac <vfprintf+0xd2>
    2372:	37 fc       	sbrc	r3, 7
    2374:	2d c0       	rjmp	.+90     	; 0x23d0 <vfprintf+0xf6>
    2376:	20 ed       	ldi	r18, 0xD0	; 208
    2378:	28 0f       	add	r18, r24
    237a:	2a 30       	cpi	r18, 0x0A	; 10
    237c:	40 f0       	brcs	.+16     	; 0x238e <vfprintf+0xb4>
    237e:	8e 32       	cpi	r24, 0x2E	; 46
    2380:	b9 f4       	brne	.+46     	; 0x23b0 <vfprintf+0xd6>
    2382:	36 fc       	sbrc	r3, 6
    2384:	81 c1       	rjmp	.+770    	; 0x2688 <vfprintf+0x3ae>
    2386:	23 2d       	mov	r18, r3
    2388:	20 64       	ori	r18, 0x40	; 64
    238a:	32 2e       	mov	r3, r18
    238c:	19 c0       	rjmp	.+50     	; 0x23c0 <vfprintf+0xe6>
    238e:	36 fe       	sbrs	r3, 6
    2390:	06 c0       	rjmp	.+12     	; 0x239e <vfprintf+0xc4>
    2392:	8a e0       	ldi	r24, 0x0A	; 10
    2394:	98 9e       	mul	r9, r24
    2396:	20 0d       	add	r18, r0
    2398:	11 24       	eor	r1, r1
    239a:	92 2e       	mov	r9, r18
    239c:	11 c0       	rjmp	.+34     	; 0x23c0 <vfprintf+0xe6>
    239e:	ea e0       	ldi	r30, 0x0A	; 10
    23a0:	2e 9e       	mul	r2, r30
    23a2:	20 0d       	add	r18, r0
    23a4:	11 24       	eor	r1, r1
    23a6:	22 2e       	mov	r2, r18
    23a8:	f3 2d       	mov	r31, r3
    23aa:	f0 62       	ori	r31, 0x20	; 32
    23ac:	3f 2e       	mov	r3, r31
    23ae:	08 c0       	rjmp	.+16     	; 0x23c0 <vfprintf+0xe6>
    23b0:	8c 36       	cpi	r24, 0x6C	; 108
    23b2:	21 f4       	brne	.+8      	; 0x23bc <vfprintf+0xe2>
    23b4:	83 2d       	mov	r24, r3
    23b6:	80 68       	ori	r24, 0x80	; 128
    23b8:	38 2e       	mov	r3, r24
    23ba:	02 c0       	rjmp	.+4      	; 0x23c0 <vfprintf+0xe6>
    23bc:	88 36       	cpi	r24, 0x68	; 104
    23be:	41 f4       	brne	.+16     	; 0x23d0 <vfprintf+0xf6>
    23c0:	f7 01       	movw	r30, r14
    23c2:	93 fd       	sbrc	r25, 3
    23c4:	85 91       	lpm	r24, Z+
    23c6:	93 ff       	sbrs	r25, 3
    23c8:	81 91       	ld	r24, Z+
    23ca:	7f 01       	movw	r14, r30
    23cc:	81 11       	cpse	r24, r1
    23ce:	b3 cf       	rjmp	.-154    	; 0x2336 <vfprintf+0x5c>
    23d0:	98 2f       	mov	r25, r24
    23d2:	9f 7d       	andi	r25, 0xDF	; 223
    23d4:	95 54       	subi	r25, 0x45	; 69
    23d6:	93 30       	cpi	r25, 0x03	; 3
    23d8:	28 f4       	brcc	.+10     	; 0x23e4 <vfprintf+0x10a>
    23da:	0c 5f       	subi	r16, 0xFC	; 252
    23dc:	1f 4f       	sbci	r17, 0xFF	; 255
    23de:	9f e3       	ldi	r25, 0x3F	; 63
    23e0:	99 83       	std	Y+1, r25	; 0x01
    23e2:	0d c0       	rjmp	.+26     	; 0x23fe <vfprintf+0x124>
    23e4:	83 36       	cpi	r24, 0x63	; 99
    23e6:	31 f0       	breq	.+12     	; 0x23f4 <vfprintf+0x11a>
    23e8:	83 37       	cpi	r24, 0x73	; 115
    23ea:	71 f0       	breq	.+28     	; 0x2408 <vfprintf+0x12e>
    23ec:	83 35       	cpi	r24, 0x53	; 83
    23ee:	09 f0       	breq	.+2      	; 0x23f2 <vfprintf+0x118>
    23f0:	59 c0       	rjmp	.+178    	; 0x24a4 <vfprintf+0x1ca>
    23f2:	21 c0       	rjmp	.+66     	; 0x2436 <vfprintf+0x15c>
    23f4:	f8 01       	movw	r30, r16
    23f6:	80 81       	ld	r24, Z
    23f8:	89 83       	std	Y+1, r24	; 0x01
    23fa:	0e 5f       	subi	r16, 0xFE	; 254
    23fc:	1f 4f       	sbci	r17, 0xFF	; 255
    23fe:	88 24       	eor	r8, r8
    2400:	83 94       	inc	r8
    2402:	91 2c       	mov	r9, r1
    2404:	53 01       	movw	r10, r6
    2406:	13 c0       	rjmp	.+38     	; 0x242e <vfprintf+0x154>
    2408:	28 01       	movw	r4, r16
    240a:	f2 e0       	ldi	r31, 0x02	; 2
    240c:	4f 0e       	add	r4, r31
    240e:	51 1c       	adc	r5, r1
    2410:	f8 01       	movw	r30, r16
    2412:	a0 80       	ld	r10, Z
    2414:	b1 80       	ldd	r11, Z+1	; 0x01
    2416:	36 fe       	sbrs	r3, 6
    2418:	03 c0       	rjmp	.+6      	; 0x2420 <vfprintf+0x146>
    241a:	69 2d       	mov	r22, r9
    241c:	70 e0       	ldi	r23, 0x00	; 0
    241e:	02 c0       	rjmp	.+4      	; 0x2424 <vfprintf+0x14a>
    2420:	6f ef       	ldi	r22, 0xFF	; 255
    2422:	7f ef       	ldi	r23, 0xFF	; 255
    2424:	c5 01       	movw	r24, r10
    2426:	0e 94 59 13 	call	0x26b2	; 0x26b2 <strnlen>
    242a:	4c 01       	movw	r8, r24
    242c:	82 01       	movw	r16, r4
    242e:	f3 2d       	mov	r31, r3
    2430:	ff 77       	andi	r31, 0x7F	; 127
    2432:	3f 2e       	mov	r3, r31
    2434:	16 c0       	rjmp	.+44     	; 0x2462 <vfprintf+0x188>
    2436:	28 01       	movw	r4, r16
    2438:	22 e0       	ldi	r18, 0x02	; 2
    243a:	42 0e       	add	r4, r18
    243c:	51 1c       	adc	r5, r1
    243e:	f8 01       	movw	r30, r16
    2440:	a0 80       	ld	r10, Z
    2442:	b1 80       	ldd	r11, Z+1	; 0x01
    2444:	36 fe       	sbrs	r3, 6
    2446:	03 c0       	rjmp	.+6      	; 0x244e <vfprintf+0x174>
    2448:	69 2d       	mov	r22, r9
    244a:	70 e0       	ldi	r23, 0x00	; 0
    244c:	02 c0       	rjmp	.+4      	; 0x2452 <vfprintf+0x178>
    244e:	6f ef       	ldi	r22, 0xFF	; 255
    2450:	7f ef       	ldi	r23, 0xFF	; 255
    2452:	c5 01       	movw	r24, r10
    2454:	0e 94 4e 13 	call	0x269c	; 0x269c <strnlen_P>
    2458:	4c 01       	movw	r8, r24
    245a:	f3 2d       	mov	r31, r3
    245c:	f0 68       	ori	r31, 0x80	; 128
    245e:	3f 2e       	mov	r3, r31
    2460:	82 01       	movw	r16, r4
    2462:	33 fc       	sbrc	r3, 3
    2464:	1b c0       	rjmp	.+54     	; 0x249c <vfprintf+0x1c2>
    2466:	82 2d       	mov	r24, r2
    2468:	90 e0       	ldi	r25, 0x00	; 0
    246a:	88 16       	cp	r8, r24
    246c:	99 06       	cpc	r9, r25
    246e:	b0 f4       	brcc	.+44     	; 0x249c <vfprintf+0x1c2>
    2470:	b6 01       	movw	r22, r12
    2472:	80 e2       	ldi	r24, 0x20	; 32
    2474:	90 e0       	ldi	r25, 0x00	; 0
    2476:	0e 94 64 13 	call	0x26c8	; 0x26c8 <fputc>
    247a:	2a 94       	dec	r2
    247c:	f4 cf       	rjmp	.-24     	; 0x2466 <vfprintf+0x18c>
    247e:	f5 01       	movw	r30, r10
    2480:	37 fc       	sbrc	r3, 7
    2482:	85 91       	lpm	r24, Z+
    2484:	37 fe       	sbrs	r3, 7
    2486:	81 91       	ld	r24, Z+
    2488:	5f 01       	movw	r10, r30
    248a:	b6 01       	movw	r22, r12
    248c:	90 e0       	ldi	r25, 0x00	; 0
    248e:	0e 94 64 13 	call	0x26c8	; 0x26c8 <fputc>
    2492:	21 10       	cpse	r2, r1
    2494:	2a 94       	dec	r2
    2496:	21 e0       	ldi	r18, 0x01	; 1
    2498:	82 1a       	sub	r8, r18
    249a:	91 08       	sbc	r9, r1
    249c:	81 14       	cp	r8, r1
    249e:	91 04       	cpc	r9, r1
    24a0:	71 f7       	brne	.-36     	; 0x247e <vfprintf+0x1a4>
    24a2:	e8 c0       	rjmp	.+464    	; 0x2674 <vfprintf+0x39a>
    24a4:	84 36       	cpi	r24, 0x64	; 100
    24a6:	11 f0       	breq	.+4      	; 0x24ac <vfprintf+0x1d2>
    24a8:	89 36       	cpi	r24, 0x69	; 105
    24aa:	41 f5       	brne	.+80     	; 0x24fc <vfprintf+0x222>
    24ac:	f8 01       	movw	r30, r16
    24ae:	37 fe       	sbrs	r3, 7
    24b0:	07 c0       	rjmp	.+14     	; 0x24c0 <vfprintf+0x1e6>
    24b2:	60 81       	ld	r22, Z
    24b4:	71 81       	ldd	r23, Z+1	; 0x01
    24b6:	82 81       	ldd	r24, Z+2	; 0x02
    24b8:	93 81       	ldd	r25, Z+3	; 0x03
    24ba:	0c 5f       	subi	r16, 0xFC	; 252
    24bc:	1f 4f       	sbci	r17, 0xFF	; 255
    24be:	08 c0       	rjmp	.+16     	; 0x24d0 <vfprintf+0x1f6>
    24c0:	60 81       	ld	r22, Z
    24c2:	71 81       	ldd	r23, Z+1	; 0x01
    24c4:	07 2e       	mov	r0, r23
    24c6:	00 0c       	add	r0, r0
    24c8:	88 0b       	sbc	r24, r24
    24ca:	99 0b       	sbc	r25, r25
    24cc:	0e 5f       	subi	r16, 0xFE	; 254
    24ce:	1f 4f       	sbci	r17, 0xFF	; 255
    24d0:	f3 2d       	mov	r31, r3
    24d2:	ff 76       	andi	r31, 0x6F	; 111
    24d4:	3f 2e       	mov	r3, r31
    24d6:	97 ff       	sbrs	r25, 7
    24d8:	09 c0       	rjmp	.+18     	; 0x24ec <vfprintf+0x212>
    24da:	90 95       	com	r25
    24dc:	80 95       	com	r24
    24de:	70 95       	com	r23
    24e0:	61 95       	neg	r22
    24e2:	7f 4f       	sbci	r23, 0xFF	; 255
    24e4:	8f 4f       	sbci	r24, 0xFF	; 255
    24e6:	9f 4f       	sbci	r25, 0xFF	; 255
    24e8:	f0 68       	ori	r31, 0x80	; 128
    24ea:	3f 2e       	mov	r3, r31
    24ec:	2a e0       	ldi	r18, 0x0A	; 10
    24ee:	30 e0       	ldi	r19, 0x00	; 0
    24f0:	a3 01       	movw	r20, r6
    24f2:	0e 94 a0 13 	call	0x2740	; 0x2740 <__ultoa_invert>
    24f6:	88 2e       	mov	r8, r24
    24f8:	86 18       	sub	r8, r6
    24fa:	45 c0       	rjmp	.+138    	; 0x2586 <vfprintf+0x2ac>
    24fc:	85 37       	cpi	r24, 0x75	; 117
    24fe:	31 f4       	brne	.+12     	; 0x250c <vfprintf+0x232>
    2500:	23 2d       	mov	r18, r3
    2502:	2f 7e       	andi	r18, 0xEF	; 239
    2504:	b2 2e       	mov	r11, r18
    2506:	2a e0       	ldi	r18, 0x0A	; 10
    2508:	30 e0       	ldi	r19, 0x00	; 0
    250a:	25 c0       	rjmp	.+74     	; 0x2556 <vfprintf+0x27c>
    250c:	93 2d       	mov	r25, r3
    250e:	99 7f       	andi	r25, 0xF9	; 249
    2510:	b9 2e       	mov	r11, r25
    2512:	8f 36       	cpi	r24, 0x6F	; 111
    2514:	c1 f0       	breq	.+48     	; 0x2546 <vfprintf+0x26c>
    2516:	18 f4       	brcc	.+6      	; 0x251e <vfprintf+0x244>
    2518:	88 35       	cpi	r24, 0x58	; 88
    251a:	79 f0       	breq	.+30     	; 0x253a <vfprintf+0x260>
    251c:	b5 c0       	rjmp	.+362    	; 0x2688 <vfprintf+0x3ae>
    251e:	80 37       	cpi	r24, 0x70	; 112
    2520:	19 f0       	breq	.+6      	; 0x2528 <vfprintf+0x24e>
    2522:	88 37       	cpi	r24, 0x78	; 120
    2524:	21 f0       	breq	.+8      	; 0x252e <vfprintf+0x254>
    2526:	b0 c0       	rjmp	.+352    	; 0x2688 <vfprintf+0x3ae>
    2528:	e9 2f       	mov	r30, r25
    252a:	e0 61       	ori	r30, 0x10	; 16
    252c:	be 2e       	mov	r11, r30
    252e:	b4 fe       	sbrs	r11, 4
    2530:	0d c0       	rjmp	.+26     	; 0x254c <vfprintf+0x272>
    2532:	fb 2d       	mov	r31, r11
    2534:	f4 60       	ori	r31, 0x04	; 4
    2536:	bf 2e       	mov	r11, r31
    2538:	09 c0       	rjmp	.+18     	; 0x254c <vfprintf+0x272>
    253a:	34 fe       	sbrs	r3, 4
    253c:	0a c0       	rjmp	.+20     	; 0x2552 <vfprintf+0x278>
    253e:	29 2f       	mov	r18, r25
    2540:	26 60       	ori	r18, 0x06	; 6
    2542:	b2 2e       	mov	r11, r18
    2544:	06 c0       	rjmp	.+12     	; 0x2552 <vfprintf+0x278>
    2546:	28 e0       	ldi	r18, 0x08	; 8
    2548:	30 e0       	ldi	r19, 0x00	; 0
    254a:	05 c0       	rjmp	.+10     	; 0x2556 <vfprintf+0x27c>
    254c:	20 e1       	ldi	r18, 0x10	; 16
    254e:	30 e0       	ldi	r19, 0x00	; 0
    2550:	02 c0       	rjmp	.+4      	; 0x2556 <vfprintf+0x27c>
    2552:	20 e1       	ldi	r18, 0x10	; 16
    2554:	32 e0       	ldi	r19, 0x02	; 2
    2556:	f8 01       	movw	r30, r16
    2558:	b7 fe       	sbrs	r11, 7
    255a:	07 c0       	rjmp	.+14     	; 0x256a <vfprintf+0x290>
    255c:	60 81       	ld	r22, Z
    255e:	71 81       	ldd	r23, Z+1	; 0x01
    2560:	82 81       	ldd	r24, Z+2	; 0x02
    2562:	93 81       	ldd	r25, Z+3	; 0x03
    2564:	0c 5f       	subi	r16, 0xFC	; 252
    2566:	1f 4f       	sbci	r17, 0xFF	; 255
    2568:	06 c0       	rjmp	.+12     	; 0x2576 <vfprintf+0x29c>
    256a:	60 81       	ld	r22, Z
    256c:	71 81       	ldd	r23, Z+1	; 0x01
    256e:	80 e0       	ldi	r24, 0x00	; 0
    2570:	90 e0       	ldi	r25, 0x00	; 0
    2572:	0e 5f       	subi	r16, 0xFE	; 254
    2574:	1f 4f       	sbci	r17, 0xFF	; 255
    2576:	a3 01       	movw	r20, r6
    2578:	0e 94 a0 13 	call	0x2740	; 0x2740 <__ultoa_invert>
    257c:	88 2e       	mov	r8, r24
    257e:	86 18       	sub	r8, r6
    2580:	fb 2d       	mov	r31, r11
    2582:	ff 77       	andi	r31, 0x7F	; 127
    2584:	3f 2e       	mov	r3, r31
    2586:	36 fe       	sbrs	r3, 6
    2588:	0d c0       	rjmp	.+26     	; 0x25a4 <vfprintf+0x2ca>
    258a:	23 2d       	mov	r18, r3
    258c:	2e 7f       	andi	r18, 0xFE	; 254
    258e:	a2 2e       	mov	r10, r18
    2590:	89 14       	cp	r8, r9
    2592:	58 f4       	brcc	.+22     	; 0x25aa <vfprintf+0x2d0>
    2594:	34 fe       	sbrs	r3, 4
    2596:	0b c0       	rjmp	.+22     	; 0x25ae <vfprintf+0x2d4>
    2598:	32 fc       	sbrc	r3, 2
    259a:	09 c0       	rjmp	.+18     	; 0x25ae <vfprintf+0x2d4>
    259c:	83 2d       	mov	r24, r3
    259e:	8e 7e       	andi	r24, 0xEE	; 238
    25a0:	a8 2e       	mov	r10, r24
    25a2:	05 c0       	rjmp	.+10     	; 0x25ae <vfprintf+0x2d4>
    25a4:	b8 2c       	mov	r11, r8
    25a6:	a3 2c       	mov	r10, r3
    25a8:	03 c0       	rjmp	.+6      	; 0x25b0 <vfprintf+0x2d6>
    25aa:	b8 2c       	mov	r11, r8
    25ac:	01 c0       	rjmp	.+2      	; 0x25b0 <vfprintf+0x2d6>
    25ae:	b9 2c       	mov	r11, r9
    25b0:	a4 fe       	sbrs	r10, 4
    25b2:	0f c0       	rjmp	.+30     	; 0x25d2 <vfprintf+0x2f8>
    25b4:	fe 01       	movw	r30, r28
    25b6:	e8 0d       	add	r30, r8
    25b8:	f1 1d       	adc	r31, r1
    25ba:	80 81       	ld	r24, Z
    25bc:	80 33       	cpi	r24, 0x30	; 48
    25be:	21 f4       	brne	.+8      	; 0x25c8 <vfprintf+0x2ee>
    25c0:	9a 2d       	mov	r25, r10
    25c2:	99 7e       	andi	r25, 0xE9	; 233
    25c4:	a9 2e       	mov	r10, r25
    25c6:	09 c0       	rjmp	.+18     	; 0x25da <vfprintf+0x300>
    25c8:	a2 fe       	sbrs	r10, 2
    25ca:	06 c0       	rjmp	.+12     	; 0x25d8 <vfprintf+0x2fe>
    25cc:	b3 94       	inc	r11
    25ce:	b3 94       	inc	r11
    25d0:	04 c0       	rjmp	.+8      	; 0x25da <vfprintf+0x300>
    25d2:	8a 2d       	mov	r24, r10
    25d4:	86 78       	andi	r24, 0x86	; 134
    25d6:	09 f0       	breq	.+2      	; 0x25da <vfprintf+0x300>
    25d8:	b3 94       	inc	r11
    25da:	a3 fc       	sbrc	r10, 3
    25dc:	11 c0       	rjmp	.+34     	; 0x2600 <vfprintf+0x326>
    25de:	a0 fe       	sbrs	r10, 0
    25e0:	06 c0       	rjmp	.+12     	; 0x25ee <vfprintf+0x314>
    25e2:	b2 14       	cp	r11, r2
    25e4:	88 f4       	brcc	.+34     	; 0x2608 <vfprintf+0x32e>
    25e6:	28 0c       	add	r2, r8
    25e8:	92 2c       	mov	r9, r2
    25ea:	9b 18       	sub	r9, r11
    25ec:	0e c0       	rjmp	.+28     	; 0x260a <vfprintf+0x330>
    25ee:	b2 14       	cp	r11, r2
    25f0:	60 f4       	brcc	.+24     	; 0x260a <vfprintf+0x330>
    25f2:	b6 01       	movw	r22, r12
    25f4:	80 e2       	ldi	r24, 0x20	; 32
    25f6:	90 e0       	ldi	r25, 0x00	; 0
    25f8:	0e 94 64 13 	call	0x26c8	; 0x26c8 <fputc>
    25fc:	b3 94       	inc	r11
    25fe:	f7 cf       	rjmp	.-18     	; 0x25ee <vfprintf+0x314>
    2600:	b2 14       	cp	r11, r2
    2602:	18 f4       	brcc	.+6      	; 0x260a <vfprintf+0x330>
    2604:	2b 18       	sub	r2, r11
    2606:	02 c0       	rjmp	.+4      	; 0x260c <vfprintf+0x332>
    2608:	98 2c       	mov	r9, r8
    260a:	21 2c       	mov	r2, r1
    260c:	a4 fe       	sbrs	r10, 4
    260e:	10 c0       	rjmp	.+32     	; 0x2630 <vfprintf+0x356>
    2610:	b6 01       	movw	r22, r12
    2612:	80 e3       	ldi	r24, 0x30	; 48
    2614:	90 e0       	ldi	r25, 0x00	; 0
    2616:	0e 94 64 13 	call	0x26c8	; 0x26c8 <fputc>
    261a:	a2 fe       	sbrs	r10, 2
    261c:	17 c0       	rjmp	.+46     	; 0x264c <vfprintf+0x372>
    261e:	a1 fc       	sbrc	r10, 1
    2620:	03 c0       	rjmp	.+6      	; 0x2628 <vfprintf+0x34e>
    2622:	88 e7       	ldi	r24, 0x78	; 120
    2624:	90 e0       	ldi	r25, 0x00	; 0
    2626:	02 c0       	rjmp	.+4      	; 0x262c <vfprintf+0x352>
    2628:	88 e5       	ldi	r24, 0x58	; 88
    262a:	90 e0       	ldi	r25, 0x00	; 0
    262c:	b6 01       	movw	r22, r12
    262e:	0c c0       	rjmp	.+24     	; 0x2648 <vfprintf+0x36e>
    2630:	8a 2d       	mov	r24, r10
    2632:	86 78       	andi	r24, 0x86	; 134
    2634:	59 f0       	breq	.+22     	; 0x264c <vfprintf+0x372>
    2636:	a1 fe       	sbrs	r10, 1
    2638:	02 c0       	rjmp	.+4      	; 0x263e <vfprintf+0x364>
    263a:	8b e2       	ldi	r24, 0x2B	; 43
    263c:	01 c0       	rjmp	.+2      	; 0x2640 <vfprintf+0x366>
    263e:	80 e2       	ldi	r24, 0x20	; 32
    2640:	a7 fc       	sbrc	r10, 7
    2642:	8d e2       	ldi	r24, 0x2D	; 45
    2644:	b6 01       	movw	r22, r12
    2646:	90 e0       	ldi	r25, 0x00	; 0
    2648:	0e 94 64 13 	call	0x26c8	; 0x26c8 <fputc>
    264c:	89 14       	cp	r8, r9
    264e:	38 f4       	brcc	.+14     	; 0x265e <vfprintf+0x384>
    2650:	b6 01       	movw	r22, r12
    2652:	80 e3       	ldi	r24, 0x30	; 48
    2654:	90 e0       	ldi	r25, 0x00	; 0
    2656:	0e 94 64 13 	call	0x26c8	; 0x26c8 <fputc>
    265a:	9a 94       	dec	r9
    265c:	f7 cf       	rjmp	.-18     	; 0x264c <vfprintf+0x372>
    265e:	8a 94       	dec	r8
    2660:	f3 01       	movw	r30, r6
    2662:	e8 0d       	add	r30, r8
    2664:	f1 1d       	adc	r31, r1
    2666:	80 81       	ld	r24, Z
    2668:	b6 01       	movw	r22, r12
    266a:	90 e0       	ldi	r25, 0x00	; 0
    266c:	0e 94 64 13 	call	0x26c8	; 0x26c8 <fputc>
    2670:	81 10       	cpse	r8, r1
    2672:	f5 cf       	rjmp	.-22     	; 0x265e <vfprintf+0x384>
    2674:	22 20       	and	r2, r2
    2676:	09 f4       	brne	.+2      	; 0x267a <vfprintf+0x3a0>
    2678:	42 ce       	rjmp	.-892    	; 0x22fe <vfprintf+0x24>
    267a:	b6 01       	movw	r22, r12
    267c:	80 e2       	ldi	r24, 0x20	; 32
    267e:	90 e0       	ldi	r25, 0x00	; 0
    2680:	0e 94 64 13 	call	0x26c8	; 0x26c8 <fputc>
    2684:	2a 94       	dec	r2
    2686:	f6 cf       	rjmp	.-20     	; 0x2674 <vfprintf+0x39a>
    2688:	f6 01       	movw	r30, r12
    268a:	86 81       	ldd	r24, Z+6	; 0x06
    268c:	97 81       	ldd	r25, Z+7	; 0x07
    268e:	02 c0       	rjmp	.+4      	; 0x2694 <vfprintf+0x3ba>
    2690:	8f ef       	ldi	r24, 0xFF	; 255
    2692:	9f ef       	ldi	r25, 0xFF	; 255
    2694:	2b 96       	adiw	r28, 0x0b	; 11
    2696:	e2 e1       	ldi	r30, 0x12	; 18
    2698:	0c 94 1a 14 	jmp	0x2834	; 0x2834 <__epilogue_restores__>

0000269c <strnlen_P>:
    269c:	fc 01       	movw	r30, r24
    269e:	05 90       	lpm	r0, Z+
    26a0:	61 50       	subi	r22, 0x01	; 1
    26a2:	70 40       	sbci	r23, 0x00	; 0
    26a4:	01 10       	cpse	r0, r1
    26a6:	d8 f7       	brcc	.-10     	; 0x269e <strnlen_P+0x2>
    26a8:	80 95       	com	r24
    26aa:	90 95       	com	r25
    26ac:	8e 0f       	add	r24, r30
    26ae:	9f 1f       	adc	r25, r31
    26b0:	08 95       	ret

000026b2 <strnlen>:
    26b2:	fc 01       	movw	r30, r24
    26b4:	61 50       	subi	r22, 0x01	; 1
    26b6:	70 40       	sbci	r23, 0x00	; 0
    26b8:	01 90       	ld	r0, Z+
    26ba:	01 10       	cpse	r0, r1
    26bc:	d8 f7       	brcc	.-10     	; 0x26b4 <strnlen+0x2>
    26be:	80 95       	com	r24
    26c0:	90 95       	com	r25
    26c2:	8e 0f       	add	r24, r30
    26c4:	9f 1f       	adc	r25, r31
    26c6:	08 95       	ret

000026c8 <fputc>:
    26c8:	0f 93       	push	r16
    26ca:	1f 93       	push	r17
    26cc:	cf 93       	push	r28
    26ce:	df 93       	push	r29
    26d0:	fb 01       	movw	r30, r22
    26d2:	23 81       	ldd	r18, Z+3	; 0x03
    26d4:	21 fd       	sbrc	r18, 1
    26d6:	03 c0       	rjmp	.+6      	; 0x26de <fputc+0x16>
    26d8:	8f ef       	ldi	r24, 0xFF	; 255
    26da:	9f ef       	ldi	r25, 0xFF	; 255
    26dc:	2c c0       	rjmp	.+88     	; 0x2736 <fputc+0x6e>
    26de:	22 ff       	sbrs	r18, 2
    26e0:	16 c0       	rjmp	.+44     	; 0x270e <fputc+0x46>
    26e2:	46 81       	ldd	r20, Z+6	; 0x06
    26e4:	57 81       	ldd	r21, Z+7	; 0x07
    26e6:	24 81       	ldd	r18, Z+4	; 0x04
    26e8:	35 81       	ldd	r19, Z+5	; 0x05
    26ea:	42 17       	cp	r20, r18
    26ec:	53 07       	cpc	r21, r19
    26ee:	44 f4       	brge	.+16     	; 0x2700 <fputc+0x38>
    26f0:	a0 81       	ld	r26, Z
    26f2:	b1 81       	ldd	r27, Z+1	; 0x01
    26f4:	9d 01       	movw	r18, r26
    26f6:	2f 5f       	subi	r18, 0xFF	; 255
    26f8:	3f 4f       	sbci	r19, 0xFF	; 255
    26fa:	31 83       	std	Z+1, r19	; 0x01
    26fc:	20 83       	st	Z, r18
    26fe:	8c 93       	st	X, r24
    2700:	26 81       	ldd	r18, Z+6	; 0x06
    2702:	37 81       	ldd	r19, Z+7	; 0x07
    2704:	2f 5f       	subi	r18, 0xFF	; 255
    2706:	3f 4f       	sbci	r19, 0xFF	; 255
    2708:	37 83       	std	Z+7, r19	; 0x07
    270a:	26 83       	std	Z+6, r18	; 0x06
    270c:	14 c0       	rjmp	.+40     	; 0x2736 <fputc+0x6e>
    270e:	8b 01       	movw	r16, r22
    2710:	ec 01       	movw	r28, r24
    2712:	fb 01       	movw	r30, r22
    2714:	00 84       	ldd	r0, Z+8	; 0x08
    2716:	f1 85       	ldd	r31, Z+9	; 0x09
    2718:	e0 2d       	mov	r30, r0
    271a:	09 95       	icall
    271c:	89 2b       	or	r24, r25
    271e:	e1 f6       	brne	.-72     	; 0x26d8 <fputc+0x10>
    2720:	d8 01       	movw	r26, r16
    2722:	16 96       	adiw	r26, 0x06	; 6
    2724:	8d 91       	ld	r24, X+
    2726:	9c 91       	ld	r25, X
    2728:	17 97       	sbiw	r26, 0x07	; 7
    272a:	01 96       	adiw	r24, 0x01	; 1
    272c:	17 96       	adiw	r26, 0x07	; 7
    272e:	9c 93       	st	X, r25
    2730:	8e 93       	st	-X, r24
    2732:	16 97       	sbiw	r26, 0x06	; 6
    2734:	ce 01       	movw	r24, r28
    2736:	df 91       	pop	r29
    2738:	cf 91       	pop	r28
    273a:	1f 91       	pop	r17
    273c:	0f 91       	pop	r16
    273e:	08 95       	ret

00002740 <__ultoa_invert>:
    2740:	fa 01       	movw	r30, r20
    2742:	aa 27       	eor	r26, r26
    2744:	28 30       	cpi	r18, 0x08	; 8
    2746:	51 f1       	breq	.+84     	; 0x279c <__ultoa_invert+0x5c>
    2748:	20 31       	cpi	r18, 0x10	; 16
    274a:	81 f1       	breq	.+96     	; 0x27ac <__ultoa_invert+0x6c>
    274c:	e8 94       	clt
    274e:	6f 93       	push	r22
    2750:	6e 7f       	andi	r22, 0xFE	; 254
    2752:	6e 5f       	subi	r22, 0xFE	; 254
    2754:	7f 4f       	sbci	r23, 0xFF	; 255
    2756:	8f 4f       	sbci	r24, 0xFF	; 255
    2758:	9f 4f       	sbci	r25, 0xFF	; 255
    275a:	af 4f       	sbci	r26, 0xFF	; 255
    275c:	b1 e0       	ldi	r27, 0x01	; 1
    275e:	3e d0       	rcall	.+124    	; 0x27dc <__ultoa_invert+0x9c>
    2760:	b4 e0       	ldi	r27, 0x04	; 4
    2762:	3c d0       	rcall	.+120    	; 0x27dc <__ultoa_invert+0x9c>
    2764:	67 0f       	add	r22, r23
    2766:	78 1f       	adc	r23, r24
    2768:	89 1f       	adc	r24, r25
    276a:	9a 1f       	adc	r25, r26
    276c:	a1 1d       	adc	r26, r1
    276e:	68 0f       	add	r22, r24
    2770:	79 1f       	adc	r23, r25
    2772:	8a 1f       	adc	r24, r26
    2774:	91 1d       	adc	r25, r1
    2776:	a1 1d       	adc	r26, r1
    2778:	6a 0f       	add	r22, r26
    277a:	71 1d       	adc	r23, r1
    277c:	81 1d       	adc	r24, r1
    277e:	91 1d       	adc	r25, r1
    2780:	a1 1d       	adc	r26, r1
    2782:	20 d0       	rcall	.+64     	; 0x27c4 <__ultoa_invert+0x84>
    2784:	09 f4       	brne	.+2      	; 0x2788 <__ultoa_invert+0x48>
    2786:	68 94       	set
    2788:	3f 91       	pop	r19
    278a:	2a e0       	ldi	r18, 0x0A	; 10
    278c:	26 9f       	mul	r18, r22
    278e:	11 24       	eor	r1, r1
    2790:	30 19       	sub	r19, r0
    2792:	30 5d       	subi	r19, 0xD0	; 208
    2794:	31 93       	st	Z+, r19
    2796:	de f6       	brtc	.-74     	; 0x274e <__ultoa_invert+0xe>
    2798:	cf 01       	movw	r24, r30
    279a:	08 95       	ret
    279c:	46 2f       	mov	r20, r22
    279e:	47 70       	andi	r20, 0x07	; 7
    27a0:	40 5d       	subi	r20, 0xD0	; 208
    27a2:	41 93       	st	Z+, r20
    27a4:	b3 e0       	ldi	r27, 0x03	; 3
    27a6:	0f d0       	rcall	.+30     	; 0x27c6 <__ultoa_invert+0x86>
    27a8:	c9 f7       	brne	.-14     	; 0x279c <__ultoa_invert+0x5c>
    27aa:	f6 cf       	rjmp	.-20     	; 0x2798 <__ultoa_invert+0x58>
    27ac:	46 2f       	mov	r20, r22
    27ae:	4f 70       	andi	r20, 0x0F	; 15
    27b0:	40 5d       	subi	r20, 0xD0	; 208
    27b2:	4a 33       	cpi	r20, 0x3A	; 58
    27b4:	18 f0       	brcs	.+6      	; 0x27bc <__ultoa_invert+0x7c>
    27b6:	49 5d       	subi	r20, 0xD9	; 217
    27b8:	31 fd       	sbrc	r19, 1
    27ba:	40 52       	subi	r20, 0x20	; 32
    27bc:	41 93       	st	Z+, r20
    27be:	02 d0       	rcall	.+4      	; 0x27c4 <__ultoa_invert+0x84>
    27c0:	a9 f7       	brne	.-22     	; 0x27ac <__ultoa_invert+0x6c>
    27c2:	ea cf       	rjmp	.-44     	; 0x2798 <__ultoa_invert+0x58>
    27c4:	b4 e0       	ldi	r27, 0x04	; 4
    27c6:	a6 95       	lsr	r26
    27c8:	97 95       	ror	r25
    27ca:	87 95       	ror	r24
    27cc:	77 95       	ror	r23
    27ce:	67 95       	ror	r22
    27d0:	ba 95       	dec	r27
    27d2:	c9 f7       	brne	.-14     	; 0x27c6 <__ultoa_invert+0x86>
    27d4:	00 97       	sbiw	r24, 0x00	; 0
    27d6:	61 05       	cpc	r22, r1
    27d8:	71 05       	cpc	r23, r1
    27da:	08 95       	ret
    27dc:	9b 01       	movw	r18, r22
    27de:	ac 01       	movw	r20, r24
    27e0:	0a 2e       	mov	r0, r26
    27e2:	06 94       	lsr	r0
    27e4:	57 95       	ror	r21
    27e6:	47 95       	ror	r20
    27e8:	37 95       	ror	r19
    27ea:	27 95       	ror	r18
    27ec:	ba 95       	dec	r27
    27ee:	c9 f7       	brne	.-14     	; 0x27e2 <__ultoa_invert+0xa2>
    27f0:	62 0f       	add	r22, r18
    27f2:	73 1f       	adc	r23, r19
    27f4:	84 1f       	adc	r24, r20
    27f6:	95 1f       	adc	r25, r21
    27f8:	a0 1d       	adc	r26, r0
    27fa:	08 95       	ret

000027fc <__prologue_saves__>:
    27fc:	2f 92       	push	r2
    27fe:	3f 92       	push	r3
    2800:	4f 92       	push	r4
    2802:	5f 92       	push	r5
    2804:	6f 92       	push	r6
    2806:	7f 92       	push	r7
    2808:	8f 92       	push	r8
    280a:	9f 92       	push	r9
    280c:	af 92       	push	r10
    280e:	bf 92       	push	r11
    2810:	cf 92       	push	r12
    2812:	df 92       	push	r13
    2814:	ef 92       	push	r14
    2816:	ff 92       	push	r15
    2818:	0f 93       	push	r16
    281a:	1f 93       	push	r17
    281c:	cf 93       	push	r28
    281e:	df 93       	push	r29
    2820:	cd b7       	in	r28, 0x3d	; 61
    2822:	de b7       	in	r29, 0x3e	; 62
    2824:	ca 1b       	sub	r28, r26
    2826:	db 0b       	sbc	r29, r27
    2828:	0f b6       	in	r0, 0x3f	; 63
    282a:	f8 94       	cli
    282c:	de bf       	out	0x3e, r29	; 62
    282e:	0f be       	out	0x3f, r0	; 63
    2830:	cd bf       	out	0x3d, r28	; 61
    2832:	09 94       	ijmp

00002834 <__epilogue_restores__>:
    2834:	2a 88       	ldd	r2, Y+18	; 0x12
    2836:	39 88       	ldd	r3, Y+17	; 0x11
    2838:	48 88       	ldd	r4, Y+16	; 0x10
    283a:	5f 84       	ldd	r5, Y+15	; 0x0f
    283c:	6e 84       	ldd	r6, Y+14	; 0x0e
    283e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2840:	8c 84       	ldd	r8, Y+12	; 0x0c
    2842:	9b 84       	ldd	r9, Y+11	; 0x0b
    2844:	aa 84       	ldd	r10, Y+10	; 0x0a
    2846:	b9 84       	ldd	r11, Y+9	; 0x09
    2848:	c8 84       	ldd	r12, Y+8	; 0x08
    284a:	df 80       	ldd	r13, Y+7	; 0x07
    284c:	ee 80       	ldd	r14, Y+6	; 0x06
    284e:	fd 80       	ldd	r15, Y+5	; 0x05
    2850:	0c 81       	ldd	r16, Y+4	; 0x04
    2852:	1b 81       	ldd	r17, Y+3	; 0x03
    2854:	aa 81       	ldd	r26, Y+2	; 0x02
    2856:	b9 81       	ldd	r27, Y+1	; 0x01
    2858:	ce 0f       	add	r28, r30
    285a:	d1 1d       	adc	r29, r1
    285c:	0f b6       	in	r0, 0x3f	; 63
    285e:	f8 94       	cli
    2860:	de bf       	out	0x3e, r29	; 62
    2862:	0f be       	out	0x3f, r0	; 63
    2864:	cd bf       	out	0x3d, r28	; 61
    2866:	ed 01       	movw	r28, r26
    2868:	08 95       	ret

0000286a <_exit>:
    286a:	f8 94       	cli

0000286c <__stop_program>:
    286c:	ff cf       	rjmp	.-2      	; 0x286c <__stop_program>
